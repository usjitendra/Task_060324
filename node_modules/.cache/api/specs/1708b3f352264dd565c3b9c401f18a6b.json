{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "y5xqkgq9w6jde"
  },
  "info": {
    "title": "Broker API",
    "description": "Open brokerage accounts, enable crypto and stock trading, and manage the ongoing user experience with Alpaca Broker API",
    "version": "1.1.0",
    "contact": {
      "name": "Alpaca Support",
      "email": "support@alpaca.markets",
      "url": "https://alpaca.markets/support"
    },
    "termsOfService": "https://s3.amazonaws.com/files.alpaca.markets/disclosures/library/TermsAndConditions.pdf"
  },
  "servers": [
    {
      "url": "https://broker-api.sandbox.alpaca.markets",
      "description": "Sandbox endpoint"
    },
    {
      "url": "https://broker-api.alpaca.markets",
      "description": "Production endpoint"
    }
  ],
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Documents"
    },
    {
      "name": "Trading"
    },
    {
      "name": "Assets"
    },
    {
      "name": "Calendar"
    },
    {
      "name": "Events"
    },
    {
      "name": "Funding"
    },
    {
      "name": "Funding Wallets"
    },
    {
      "name": "OAuth"
    },
    {
      "name": "Clock"
    },
    {
      "name": "Journals"
    },
    {
      "name": "Corporate Actions"
    },
    {
      "name": "Watchlist"
    },
    {
      "name": "KYC"
    },
    {
      "name": "Rebalancing"
    },
    {
      "name": "Logos"
    },
    {
      "name": "Reporting"
    },
    {
      "name": "Country Info"
    }
  ],
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "parameters": {
      "ActivityType": {
        "in": "path",
        "name": "activity_type",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "FILL",
            "ACATC",
            "ACATS",
            "CIL",
            "CSD",
            "CSW",
            "DIV",
            "DIVCGL",
            "DIVCGS",
            "DIVNRA",
            "DIVROC",
            "DIVTXEX",
            "FEE",
            "INT",
            "JNLC",
            "JNLS",
            "MA",
            "PTC",
            "REORG",
            "SPIN",
            "SPLIT"
          ]
        },
        "description": "see ActivityType model for details about what the different types mean"
      },
      "Status": {
        "name": "status",
        "in": "query",
        "description": "Status of the orders to list.",
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "all"
          ]
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "The maximum number of orders in response.",
        "schema": {
          "type": "integer",
          "example": 500
        }
      },
      "After": {
        "name": "after",
        "in": "query",
        "description": "The response will include only ones submitted after this timestamp (exclusive.)",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2021-03-16T18:38:01.942282Z"
        }
      },
      "Until": {
        "name": "until",
        "in": "query",
        "description": "The response will include only ones submitted until this timestamp (exclusive.)",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2021-03-16T18:38:01.942282Z"
        }
      },
      "Direction": {
        "name": "direction",
        "in": "query",
        "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "example": "desc"
        }
      },
      "Sort": {
        "name": "sort",
        "in": "query",
        "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "example": "desc"
        }
      },
      "Nested": {
        "name": "nested",
        "in": "query",
        "description": "If true, the result will roll up multi-leg orders under the legs field of primary order.",
        "schema": {
          "type": "boolean",
          "example": false
        }
      },
      "Symbols": {
        "name": "symbols",
        "in": "query",
        "description": "A comma-separated list of symbols to filter by.",
        "schema": {
          "type": "string",
          "example": "AAPL,TSLA,MSFT"
        }
      },
      "AccountID": {
        "name": "account_id",
        "in": "path",
        "required": true,
        "description": "Account identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OrderID": {
        "name": "order_id",
        "in": "path",
        "required": true,
        "description": "Order identifier.",
        "schema": {
          "type": "string"
        }
      },
      "DocumentID": {
        "name": "document_id",
        "in": "path",
        "required": true,
        "description": "Document identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "DocumentType": {
        "name": "type",
        "in": "query",
        "required": false,
        "description": "See DocumentType model for reference and explanation of values",
        "schema": {
          "example": "identity_verification",
          "type": "string",
          "enum": [
            "identity_verification",
            "address_verification",
            "date_of_birth_verification",
            "tax_id_verification",
            "account_approval_letter",
            "cip_result"
          ]
        }
      },
      "PageToken": {
        "name": "page_token",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "TODO: find a good way to generalize the description of page_tokens"
      }
    },
    "schemas": {
      "Account": {
        "type": "object",
        "description": "Represents high level account info. Used when returning entire account information would not be useful like the getAllAccounts operation",
        "x-examples": {
          "example-1": {
            "id": "0d18ae51-3c94-4511-b209-101e1666416b",
            "account_number": "9034005019",
            "status": "APPROVED",
            "currency": "USD",
            "created_at": "2019-09-30T23:55:31.185998Z",
            "last_equity": "1500.65"
          }
        },
        "x-stoplight": {
          "id": "mg5a9g65p0k72"
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID that identifies the account for later reference"
          },
          "account_number": {
            "type": "string",
            "description": "A human-readable account number that can be shown to the end user",
            "nullable": true
          },
          "account_type": {
            "type": "string",
            "title": "AccountType",
            "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
            "enum": [
              "trading",
              "custodial",
              "donor_advised"
            ],
            "example": "trading",
            "x-stoplight": {
              "id": "l6z0ingxys2ei"
            }
          },
          "status": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "crypto_status": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "currency": {
            "title": "Currency",
            "x-stoplight": {
              "id": "go8dbrpz277wf"
            },
            "type": "string",
            "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp (RFC3339) of account creation."
          },
          "last_equity": {
            "type": "string",
            "format": "decimal",
            "description": "EOD equity calculation (cash + long market value + short market value)"
          },
          "enabled_assets": {
            "x-stoplight": {
              "id": "44f1cfyta748h"
            },
            "type": "array",
            "description": "Assets the user has enabled and is able to trade once status and/or crypto_status are ACTIVE",
            "items": {
              "type": "string",
              "enum": [
                "us_equity",
                "crypto"
              ],
              "x-stoplight": {
                "id": "0stvwzkbv2e0u"
              }
            }
          },
          "contact": {
            "type": "object",
            "description": "Contact is the model for the account owner contact information.\n",
            "x-stoplight": {
              "id": "qcig9irpj9334"
            },
            "properties": {
              "email_address": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "example": "+15556667788",
                "description": "Phone number should include the country code, format: “+15555555555”"
              },
              "street_address": {
                "type": "array",
                "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                "items": {
                  "type": "string",
                  "example": "20 N San Mateo Dr",
                  "x-stoplight": {
                    "id": "10wajx98hc79a"
                  }
                }
              },
              "unit": {
                "type": "string",
                "x-stoplight": {
                  "id": "yybrq2o2nb5gy"
                },
                "description": "The specific apartment number if applicable"
              },
              "city": {
                "type": "string",
                "example": "San Mateo"
              },
              "state": {
                "type": "string",
                "example": "CA",
                "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
              },
              "postal_code": {
                "type": "string",
                "example": "94401"
              }
            },
            "required": [
              "email_address",
              "phone_number",
              "street_address"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Identity is the model to provide account owner’s identity information.\n",
            "example": {
              "given_name": "John",
              "family_name": "Doe",
              "date_of_birth": "1990-01-01",
              "tax_id": "666-55-4321",
              "tax_id_type": "USA_SSN",
              "country_of_citizenship": "AUS",
              "country_of_birth": "AUS",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ]
            },
            "x-stoplight": {
              "id": "oi43k8rpw570e"
            },
            "properties": {
              "given_name": {
                "type": "string",
                "example": "John",
                "description": "The first/given name of the user."
              },
              "family_name": {
                "type": "string",
                "example": "Doe",
                "description": "The last name (surname) of the user."
              },
              "middle_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "p03brcsyyjbcq"
                },
                "description": "The middle name of the user."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "example": "1990-01-01",
                "description": "The date of birth in \"YYYY-MM-DD\" format."
              },
              "tax_id": {
                "type": "string",
                "example": "666-55-4321",
                "description": "Required if tax_id_type is set."
              },
              "tax_id_type": {
                "type": "string",
                "title": "TaxIdType",
                "enum": [
                  "USA_SSN",
                  "ARG_AG_CUIT",
                  "AUS_TFN",
                  "AUS_ABN",
                  "BOL_NIT",
                  "BRA_CPF",
                  "CHL_RUT",
                  "COL_NIT",
                  "CRI_NITE",
                  "DEU_TAX_ID",
                  "DOM_RNC",
                  "ECU_RUC",
                  "FRA_SPI",
                  "GBR_UTR",
                  "GBR_NINO",
                  "GTM_NIT",
                  "HND_RTN",
                  "HUN_TIN",
                  "IDN_KTP",
                  "IND_PAN",
                  "ISR_TAX_ID",
                  "ITA_TAX_ID",
                  "JPN_TAX_ID",
                  "MEX_RFC",
                  "NIC_RUC",
                  "NLD_TIN",
                  "PAN_RUC",
                  "PER_RUC",
                  "PRY_RUC",
                  "SGP_NRIC",
                  "SGP_FIN",
                  "SGP_ASGD",
                  "SGP_ITR",
                  "SLV_NIT",
                  "SWE_TAX_ID",
                  "URY_RUT",
                  "VEN_RIF",
                  "NATIONAL_ID",
                  "PASSPORT",
                  "PERMANENT_RESIDENT",
                  "DRIVER_LICENSE",
                  "OTHER_GOV_ID",
                  "NOT_SPECIFIED"
                ],
                "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                "example": "USA_SSN",
                "x-stoplight": {
                  "id": "ulm45kpr2peox"
                }
              },
              "country_of_citizenship": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_birth": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_tax_residence": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "funding_source": {
                "type": "array",
                "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                "items": {
                  "type": "string",
                  "enum": [
                    "employment_income",
                    "investments",
                    "inheritance",
                    "business_income",
                    "savings",
                    "family"
                  ]
                }
              },
              "annual_income_min": {
                "type": "number",
                "description": "The lower bound of the user's annual income."
              },
              "annual_income_max": {
                "type": "number",
                "description": "The upper bound of the user's annual income."
              },
              "liquid_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's liquid net worth."
              },
              "liquid_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's liquid net worth."
              },
              "total_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's total net worth."
              },
              "total_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's total net worth."
              },
              "visa_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "y5a5r7inu02w8"
                },
                "description": "Only used to collect visa types for users residing in the USA."
              },
              "visa_expiration_date": {
                "type": "string",
                "x-stoplight": {
                  "id": "q7b33k53b5alk"
                },
                "description": "Required if `visa_type` is set.",
                "format": "date"
              },
              "date_of_departure_from_usa": {
                "type": "string",
                "x-stoplight": {
                  "id": "yasik2wcmshea"
                },
                "format": "date",
                "description": "Required if `visa_type` = B1 or B2"
              },
              "permanent_resident": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "jlvzbu3cevmju"
                },
                "description": "Only used to collect permanent residence status in the USA."
              },
              "extra": {
                "type": "object",
                "description": "Any additional information used for KYC purposes\n"
              }
            },
            "required": [
              "given_name",
              "family_name",
              "date_of_birth",
              "tax_id_type",
              "country_of_tax_residence",
              "funding_source"
            ]
          },
          "disclosures": {
            "type": "object",
            "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
            "example": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false
            },
            "x-stoplight": {
              "id": "h3ui3575tdh6q"
            },
            "properties": {
              "employment_status": {
                "type": "string",
                "enum": [
                  "unemployed",
                  "employed",
                  "student",
                  "retired"
                ],
                "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
              },
              "employer_name": {
                "type": "string",
                "description": "The name of the employer if the user is employed."
              },
              "employer_address": {
                "type": "string",
                "description": "The employer's address if the user is employed."
              },
              "employment_position": {
                "type": "string",
                "description": "The user's position if they are employed."
              },
              "is_control_person": {
                "type": "boolean",
                "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
              },
              "is_affiliated_exchange_or_finra": {
                "type": "boolean",
                "description": "Whether user is affiliated with any exchanges or FINRA."
              },
              "is_politically_exposed": {
                "type": "boolean",
                "description": "Whether the user is politically exposed."
              },
              "immediate_family_exposed": {
                "type": "boolean",
                "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
              },
              "context": {
                "type": "array",
                "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                "nullable": true,
                "items": {
                  "title": "DisclosureContextAnnotation",
                  "type": "object",
                  "properties": {
                    "context_type": {
                      "type": "string",
                      "enum": [
                        "CONTROLLED_FIRM",
                        "IMMEDIATE_FAMILY_EXPOSED",
                        "AFFILIATE_FIRM"
                      ],
                      "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_street_address": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_city": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_state": {
                      "type": "string",
                      "description": "Required if and only if `company_country` is `USA`."
                    },
                    "company_country": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_compliance_email": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "given_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    },
                    "family_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    }
                  },
                  "required": [
                    "context_type"
                  ],
                  "x-stoplight": {
                    "id": "rf62uwbtfdfpk"
                  }
                }
              }
            },
            "required": [
              "is_control_person",
              "is_affiliated_exchange_or_finra",
              "is_politically_exposed",
              "immediate_family_exposed"
            ]
          },
          "documents": {
            "type": "array",
            "x-stoplight": {
              "id": "w22zyoy6wxhbd"
            },
            "items": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "x-examples": {
                "example": [
                  {
                    "document_id": "b792e8ae-2cb4-4209-85b9-32be4c2fcdd6",
                    "document_type": "account_statement",
                    "document_date": "2019-08-24"
                  }
                ]
              },
              "x-stoplight": {
                "id": "qlhjbktu0o14c"
              },
              "items": {
                "type": "object",
                "properties": {
                  "document_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid",
                    "description": "ID of the Document"
                  },
                  "document_type": {
                    "type": "string",
                    "enum": [
                      "identity_verification",
                      "address_verification",
                      "date_of_birth_verification",
                      "tax_id_verification",
                      "account_approval_letter",
                      "cip_result",
                      "w8ben",
                      "w9",
                      "limited_trading_authorization"
                    ],
                    "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                    "example": "identity_verification",
                    "x-stoplight": {
                      "id": "8u8j8gn6uuzk8"
                    }
                  },
                  "created_at": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "2dxllw6r8po62"
                    },
                    "format": "date-time"
                  },
                  "mime_type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "38y7l8mk02mtt"
                    },
                    "description": "The format of content encoded by the string"
                  },
                  "content": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "o696aus9wb91b"
                    },
                    "description": "Base64 string representing the document"
                  },
                  "document_sub_type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "xzxw5qb7hnt3r"
                    },
                    "description": "The specific type of document, e.g. passport"
                  }
                },
                "required": [
                  "document_id",
                  "document_type"
                ]
              }
            }
          },
          "agreements": {
            "type": "array",
            "x-stoplight": {
              "id": "6igg6t87mkteb"
            },
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "ucn8nh8ei4mag"
              },
              "properties": {
                "agreement": {
                  "type": "string",
                  "title": "AgreementType",
                  "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                  "enum": [
                    "margin_agreement",
                    "account_agreement",
                    "customer_agreement",
                    "crypto_agreement"
                  ],
                  "example": "customer_agreement",
                  "x-stoplight": {
                    "id": "pw9nog92a1hgz"
                  }
                },
                "signed_at": {
                  "type": "string",
                  "example": "2019-09-11T18:09:33Z",
                  "format": "date-time",
                  "description": "The timestamp the agreement was signed."
                },
                "ip_address": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "185.13.21.99",
                  "description": "The ip_address the signed agreements were sent from by the user."
                },
                "revision": {
                  "type": "string",
                  "description": "The revision date if agreement is a revision."
                }
              },
              "required": [
                "agreement",
                "signed_at",
                "ip_address"
              ]
            }
          },
          "trusted_contact": {
            "type": "object",
            "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
            "properties": {
              "given_name": {
                "type": "string",
                "example": "Jane"
              },
              "family_name": {
                "type": "string",
                "example": "Doe"
              },
              "email_address": {
                "type": "string",
                "format": "email",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                "example": "jane.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "street_address": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "city": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "state": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "postal_code": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "country": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
              }
            },
            "required": [
              "given_name",
              "family_name"
            ],
            "example": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "jane.doe@example.com"
            },
            "x-stoplight": {
              "id": "fyme2rvoeickd"
            }
          }
        },
        "required": [
          "id",
          "account_number",
          "status",
          "currency",
          "created_at",
          "last_equity"
        ]
      },
      "TradeAccount": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4",
            "account_number": "927584925",
            "status": "ACTIVE",
            "currency": "USD",
            "buying_power": "103556.8572572922",
            "regt_buying_power": "52921.2982330664",
            "daytrading_buying_power": "103556.8572572922",
            "cash": "24861.91",
            "cash_withdrawable": "17861.91",
            "cash_transferable": "24861.91",
            "accrued_fees": "0",
            "pending_transfer_out": "0",
            "portfolio_value": "28059.3882330664",
            "pattern_day_trader": true,
            "trading_blocked": false,
            "transfers_blocked": false,
            "account_blocked": false,
            "created_at": "2021-03-01T13:28:49.270232Z",
            "trade_suspended_by_user": false,
            "multiplier": "2",
            "shorting_enabled": true,
            "equity": "28059.3882330664",
            "last_equity": "26977.323677655",
            "long_market_value": "3197.4782330664",
            "short_market_value": "0",
            "initial_margin": "1598.7391165332",
            "maintenance_margin": "959.24346991992",
            "last_maintenance_margin": "934.6241032965",
            "sma": "26758.0590204615",
            "daytrade_count": 0,
            "previous_close": "2021-04-01T19:00:00-04:00",
            "last_long_market_value": "3115.413677655",
            "last_short_market_value": "0",
            "last_cash": "23861.91",
            "last_initial_margin": "1557.7068388275",
            "last_regt_buying_power": "50839.233677655",
            "last_daytrading_buying_power": "104433.9158860662",
            "last_buying_power": "104433.9158860662",
            "last_daytrade_count": 0,
            "clearing_broker": "VELOX"
          },
          "example-2": {
            "id": "56712986-9ff7-4d8f-8e52-077e099e533e",
            "account_number": "601612064",
            "status": "ACTIVE",
            "crypto_status": "PAPER_ONLY",
            "currency": "USD",
            "buying_power": "83567.42",
            "regt_buying_power": "83567.42",
            "daytrading_buying_power": "0",
            "non_marginable_buying_power": "41783.71",
            "cash": "83567.42",
            "cash_withdrawable": "0",
            "cash_transferable": "41783.71",
            "accrued_fees": "0",
            "pending_transfer_out": "0",
            "pending_transfer_in": "0",
            "portfolio_value": "83567.42",
            "pattern_day_trader": false,
            "trading_blocked": false,
            "transfers_blocked": false,
            "account_blocked": false,
            "created_at": "2022-01-21T21:25:26.713802Z",
            "trade_suspended_by_user": false,
            "multiplier": "1",
            "shorting_enabled": false,
            "equity": "83567.42",
            "last_equity": "41783.71",
            "long_market_value": "0",
            "short_market_value": "0",
            "initial_margin": "0",
            "maintenance_margin": "0",
            "last_maintenance_margin": "0",
            "sma": "0",
            "daytrade_count": 0,
            "previous_close": "2022-02-08T19:00:00-05:00",
            "last_long_market_value": "0",
            "last_short_market_value": "0",
            "last_cash": "41783.71",
            "last_initial_margin": "0",
            "last_regt_buying_power": "41783.71",
            "last_daytrading_buying_power": "0",
            "last_buying_power": "41783.71",
            "last_daytrade_count": 0,
            "clearing_broker": "VELOX"
          }
        },
        "description": "This is an extended version of the Account model found [in the trading api](https://alpaca.markets/docs/api-references/trading-api/account/#account-entity).\n\nExtra data has been added that would be useful for brokers.",
        "properties": {
          "id": {
            "type": "string",
            "example": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4",
            "format": "uuid",
            "description": "The account ID"
          },
          "account_number": {
            "type": "string",
            "example": "927584925",
            "description": "The account number",
            "nullable": true
          },
          "status": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Always USD"
          },
          "buying_power": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Current available cash buying power. If multiplier = 2 then buying_power = max(equity-initial_margin(0) * 2). If multiplier = 1 then buying_power = cash."
          },
          "regt_buying_power": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "User’s buying power under Regulation T (excess equity - (equity - margin value) - * margin multiplier)"
          },
          "daytrading_buying_power": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Your buying power for day trades (continuously updated value)"
          },
          "cash": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Cash balance"
          },
          "cash_withdrawable": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Cash available for withdrawl"
          },
          "cash_transferable": {
            "type": "string",
            "example": "12345.6789",
            "description": "Cash available for transfer (JNLC)"
          },
          "pending_transfer_out": {
            "type": "string",
            "example": "12345.6789",
            "description": "Cash pending transfer out"
          },
          "portfolio_value": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Total value of cash + holding positions. (This field is deprecated. It is equivalent to the equity field.)"
          },
          "pattern_day_trader": {
            "type": "boolean",
            "example": false,
            "description": "Whether account is flagged as pattern day trader or not"
          },
          "trading_blocked": {
            "type": "boolean",
            "example": false,
            "description": "If true, the account is not allowed to place orders."
          },
          "transfers_blocked": {
            "type": "boolean",
            "example": false,
            "description": "If true, the account is not allowed to request money transfers."
          },
          "account_blocked": {
            "type": "boolean",
            "example": false,
            "description": "If true, the account activity by user is prohibited."
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-01T13:28:49.270232Z",
            "description": "Timestamp this account was created at"
          },
          "trade_suspended_by_user": {
            "type": "boolean",
            "example": false,
            "description": "If true, the account is not allowed to place orders."
          },
          "multiplier": {
            "type": "string",
            "format": "decimal",
            "example": "2",
            "description": "“1”, “2”, \"3\", or \"4\""
          },
          "shorting_enabled": {
            "type": "boolean",
            "example": false,
            "description": "Flag to denote whether or not the account is permitted to short"
          },
          "equity": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "cash + long_market_value + short_market_value"
          },
          "last_equity": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Equity as of previous trading day at 16:00:00 ET"
          },
          "long_market_value": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Real-time MtM value of all long positions held in the account"
          },
          "short_market_value": {
            "type": "string",
            "example": "0",
            "format": "decimal",
            "description": "Real-time MtM value of all short positions held in the account"
          },
          "initial_margin": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Reg T initial margin requirement (continuously updated value)"
          },
          "maintenance_margin": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Maintenance margin requirement (continuously updated value)"
          },
          "last_maintenance_margin": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Maintenance margin requirement on the previous trading day"
          },
          "sma": {
            "type": "string",
            "example": "12345.6789",
            "format": "decimal",
            "description": "Value of Special Memorandum Account (will be used at a later date to provide additional buying_power)"
          },
          "daytrade_count": {
            "type": "integer",
            "example": 0,
            "description": "The current number of daytrades that have been made in the last 5 trading days (inclusive of today)"
          },
          "previous_close": {
            "type": "string",
            "example": "2021-04-01T19:00:00-04:00",
            "description": "Previous sessions close time"
          },
          "last_long_market_value": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of all long positions as of previous trading day at 16:00:00 ET"
          },
          "last_short_market_value": {
            "type": "string",
            "example": "0",
            "description": "Value of all short positions as of previous trading day at 16:00:00 ET"
          },
          "last_cash": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of all cash as of previous trading day at 16:00:00 ET"
          },
          "last_initial_margin": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of Reg T margin as of previous trading day at 16:00:00 ET"
          },
          "last_regt_buying_power": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of Reg T buying power as of previous trading day at 16:00:00 ET"
          },
          "last_daytrading_buying_power": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of daytrading buying power as of previous trading day at 16:00:00 ET"
          },
          "last_buying_power": {
            "type": "string",
            "example": "12345.6789",
            "description": "Value of buying_power as of previous trading day at 16:00:00 ET"
          },
          "last_daytrade_count": {
            "type": "integer",
            "example": 0,
            "description": "Value of daytrade count as of previous trading day at 16:00:00 ET"
          },
          "clearing_broker": {
            "type": "string",
            "example": "Velox",
            "description": "Clearing broker"
          }
        },
        "required": [
          "id",
          "account_number",
          "status",
          "currency",
          "created_at",
          "last_equity",
          "equity",
          "cash",
          "buying_power"
        ],
        "x-stoplight": {
          "id": "fib073ib25xrv"
        }
      },
      "AccountStatus": {
        "type": "string",
        "example": "ACTIVE",
        "enum": [
          "INACTIVE",
          "ONBOARDING",
          "SUBMITTED",
          "SUBMISSION_FAILED",
          "ACTION_REQUIRED",
          "ACCOUNT_UPDATED",
          "APPROVAL_PENDING",
          "APPROVED",
          "REJECTED",
          "ACTIVE",
          "ACCOUNT_CLOSED"
        ],
        "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
        "x-stoplight": {
          "id": "zxsbg55ojatc8"
        }
      },
      "AccountType": {
        "type": "string",
        "title": "AccountType",
        "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
        "enum": [
          "trading",
          "custodial",
          "donor_advised"
        ],
        "example": "trading",
        "x-stoplight": {
          "id": "l6z0ingxys2ei"
        }
      },
      "AccountExtended": {
        "type": "object",
        "description": "Represents an account with all data available. If your api response is missing some of these fields, there is a good chance you are using a route that returns `Account` instances instead of these.",
        "x-examples": {
          "example-1": {
            "id": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
            "account_number": "601842165",
            "status": "ACTIVE",
            "crypto_status": "INACTIVE",
            "currency": "USD",
            "last_equity": "40645.13",
            "created_at": "2022-01-21T21:25:26.583576Z",
            "contact": {
              "email_address": "strange_elbakyan_97324509@example.com",
              "phone_number": "614-555-0697",
              "street_address": [
                "20 N San Mateo Dr"
              ],
              "city": "San Mateo",
              "state": "CA",
              "postal_code": "94401"
            },
            "identity": {
              "given_name": "Strange",
              "family_name": "Elbakyan",
              "date_of_birth": "1970-01-01",
              "tax_id_type": "USA_SNN",
              "country_of_citizenship": "USA",
              "country_of_birth": "USA",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ],
              "visa_type": null,
              "visa_expiration_date": null,
              "date_of_departure_from_usa": null,
              "permanent_resident": null
            },
            "disclosures": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false,
              "is_discretionary": false
            },
            "agreements": [
              {
                "agreement": "margin_agreement",
                "signed_at": "2022-01-21T21:25:26.579487214Z",
                "ip_address": "127.0.0.1",
                "revision": null
              },
              {
                "agreement": "customer_agreement",
                "signed_at": "2022-01-21T21:25:26.579487214Z",
                "ip_address": "127.0.0.1",
                "revision": null
              },
              {
                "agreement": "account_agreement",
                "signed_at": "2022-01-21T21:25:26.579487214Z",
                "ip_address": "127.0.0.1",
                "revision": null
              }
            ],
            "documents": [
              {
                "document_type": "identity_verification",
                "document_sub_type": "passport",
                "id": "d5af1585-6c60-494d-9ea5-c5df62704229",
                "content": "https://s3.amazonaws.com/stg.alpaca.markets/documents/accounts/3dcb795c-3ccc-402a-abb9-07e26a1b1326/2490f5d9-8988-4405-a3e0-d76e65de13c2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJLDF4SCWSL6HUQKA%2F20220210%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220210T162205Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=bc6cc0f541d569623f3973fb83734d7960a69886e8b175a9d472f666b87419f1",
                "created_at": "2022-01-21T21:25:28.184231Z"
              }
            ],
            "trusted_contact": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "strange_elbakyan_97324509@example.com"
            },
            "account_type": "trading",
            "trading_configurations": null
          }
        },
        "x-stoplight": {
          "id": "oqrvgmjlw9nuj"
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "account_number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "crypto_status": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "kyc_result": {
            "type": "object",
            "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
            "x-stoplight": {
              "id": "m6so9tt7secvm"
            },
            "properties": {
              "reject": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "accept": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "indeterminate": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "addidional_information": {
                "type": "string",
                "description": "Used to display a custom message."
              },
              "summary": {
                "type": "string",
                "x-stoplight": {
                  "id": "dfz7vejxhvxyk"
                },
                "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
              }
            }
          },
          "currency": {
            "title": "Currency",
            "x-stoplight": {
              "id": "go8dbrpz277wf"
            },
            "type": "string",
            "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
          },
          "last_equity": {
            "type": "string",
            "format": "decimal"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "contact": {
            "type": "object",
            "description": "Contact is the model for the account owner contact information.\n",
            "x-stoplight": {
              "id": "qcig9irpj9334"
            },
            "properties": {
              "email_address": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "example": "+15556667788",
                "description": "Phone number should include the country code, format: “+15555555555”"
              },
              "street_address": {
                "type": "array",
                "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                "items": {
                  "type": "string",
                  "example": "20 N San Mateo Dr",
                  "x-stoplight": {
                    "id": "10wajx98hc79a"
                  }
                }
              },
              "unit": {
                "type": "string",
                "x-stoplight": {
                  "id": "yybrq2o2nb5gy"
                },
                "description": "The specific apartment number if applicable"
              },
              "city": {
                "type": "string",
                "example": "San Mateo"
              },
              "state": {
                "type": "string",
                "example": "CA",
                "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
              },
              "postal_code": {
                "type": "string",
                "example": "94401"
              }
            },
            "required": [
              "email_address",
              "phone_number",
              "street_address"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Identity is the model to provide account owner’s identity information.\n",
            "example": {
              "given_name": "John",
              "family_name": "Doe",
              "date_of_birth": "1990-01-01",
              "tax_id": "666-55-4321",
              "tax_id_type": "USA_SSN",
              "country_of_citizenship": "AUS",
              "country_of_birth": "AUS",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ]
            },
            "x-stoplight": {
              "id": "oi43k8rpw570e"
            },
            "properties": {
              "given_name": {
                "type": "string",
                "example": "John",
                "description": "The first/given name of the user."
              },
              "family_name": {
                "type": "string",
                "example": "Doe",
                "description": "The last name (surname) of the user."
              },
              "middle_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "p03brcsyyjbcq"
                },
                "description": "The middle name of the user."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "example": "1990-01-01",
                "description": "The date of birth in \"YYYY-MM-DD\" format."
              },
              "tax_id": {
                "type": "string",
                "example": "666-55-4321",
                "description": "Required if tax_id_type is set."
              },
              "tax_id_type": {
                "type": "string",
                "title": "TaxIdType",
                "enum": [
                  "USA_SSN",
                  "ARG_AG_CUIT",
                  "AUS_TFN",
                  "AUS_ABN",
                  "BOL_NIT",
                  "BRA_CPF",
                  "CHL_RUT",
                  "COL_NIT",
                  "CRI_NITE",
                  "DEU_TAX_ID",
                  "DOM_RNC",
                  "ECU_RUC",
                  "FRA_SPI",
                  "GBR_UTR",
                  "GBR_NINO",
                  "GTM_NIT",
                  "HND_RTN",
                  "HUN_TIN",
                  "IDN_KTP",
                  "IND_PAN",
                  "ISR_TAX_ID",
                  "ITA_TAX_ID",
                  "JPN_TAX_ID",
                  "MEX_RFC",
                  "NIC_RUC",
                  "NLD_TIN",
                  "PAN_RUC",
                  "PER_RUC",
                  "PRY_RUC",
                  "SGP_NRIC",
                  "SGP_FIN",
                  "SGP_ASGD",
                  "SGP_ITR",
                  "SLV_NIT",
                  "SWE_TAX_ID",
                  "URY_RUT",
                  "VEN_RIF",
                  "NATIONAL_ID",
                  "PASSPORT",
                  "PERMANENT_RESIDENT",
                  "DRIVER_LICENSE",
                  "OTHER_GOV_ID",
                  "NOT_SPECIFIED"
                ],
                "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                "example": "USA_SSN",
                "x-stoplight": {
                  "id": "ulm45kpr2peox"
                }
              },
              "country_of_citizenship": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_birth": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_tax_residence": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "funding_source": {
                "type": "array",
                "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                "items": {
                  "type": "string",
                  "enum": [
                    "employment_income",
                    "investments",
                    "inheritance",
                    "business_income",
                    "savings",
                    "family"
                  ]
                }
              },
              "annual_income_min": {
                "type": "number",
                "description": "The lower bound of the user's annual income."
              },
              "annual_income_max": {
                "type": "number",
                "description": "The upper bound of the user's annual income."
              },
              "liquid_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's liquid net worth."
              },
              "liquid_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's liquid net worth."
              },
              "total_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's total net worth."
              },
              "total_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's total net worth."
              },
              "visa_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "y5a5r7inu02w8"
                },
                "description": "Only used to collect visa types for users residing in the USA."
              },
              "visa_expiration_date": {
                "type": "string",
                "x-stoplight": {
                  "id": "q7b33k53b5alk"
                },
                "description": "Required if `visa_type` is set.",
                "format": "date"
              },
              "date_of_departure_from_usa": {
                "type": "string",
                "x-stoplight": {
                  "id": "yasik2wcmshea"
                },
                "format": "date",
                "description": "Required if `visa_type` = B1 or B2"
              },
              "permanent_resident": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "jlvzbu3cevmju"
                },
                "description": "Only used to collect permanent residence status in the USA."
              },
              "extra": {
                "type": "object",
                "description": "Any additional information used for KYC purposes\n"
              }
            },
            "required": [
              "given_name",
              "family_name",
              "date_of_birth",
              "tax_id_type",
              "country_of_tax_residence",
              "funding_source"
            ]
          },
          "disclosures": {
            "type": "object",
            "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
            "example": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false
            },
            "x-stoplight": {
              "id": "h3ui3575tdh6q"
            },
            "properties": {
              "employment_status": {
                "type": "string",
                "enum": [
                  "unemployed",
                  "employed",
                  "student",
                  "retired"
                ],
                "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
              },
              "employer_name": {
                "type": "string",
                "description": "The name of the employer if the user is employed."
              },
              "employer_address": {
                "type": "string",
                "description": "The employer's address if the user is employed."
              },
              "employment_position": {
                "type": "string",
                "description": "The user's position if they are employed."
              },
              "is_control_person": {
                "type": "boolean",
                "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
              },
              "is_affiliated_exchange_or_finra": {
                "type": "boolean",
                "description": "Whether user is affiliated with any exchanges or FINRA."
              },
              "is_politically_exposed": {
                "type": "boolean",
                "description": "Whether the user is politically exposed."
              },
              "immediate_family_exposed": {
                "type": "boolean",
                "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
              },
              "context": {
                "type": "array",
                "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                "nullable": true,
                "items": {
                  "title": "DisclosureContextAnnotation",
                  "type": "object",
                  "properties": {
                    "context_type": {
                      "type": "string",
                      "enum": [
                        "CONTROLLED_FIRM",
                        "IMMEDIATE_FAMILY_EXPOSED",
                        "AFFILIATE_FIRM"
                      ],
                      "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_street_address": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_city": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_state": {
                      "type": "string",
                      "description": "Required if and only if `company_country` is `USA`."
                    },
                    "company_country": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_compliance_email": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "given_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    },
                    "family_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    }
                  },
                  "required": [
                    "context_type"
                  ],
                  "x-stoplight": {
                    "id": "rf62uwbtfdfpk"
                  }
                }
              }
            },
            "required": [
              "is_control_person",
              "is_affiliated_exchange_or_finra",
              "is_politically_exposed",
              "immediate_family_exposed"
            ]
          },
          "agreements": {
            "type": "array",
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "ucn8nh8ei4mag"
              },
              "properties": {
                "agreement": {
                  "type": "string",
                  "title": "AgreementType",
                  "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                  "enum": [
                    "margin_agreement",
                    "account_agreement",
                    "customer_agreement",
                    "crypto_agreement"
                  ],
                  "example": "customer_agreement",
                  "x-stoplight": {
                    "id": "pw9nog92a1hgz"
                  }
                },
                "signed_at": {
                  "type": "string",
                  "example": "2019-09-11T18:09:33Z",
                  "format": "date-time",
                  "description": "The timestamp the agreement was signed."
                },
                "ip_address": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "185.13.21.99",
                  "description": "The ip_address the signed agreements were sent from by the user."
                },
                "revision": {
                  "type": "string",
                  "description": "The revision date if agreement is a revision."
                }
              },
              "required": [
                "agreement",
                "signed_at",
                "ip_address"
              ]
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "If an account has documents on the application submission,\nit has the ApplicationDocument model in exchange with\nDocumentUpload.\n",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "document_type": {
                  "type": "string",
                  "enum": [
                    "identity_verification",
                    "address_verification",
                    "date_of_birth_verification",
                    "tax_id_verification",
                    "account_approval_letter",
                    "cip_result",
                    "w8ben",
                    "w9",
                    "limited_trading_authorization"
                  ],
                  "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                  "example": "identity_verification",
                  "x-stoplight": {
                    "id": "8u8j8gn6uuzk8"
                  }
                },
                "document_sub_type": {
                  "type": "string"
                },
                "mime_type": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "document_type",
                "created_at"
              ],
              "example": {
                "id": "0d18ae51-3c94-4511-b209-101e1666416b",
                "document_type": "identity_verification",
                "document_sub_type": "passport",
                "mime_type": "image/jpeg",
                "created_at": "2019-09-30T23:55:31.185998Z"
              },
              "x-stoplight": {
                "id": "8coz8owpbclc8"
              }
            }
          },
          "trusted_contact": {
            "type": "object",
            "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
            "properties": {
              "given_name": {
                "type": "string",
                "example": "Jane"
              },
              "family_name": {
                "type": "string",
                "example": "Doe"
              },
              "email_address": {
                "type": "string",
                "format": "email",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                "example": "jane.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "street_address": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "city": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "state": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "postal_code": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "country": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
              }
            },
            "required": [
              "given_name",
              "family_name"
            ],
            "example": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "jane.doe@example.com"
            },
            "x-stoplight": {
              "id": "fyme2rvoeickd"
            }
          },
          "account_name": {
            "type": "string"
          },
          "account_type": {
            "type": "string",
            "title": "AccountType",
            "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
            "enum": [
              "trading",
              "custodial",
              "donor_advised"
            ],
            "example": "trading",
            "x-stoplight": {
              "id": "l6z0ingxys2ei"
            }
          },
          "custodial_account_type": {
            "title": "CustodialAccountType",
            "x-stoplight": {
              "id": "jltxs43lpjolf"
            },
            "type": "string",
            "description": "**UTMA**\nCustodianTypeUTMA\n\n**UGMA**\nCustodianTypeUGMA"
          },
          "minor_identity": {
            "description": "Represents Identity information for a minor that an account of type \"custodial\" is for",
            "type": "object",
            "x-examples": {},
            "properties": {
              "given_name": {
                "type": "string"
              },
              "family_name": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date"
              },
              "tax_id": {
                "type": "string"
              },
              "tax_id_type": {
                "type": "string",
                "title": "TaxIdType",
                "enum": [
                  "USA_SSN",
                  "ARG_AG_CUIT",
                  "AUS_TFN",
                  "AUS_ABN",
                  "BOL_NIT",
                  "BRA_CPF",
                  "CHL_RUT",
                  "COL_NIT",
                  "CRI_NITE",
                  "DEU_TAX_ID",
                  "DOM_RNC",
                  "ECU_RUC",
                  "FRA_SPI",
                  "GBR_UTR",
                  "GBR_NINO",
                  "GTM_NIT",
                  "HND_RTN",
                  "HUN_TIN",
                  "IDN_KTP",
                  "IND_PAN",
                  "ISR_TAX_ID",
                  "ITA_TAX_ID",
                  "JPN_TAX_ID",
                  "MEX_RFC",
                  "NIC_RUC",
                  "NLD_TIN",
                  "PAN_RUC",
                  "PER_RUC",
                  "PRY_RUC",
                  "SGP_NRIC",
                  "SGP_FIN",
                  "SGP_ASGD",
                  "SGP_ITR",
                  "SLV_NIT",
                  "SWE_TAX_ID",
                  "URY_RUT",
                  "VEN_RIF",
                  "NATIONAL_ID",
                  "PASSPORT",
                  "PERMANENT_RESIDENT",
                  "DRIVER_LICENSE",
                  "OTHER_GOV_ID",
                  "NOT_SPECIFIED"
                ],
                "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                "example": "USA_SSN",
                "x-stoplight": {
                  "id": "ulm45kpr2peox"
                }
              },
              "country_of_citizenship": {
                "type": "string"
              },
              "country_of_birth": {
                "type": "string"
              },
              "country_of_tax_residence": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "given_name",
              "family_name",
              "date_of_birth",
              "country_of_tax_residence",
              "state",
              "email"
            ],
            "x-stoplight": {
              "id": "0kzlygfs1ac1c"
            }
          },
          "trading_configurations": {
            "title": "AccountConfigurations",
            "type": "object",
            "description": "Represents additional configuration settings for an account",
            "x-stoplight": {
              "id": "rs80h7z1vg3or"
            },
            "properties": {
              "dtbp_check": {
                "type": "string",
                "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
                "example": "both",
                "enum": [
                  "both",
                  "entry",
                  "exit"
                ]
              },
              "trade_confirm_email": {
                "type": "string",
                "description": "all or none. If none, emails for order fills are not sent.",
                "enum": [
                  "all",
                  "none"
                ]
              },
              "suspend_trade": {
                "type": "boolean",
                "description": "If true, new orders are blocked."
              },
              "no_shorting": {
                "type": "boolean",
                "description": "If true, account becomes long-only mode."
              },
              "fractional_trading": {
                "type": "boolean",
                "description": "If true, account is able to participate in fractional trading"
              },
              "max_margin_multiplier": {
                "type": "string",
                "description": "Can be \"1\" or \"2\""
              },
              "pdt_check": {
                "type": "string",
                "example": "entry"
              },
              "ptp_no_exception_entry": {
                "type": "string",
                "x-stoplight": {
                  "id": "b2q93748qni2e"
                },
                "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
              }
            },
            "required": [
              "dtbp_check",
              "trade_confirm_email",
              "suspend_trade",
              "no_shorting",
              "fractional_trading",
              "max_margin_multiplier",
              "pdt_check",
              "ptp_no_exception_entry"
            ]
          },
          "usd": {
            "title": "USDBalances",
            "x-stoplight": {
              "id": "cqvonohea6r8x"
            },
            "type": "object",
            "properties": {
              "buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "regt_buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "daytrading_buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "cash": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "cash_withdrawable": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "cash_transferable": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "pending_transfer_out": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "portfolio_value": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "equity": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "long_market_value": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "short_market_value": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "initial_margin": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "maintenance_margin": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_maintenance_margin": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "sma": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_equity": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_long_market_value": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_short_market_value": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_cash": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_regt_buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "06hyvz1658m2j"
                },
                "format": "decimal"
              },
              "last_daytrading_buying_power": {
                "type": "string",
                "x-stoplight": {
                  "id": "f178oif7i5e4d"
                }
              }
            },
            "description": "Account balances in USD."
          },
          "enabled_assets": {
            "type": "array",
            "x-stoplight": {
              "id": "2gxryctx56dih"
            },
            "items": {
              "type": "string",
              "enum": [
                "us_equity",
                "crypto"
              ],
              "x-stoplight": {
                "id": "0stvwzkbv2e0u"
              }
            }
          }
        },
        "required": [
          "id",
          "account_number",
          "status",
          "currency",
          "last_equity",
          "created_at",
          "account_type"
        ]
      },
      "AccountUpdateRequest": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "contact": {
              "email_address": "john.doe@example.com",
              "phone_number": "+15556667788",
              "street_address": [
                "20 N San Mateo Dr"
              ],
              "city": "San Mateo",
              "state": "CA",
              "postal_code": "94401"
            },
            "identity": {
              "given_name": "John",
              "family_name": "Doe",
              "date_of_birth": "1990-01-01",
              "tax_id": "666-55-4321",
              "tax_id_type": "USA_SSN",
              "country_of_citizenship": "AUS",
              "country_of_birth": "AUS",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ]
            },
            "disclosures": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false
            },
            "trusted_contact": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "jane.doe@example.com"
            }
          }
        },
        "properties": {
          "contact": {
            "type": "object",
            "description": "Contact is the model for the account owner contact information.\n",
            "x-stoplight": {
              "id": "qcig9irpj9334"
            },
            "properties": {
              "email_address": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "example": "+15556667788",
                "description": "Phone number should include the country code, format: “+15555555555”"
              },
              "street_address": {
                "type": "array",
                "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                "items": {
                  "type": "string",
                  "example": "20 N San Mateo Dr",
                  "x-stoplight": {
                    "id": "10wajx98hc79a"
                  }
                }
              },
              "unit": {
                "type": "string",
                "x-stoplight": {
                  "id": "yybrq2o2nb5gy"
                },
                "description": "The specific apartment number if applicable"
              },
              "city": {
                "type": "string",
                "example": "San Mateo"
              },
              "state": {
                "type": "string",
                "example": "CA",
                "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
              },
              "postal_code": {
                "type": "string",
                "example": "94401"
              }
            },
            "required": [
              "email_address",
              "phone_number",
              "street_address"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Identity is the model to provide account owner’s identity information.\n",
            "example": {
              "given_name": "John",
              "family_name": "Doe",
              "date_of_birth": "1990-01-01",
              "tax_id": "666-55-4321",
              "tax_id_type": "USA_SSN",
              "country_of_citizenship": "AUS",
              "country_of_birth": "AUS",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ]
            },
            "x-stoplight": {
              "id": "oi43k8rpw570e"
            },
            "properties": {
              "given_name": {
                "type": "string",
                "example": "John",
                "description": "The first/given name of the user."
              },
              "family_name": {
                "type": "string",
                "example": "Doe",
                "description": "The last name (surname) of the user."
              },
              "middle_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "p03brcsyyjbcq"
                },
                "description": "The middle name of the user."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "example": "1990-01-01",
                "description": "The date of birth in \"YYYY-MM-DD\" format."
              },
              "tax_id": {
                "type": "string",
                "example": "666-55-4321",
                "description": "Required if tax_id_type is set."
              },
              "tax_id_type": {
                "type": "string",
                "title": "TaxIdType",
                "enum": [
                  "USA_SSN",
                  "ARG_AG_CUIT",
                  "AUS_TFN",
                  "AUS_ABN",
                  "BOL_NIT",
                  "BRA_CPF",
                  "CHL_RUT",
                  "COL_NIT",
                  "CRI_NITE",
                  "DEU_TAX_ID",
                  "DOM_RNC",
                  "ECU_RUC",
                  "FRA_SPI",
                  "GBR_UTR",
                  "GBR_NINO",
                  "GTM_NIT",
                  "HND_RTN",
                  "HUN_TIN",
                  "IDN_KTP",
                  "IND_PAN",
                  "ISR_TAX_ID",
                  "ITA_TAX_ID",
                  "JPN_TAX_ID",
                  "MEX_RFC",
                  "NIC_RUC",
                  "NLD_TIN",
                  "PAN_RUC",
                  "PER_RUC",
                  "PRY_RUC",
                  "SGP_NRIC",
                  "SGP_FIN",
                  "SGP_ASGD",
                  "SGP_ITR",
                  "SLV_NIT",
                  "SWE_TAX_ID",
                  "URY_RUT",
                  "VEN_RIF",
                  "NATIONAL_ID",
                  "PASSPORT",
                  "PERMANENT_RESIDENT",
                  "DRIVER_LICENSE",
                  "OTHER_GOV_ID",
                  "NOT_SPECIFIED"
                ],
                "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                "example": "USA_SSN",
                "x-stoplight": {
                  "id": "ulm45kpr2peox"
                }
              },
              "country_of_citizenship": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_birth": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_tax_residence": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "funding_source": {
                "type": "array",
                "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                "items": {
                  "type": "string",
                  "enum": [
                    "employment_income",
                    "investments",
                    "inheritance",
                    "business_income",
                    "savings",
                    "family"
                  ]
                }
              },
              "annual_income_min": {
                "type": "number",
                "description": "The lower bound of the user's annual income."
              },
              "annual_income_max": {
                "type": "number",
                "description": "The upper bound of the user's annual income."
              },
              "liquid_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's liquid net worth."
              },
              "liquid_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's liquid net worth."
              },
              "total_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's total net worth."
              },
              "total_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's total net worth."
              },
              "visa_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "y5a5r7inu02w8"
                },
                "description": "Only used to collect visa types for users residing in the USA."
              },
              "visa_expiration_date": {
                "type": "string",
                "x-stoplight": {
                  "id": "q7b33k53b5alk"
                },
                "description": "Required if `visa_type` is set.",
                "format": "date"
              },
              "date_of_departure_from_usa": {
                "type": "string",
                "x-stoplight": {
                  "id": "yasik2wcmshea"
                },
                "format": "date",
                "description": "Required if `visa_type` = B1 or B2"
              },
              "permanent_resident": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "jlvzbu3cevmju"
                },
                "description": "Only used to collect permanent residence status in the USA."
              },
              "extra": {
                "type": "object",
                "description": "Any additional information used for KYC purposes\n"
              }
            },
            "required": [
              "given_name",
              "family_name",
              "date_of_birth",
              "tax_id_type",
              "country_of_tax_residence",
              "funding_source"
            ]
          },
          "disclosures": {
            "type": "object",
            "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
            "example": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false
            },
            "x-stoplight": {
              "id": "h3ui3575tdh6q"
            },
            "properties": {
              "employment_status": {
                "type": "string",
                "enum": [
                  "unemployed",
                  "employed",
                  "student",
                  "retired"
                ],
                "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
              },
              "employer_name": {
                "type": "string",
                "description": "The name of the employer if the user is employed."
              },
              "employer_address": {
                "type": "string",
                "description": "The employer's address if the user is employed."
              },
              "employment_position": {
                "type": "string",
                "description": "The user's position if they are employed."
              },
              "is_control_person": {
                "type": "boolean",
                "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
              },
              "is_affiliated_exchange_or_finra": {
                "type": "boolean",
                "description": "Whether user is affiliated with any exchanges or FINRA."
              },
              "is_politically_exposed": {
                "type": "boolean",
                "description": "Whether the user is politically exposed."
              },
              "immediate_family_exposed": {
                "type": "boolean",
                "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
              },
              "context": {
                "type": "array",
                "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                "nullable": true,
                "items": {
                  "title": "DisclosureContextAnnotation",
                  "type": "object",
                  "properties": {
                    "context_type": {
                      "type": "string",
                      "enum": [
                        "CONTROLLED_FIRM",
                        "IMMEDIATE_FAMILY_EXPOSED",
                        "AFFILIATE_FIRM"
                      ],
                      "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_street_address": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_city": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_state": {
                      "type": "string",
                      "description": "Required if and only if `company_country` is `USA`."
                    },
                    "company_country": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_compliance_email": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "given_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    },
                    "family_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    }
                  },
                  "required": [
                    "context_type"
                  ],
                  "x-stoplight": {
                    "id": "rf62uwbtfdfpk"
                  }
                }
              }
            },
            "required": [
              "is_control_person",
              "is_affiliated_exchange_or_finra",
              "is_politically_exposed",
              "immediate_family_exposed"
            ]
          },
          "trusted_contact": {
            "type": "object",
            "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
            "properties": {
              "given_name": {
                "type": "string",
                "example": "Jane"
              },
              "family_name": {
                "type": "string",
                "example": "Doe"
              },
              "email_address": {
                "type": "string",
                "format": "email",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                "example": "jane.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "street_address": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "city": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "state": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "postal_code": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "country": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
              }
            },
            "required": [
              "given_name",
              "family_name"
            ],
            "example": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "jane.doe@example.com"
            },
            "x-stoplight": {
              "id": "fyme2rvoeickd"
            }
          }
        },
        "x-stoplight": {
          "id": "xrw055ds4ti4h"
        }
      },
      "AccountDocument": {
        "type": "object",
        "description": "If an account has documents on the application submission,\nit has the ApplicationDocument model in exchange with\nDocumentUploadRequest.\n",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "identity_verification",
              "address_verification",
              "date_of_birth_verification",
              "tax_id_verification",
              "account_approval_letter",
              "cip_result",
              "w8ben",
              "w9",
              "limited_trading_authorization"
            ],
            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
            "example": "identity_verification",
            "x-stoplight": {
              "id": "8u8j8gn6uuzk8"
            }
          },
          "document_sub_type": {
            "type": "string"
          },
          "mime_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "document_type",
          "created_at"
        ],
        "example": {
          "id": "0d18ae51-3c94-4511-b209-101e1666416b",
          "document_type": "identity_verification",
          "document_sub_type": "passport",
          "mime_type": "image/jpeg",
          "created_at": "2019-09-30T23:55:31.185998Z"
        },
        "x-stoplight": {
          "id": "6jkqogvv3l151"
        }
      },
      "CustodialAccountMinorIdentity": {
        "description": "Represents Identity information for a minor that an account of type \"custodial\" is for",
        "type": "object",
        "x-examples": {},
        "properties": {
          "given_name": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "tax_id": {
            "type": "string"
          },
          "tax_id_type": {
            "type": "string",
            "title": "TaxIdType",
            "enum": [
              "USA_SSN",
              "ARG_AG_CUIT",
              "AUS_TFN",
              "AUS_ABN",
              "BOL_NIT",
              "BRA_CPF",
              "CHL_RUT",
              "COL_NIT",
              "CRI_NITE",
              "DEU_TAX_ID",
              "DOM_RNC",
              "ECU_RUC",
              "FRA_SPI",
              "GBR_UTR",
              "GBR_NINO",
              "GTM_NIT",
              "HND_RTN",
              "HUN_TIN",
              "IDN_KTP",
              "IND_PAN",
              "ISR_TAX_ID",
              "ITA_TAX_ID",
              "JPN_TAX_ID",
              "MEX_RFC",
              "NIC_RUC",
              "NLD_TIN",
              "PAN_RUC",
              "PER_RUC",
              "PRY_RUC",
              "SGP_NRIC",
              "SGP_FIN",
              "SGP_ASGD",
              "SGP_ITR",
              "SLV_NIT",
              "SWE_TAX_ID",
              "URY_RUT",
              "VEN_RIF",
              "NATIONAL_ID",
              "PASSPORT",
              "PERMANENT_RESIDENT",
              "DRIVER_LICENSE",
              "OTHER_GOV_ID",
              "NOT_SPECIFIED"
            ],
            "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
            "example": "USA_SSN",
            "x-stoplight": {
              "id": "ulm45kpr2peox"
            }
          },
          "country_of_citizenship": {
            "type": "string"
          },
          "country_of_birth": {
            "type": "string"
          },
          "country_of_tax_residence": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "given_name",
          "family_name",
          "date_of_birth",
          "country_of_tax_residence",
          "state",
          "email"
        ],
        "x-stoplight": {
          "id": "0kzlygfs1ac1c"
        }
      },
      "AccountConfigurations": {
        "title": "AccountConfigurations",
        "type": "object",
        "description": "Represents additional configuration settings for an account",
        "x-stoplight": {
          "id": "rs80h7z1vg3or"
        },
        "properties": {
          "dtbp_check": {
            "type": "string",
            "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
            "example": "both",
            "enum": [
              "both",
              "entry",
              "exit"
            ]
          },
          "trade_confirm_email": {
            "type": "string",
            "description": "all or none. If none, emails for order fills are not sent.",
            "enum": [
              "all",
              "none"
            ]
          },
          "suspend_trade": {
            "type": "boolean",
            "description": "If true, new orders are blocked."
          },
          "no_shorting": {
            "type": "boolean",
            "description": "If true, account becomes long-only mode."
          },
          "fractional_trading": {
            "type": "boolean",
            "description": "If true, account is able to participate in fractional trading"
          },
          "max_margin_multiplier": {
            "type": "string",
            "description": "Can be \"1\" or \"2\""
          },
          "pdt_check": {
            "type": "string",
            "example": "entry"
          },
          "ptp_no_exception_entry": {
            "type": "string",
            "x-stoplight": {
              "id": "b2q93748qni2e"
            },
            "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
          }
        },
        "required": [
          "dtbp_check",
          "trade_confirm_email",
          "suspend_trade",
          "no_shorting",
          "fractional_trading",
          "max_margin_multiplier",
          "pdt_check",
          "ptp_no_exception_entry"
        ]
      },
      "AccountCreationRequest": {
        "type": "object",
        "title": "AccountCreationRequest",
        "description": "Represents the fields required to create a new account",
        "x-stoplight": {
          "id": "p68vho6vi55ul"
        },
        "properties": {
          "contact": {
            "type": "object",
            "description": "Contact is the model for the account owner contact information.\n",
            "x-stoplight": {
              "id": "qcig9irpj9334"
            },
            "properties": {
              "email_address": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "example": "+15556667788",
                "description": "Phone number should include the country code, format: “+15555555555”"
              },
              "street_address": {
                "type": "array",
                "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                "items": {
                  "type": "string",
                  "example": "20 N San Mateo Dr",
                  "x-stoplight": {
                    "id": "10wajx98hc79a"
                  }
                }
              },
              "unit": {
                "type": "string",
                "x-stoplight": {
                  "id": "yybrq2o2nb5gy"
                },
                "description": "The specific apartment number if applicable"
              },
              "city": {
                "type": "string",
                "example": "San Mateo"
              },
              "state": {
                "type": "string",
                "example": "CA",
                "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
              },
              "postal_code": {
                "type": "string",
                "example": "94401"
              }
            },
            "required": [
              "email_address",
              "phone_number",
              "street_address"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Identity is the model to provide account owner’s identity information.\n",
            "example": {
              "given_name": "John",
              "family_name": "Doe",
              "date_of_birth": "1990-01-01",
              "tax_id": "666-55-4321",
              "tax_id_type": "USA_SSN",
              "country_of_citizenship": "AUS",
              "country_of_birth": "AUS",
              "country_of_tax_residence": "USA",
              "funding_source": [
                "employment_income"
              ]
            },
            "x-stoplight": {
              "id": "oi43k8rpw570e"
            },
            "properties": {
              "given_name": {
                "type": "string",
                "example": "John",
                "description": "The first/given name of the user."
              },
              "family_name": {
                "type": "string",
                "example": "Doe",
                "description": "The last name (surname) of the user."
              },
              "middle_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "p03brcsyyjbcq"
                },
                "description": "The middle name of the user."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "example": "1990-01-01",
                "description": "The date of birth in \"YYYY-MM-DD\" format."
              },
              "tax_id": {
                "type": "string",
                "example": "666-55-4321",
                "description": "Required if tax_id_type is set."
              },
              "tax_id_type": {
                "type": "string",
                "title": "TaxIdType",
                "enum": [
                  "USA_SSN",
                  "ARG_AG_CUIT",
                  "AUS_TFN",
                  "AUS_ABN",
                  "BOL_NIT",
                  "BRA_CPF",
                  "CHL_RUT",
                  "COL_NIT",
                  "CRI_NITE",
                  "DEU_TAX_ID",
                  "DOM_RNC",
                  "ECU_RUC",
                  "FRA_SPI",
                  "GBR_UTR",
                  "GBR_NINO",
                  "GTM_NIT",
                  "HND_RTN",
                  "HUN_TIN",
                  "IDN_KTP",
                  "IND_PAN",
                  "ISR_TAX_ID",
                  "ITA_TAX_ID",
                  "JPN_TAX_ID",
                  "MEX_RFC",
                  "NIC_RUC",
                  "NLD_TIN",
                  "PAN_RUC",
                  "PER_RUC",
                  "PRY_RUC",
                  "SGP_NRIC",
                  "SGP_FIN",
                  "SGP_ASGD",
                  "SGP_ITR",
                  "SLV_NIT",
                  "SWE_TAX_ID",
                  "URY_RUT",
                  "VEN_RIF",
                  "NATIONAL_ID",
                  "PASSPORT",
                  "PERMANENT_RESIDENT",
                  "DRIVER_LICENSE",
                  "OTHER_GOV_ID",
                  "NOT_SPECIFIED"
                ],
                "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                "example": "USA_SSN",
                "x-stoplight": {
                  "id": "ulm45kpr2peox"
                }
              },
              "country_of_citizenship": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_birth": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "country_of_tax_residence": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                "example": "USA"
              },
              "funding_source": {
                "type": "array",
                "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                "items": {
                  "type": "string",
                  "enum": [
                    "employment_income",
                    "investments",
                    "inheritance",
                    "business_income",
                    "savings",
                    "family"
                  ]
                }
              },
              "annual_income_min": {
                "type": "number",
                "description": "The lower bound of the user's annual income."
              },
              "annual_income_max": {
                "type": "number",
                "description": "The upper bound of the user's annual income."
              },
              "liquid_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's liquid net worth."
              },
              "liquid_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's liquid net worth."
              },
              "total_net_worth_min": {
                "type": "number",
                "description": "The lower bound of the user's total net worth."
              },
              "total_net_worth_max": {
                "type": "number",
                "description": "The upper bound of the user's total net worth."
              },
              "visa_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "y5a5r7inu02w8"
                },
                "description": "Only used to collect visa types for users residing in the USA."
              },
              "visa_expiration_date": {
                "type": "string",
                "x-stoplight": {
                  "id": "q7b33k53b5alk"
                },
                "description": "Required if `visa_type` is set.",
                "format": "date"
              },
              "date_of_departure_from_usa": {
                "type": "string",
                "x-stoplight": {
                  "id": "yasik2wcmshea"
                },
                "format": "date",
                "description": "Required if `visa_type` = B1 or B2"
              },
              "permanent_resident": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "jlvzbu3cevmju"
                },
                "description": "Only used to collect permanent residence status in the USA."
              },
              "extra": {
                "type": "object",
                "description": "Any additional information used for KYC purposes\n"
              }
            },
            "required": [
              "given_name",
              "family_name",
              "date_of_birth",
              "tax_id_type",
              "country_of_tax_residence",
              "funding_source"
            ]
          },
          "disclosures": {
            "type": "object",
            "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
            "example": {
              "is_control_person": false,
              "is_affiliated_exchange_or_finra": false,
              "is_politically_exposed": false,
              "immediate_family_exposed": false
            },
            "x-stoplight": {
              "id": "h3ui3575tdh6q"
            },
            "properties": {
              "employment_status": {
                "type": "string",
                "enum": [
                  "unemployed",
                  "employed",
                  "student",
                  "retired"
                ],
                "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
              },
              "employer_name": {
                "type": "string",
                "description": "The name of the employer if the user is employed."
              },
              "employer_address": {
                "type": "string",
                "description": "The employer's address if the user is employed."
              },
              "employment_position": {
                "type": "string",
                "description": "The user's position if they are employed."
              },
              "is_control_person": {
                "type": "boolean",
                "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
              },
              "is_affiliated_exchange_or_finra": {
                "type": "boolean",
                "description": "Whether user is affiliated with any exchanges or FINRA."
              },
              "is_politically_exposed": {
                "type": "boolean",
                "description": "Whether the user is politically exposed."
              },
              "immediate_family_exposed": {
                "type": "boolean",
                "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
              },
              "context": {
                "type": "array",
                "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                "nullable": true,
                "items": {
                  "title": "DisclosureContextAnnotation",
                  "type": "object",
                  "properties": {
                    "context_type": {
                      "type": "string",
                      "enum": [
                        "CONTROLLED_FIRM",
                        "IMMEDIATE_FAMILY_EXPOSED",
                        "AFFILIATE_FIRM"
                      ],
                      "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_street_address": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_city": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_state": {
                      "type": "string",
                      "description": "Required if and only if `company_country` is `USA`."
                    },
                    "company_country": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "company_compliance_email": {
                      "type": "string",
                      "description": "Required for FINRA affiliations and controlled firms."
                    },
                    "given_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    },
                    "family_name": {
                      "type": "string",
                      "description": "Required for immediate family members of politically exposed persons."
                    }
                  },
                  "required": [
                    "context_type"
                  ],
                  "x-stoplight": {
                    "id": "rf62uwbtfdfpk"
                  }
                }
              }
            },
            "required": [
              "is_control_person",
              "is_affiliated_exchange_or_finra",
              "is_politically_exposed",
              "immediate_family_exposed"
            ]
          },
          "agreements": {
            "type": "array",
            "description": "The client has to present the Alpaca Account and Margin Agreements to the end user, and have them read full sentences.",
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "ucn8nh8ei4mag"
              },
              "properties": {
                "agreement": {
                  "type": "string",
                  "title": "AgreementType",
                  "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                  "enum": [
                    "margin_agreement",
                    "account_agreement",
                    "customer_agreement",
                    "crypto_agreement"
                  ],
                  "example": "customer_agreement",
                  "x-stoplight": {
                    "id": "pw9nog92a1hgz"
                  }
                },
                "signed_at": {
                  "type": "string",
                  "example": "2019-09-11T18:09:33Z",
                  "format": "date-time",
                  "description": "The timestamp the agreement was signed."
                },
                "ip_address": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "185.13.21.99",
                  "description": "The ip_address the signed agreements were sent from by the user."
                },
                "revision": {
                  "type": "string",
                  "description": "The revision date if agreement is a revision."
                }
              },
              "required": [
                "agreement",
                "signed_at",
                "ip_address"
              ]
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "If an account has to replace documents after the submission, it has to use\nthe Document model instead of DocumentUploadRequest.\n",
              "example": {
                "document_type": "identity_verification",
                "document_sub_type": "passport",
                "content": "/9j/Cg==",
                "mime_type": "image/jpeg"
              },
              "title": "DocumentUploadRequest",
              "x-examples": {
                "example-1": {
                  "document_type": "identity_verification",
                  "document_sub_type": "passport",
                  "content": "/9j/Cg==",
                  "mime_type": "image/jpeg"
                }
              },
              "x-stoplight": {
                "id": "s4kbyizjyxroo"
              },
              "properties": {
                "document_type": {
                  "type": "string",
                  "enum": [
                    "identity_verification",
                    "address_verification",
                    "date_of_birth_verification",
                    "tax_id_verification",
                    "account_approval_letter",
                    "cip_result",
                    "w8ben",
                    "w9",
                    "limited_trading_authorization"
                  ],
                  "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                  "example": "identity_verification",
                  "x-stoplight": {
                    "id": "8u8j8gn6uuzk8"
                  }
                },
                "document_sub_type": {
                  "type": "string",
                  "example": "passport",
                  "description": "The specific type of document, e.g. passport"
                },
                "content": {
                  "type": "string",
                  "format": "base64",
                  "example": "/9j/Cg==",
                  "description": "Base64 string representing the document"
                },
                "content_data": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "additional_conditions": "None",
                      "country_citizen": "Australia",
                      "date": "2021-06-14",
                      "date_of_birth": "1970-01-01",
                      "foreign_tax_id": "123 456 789",
                      "ftin_not_required": false,
                      "full_name": "John Doe",
                      "ip_address": "127.0.0.1",
                      "mailing_address_city_state": "Adelaide, South Australia",
                      "mailing_address_country": "Australia",
                      "mailing_address_street": "51 Main St",
                      "paragraph_number": "15",
                      "percent_rate_withholding": 5,
                      "permanent_address_city_state": "Adelaide, South Australia",
                      "permanent_address_country": "Australia",
                      "permanent_address_street": "20 Main St",
                      "reference_number": "abc123",
                      "residency": "Australia",
                      "revision": "10-2021",
                      "tax_id_ssn": "123-00-456",
                      "timestamp": "2021-06-14T09:31:05Z",
                      "income_type": "interest",
                      "signer_full_name": "Mr. Signing User"
                    }
                  },
                  "description": "W-8BEN documents model.",
                  "properties": {
                    "additional_conditions": {
                      "type": "string",
                      "description": "Any additional conditions to specify"
                    },
                    "country_citizen": {
                      "type": "string",
                      "description": "The country that the applicant is a citizen of"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "date signed"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "description": "date of birth of applicant"
                    },
                    "foreign_tax_id": {
                      "type": "string",
                      "description": "Applicant's tax id in their home country"
                    },
                    "ftin_not_required": {
                      "type": "boolean",
                      "description": "Required if foreign_tax_id and tax_id_ssn are empty."
                    },
                    "full_name": {
                      "type": "string",
                      "description": "Full name of applicant"
                    },
                    "ip_address": {
                      "type": "string",
                      "description": "IP address of applicant when signed"
                    },
                    "mailing_address_city_state": {
                      "type": "string",
                      "description": "Mailing city/state of applicant"
                    },
                    "mailing_address_country": {
                      "type": "string",
                      "description": "Mailing country for applicant"
                    },
                    "mailing_address_street": {
                      "type": "string",
                      "description": "Mailing street address for applicant"
                    },
                    "paragraph_number": {
                      "type": "string"
                    },
                    "percent_rate_withholding": {
                      "type": "integer"
                    },
                    "permanent_address_city_state": {
                      "type": "string",
                      "description": "Permanent city/state of applicant"
                    },
                    "permanent_address_country": {
                      "type": "string",
                      "description": "Permanent country of residence of applicant"
                    },
                    "permanent_address_street": {
                      "type": "string",
                      "description": "Permanent street address of applicant"
                    },
                    "reference_number": {
                      "type": "string"
                    },
                    "residency": {
                      "type": "string",
                      "description": "Country of residency of applicant"
                    },
                    "revision": {
                      "type": "string",
                      "description": "Revision of the W8BEN form"
                    },
                    "tax_id_ssn": {
                      "type": "string",
                      "description": "TaxID/SSN of applicant"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "time",
                      "description": "Timestamp when form data was gathered"
                    },
                    "income_type": {
                      "type": "string",
                      "description": "Income type of applicant"
                    },
                    "signer_full_name": {
                      "type": "string",
                      "description": "Full name of signing user"
                    }
                  },
                  "required": [
                    "country_citizen",
                    "date",
                    "date_of_birth",
                    "full_name",
                    "ip_address",
                    "permanent_address_city_state",
                    "permanent_address_country",
                    "permanent_address_street",
                    "revision",
                    "timestamp",
                    "signer_full_name"
                  ],
                  "x-stoplight": {
                    "id": "8cjul4ni6pe66"
                  }
                },
                "mime_type": {
                  "type": "string",
                  "example": "image/jpeg",
                  "description": "This field is Required if content is specified. ENUM: application/pdf, image/png, or image/jpeg. If document_type is w8ben then application/json is also accepted"
                }
              },
              "required": [
                "document_type",
                "content"
              ]
            }
          },
          "trusted_contact": {
            "type": "object",
            "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
            "properties": {
              "given_name": {
                "type": "string",
                "example": "Jane"
              },
              "family_name": {
                "type": "string",
                "example": "Doe"
              },
              "email_address": {
                "type": "string",
                "format": "email",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                "example": "jane.doe@example.com"
              },
              "phone_number": {
                "type": "string",
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "street_address": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
              },
              "city": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "state": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "postal_code": {
                "type": "string",
                "description": "required if `street_address` is set\n"
              },
              "country": {
                "type": "string",
                "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
              }
            },
            "required": [
              "given_name",
              "family_name"
            ],
            "example": {
              "given_name": "Jane",
              "family_name": "Doe",
              "email_address": "jane.doe@example.com"
            },
            "x-stoplight": {
              "id": "fyme2rvoeickd"
            }
          },
          "enabled_assets": {
            "type": "array",
            "x-stoplight": {
              "id": "1hhandeyv69or"
            },
            "description": "Will default to `us_equity`. Alpaca has the ability to update the default value upon request.",
            "items": {
              "type": "string",
              "enum": [
                "us_equity",
                "crypto"
              ],
              "x-stoplight": {
                "id": "0stvwzkbv2e0u"
              }
            }
          }
        },
        "required": [
          "contact",
          "identity",
          "disclosures",
          "agreements"
        ]
      },
      "TaxIdType": {
        "type": "string",
        "title": "TaxIdType",
        "enum": [
          "USA_SSN",
          "ARG_AG_CUIT",
          "AUS_TFN",
          "AUS_ABN",
          "BOL_NIT",
          "BRA_CPF",
          "CHL_RUT",
          "COL_NIT",
          "CRI_NITE",
          "DEU_TAX_ID",
          "DOM_RNC",
          "ECU_RUC",
          "FRA_SPI",
          "GBR_UTR",
          "GBR_NINO",
          "GTM_NIT",
          "HND_RTN",
          "HUN_TIN",
          "IDN_KTP",
          "IND_PAN",
          "ISR_TAX_ID",
          "ITA_TAX_ID",
          "JPN_TAX_ID",
          "MEX_RFC",
          "NIC_RUC",
          "NLD_TIN",
          "PAN_RUC",
          "PER_RUC",
          "PRY_RUC",
          "SGP_NRIC",
          "SGP_FIN",
          "SGP_ASGD",
          "SGP_ITR",
          "SLV_NIT",
          "SWE_TAX_ID",
          "URY_RUT",
          "VEN_RIF",
          "NATIONAL_ID",
          "PASSPORT",
          "PERMANENT_RESIDENT",
          "DRIVER_LICENSE",
          "OTHER_GOV_ID",
          "NOT_SPECIFIED"
        ],
        "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
        "example": "USA_SSN",
        "x-stoplight": {
          "id": "ulm45kpr2peox"
        }
      },
      "ApplicationDocument": {
        "type": "object",
        "description": "If an account has documents on the application submission,\nit has the ApplicationDocument model in exchange with\nDocumentUpload.\n",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "identity_verification",
              "address_verification",
              "date_of_birth_verification",
              "tax_id_verification",
              "account_approval_letter",
              "cip_result",
              "w8ben",
              "w9",
              "limited_trading_authorization"
            ],
            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
            "example": "identity_verification",
            "x-stoplight": {
              "id": "8u8j8gn6uuzk8"
            }
          },
          "document_sub_type": {
            "type": "string"
          },
          "mime_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "document_type",
          "created_at"
        ],
        "example": {
          "id": "0d18ae51-3c94-4511-b209-101e1666416b",
          "document_type": "identity_verification",
          "document_sub_type": "passport",
          "mime_type": "image/jpeg",
          "created_at": "2019-09-30T23:55:31.185998Z"
        },
        "x-stoplight": {
          "id": "8coz8owpbclc8"
        }
      },
      "DocumentUpload": {
        "type": "object",
        "description": "If an account has documents after the submission, it has\nthe Document model in exchange with DocumentUpload.\n",
        "properties": {
          "document_type": {
            "type": "string",
            "enum": [
              "identity_verification",
              "address_verification",
              "date_of_birth_verification",
              "tax_id_verification",
              "account_approval_letter",
              "cip_result",
              "w8ben",
              "w9",
              "limited_trading_authorization"
            ],
            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
            "example": "identity_verification",
            "x-stoplight": {
              "id": "8u8j8gn6uuzk8"
            }
          },
          "document_sub_type": {
            "type": "string",
            "example": "passport"
          },
          "content": {
            "type": "string",
            "format": "base64",
            "example": "/9j/Cg=="
          },
          "mime_type": {
            "type": "string",
            "example": "image/jpeg"
          }
        },
        "required": [
          "document_type",
          "content",
          "mime_type"
        ],
        "example": {
          "document_type": "identity_verification",
          "document_sub_type": "passport",
          "content": "/9j/Cg==",
          "mime_type": "image/jpeg"
        },
        "x-stoplight": {
          "id": "nnwp5hwz5kjhk"
        }
      },
      "Activity": {
        "title": "Activity",
        "description": "Base for activity types",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "20220208125959696::88b5f678-fef5-447b-af15-f21e367e6d8c"
              },
              "account_id": {
                "type": "string",
                "format": "uuid",
                "example": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4"
              },
              "activity_type": {
                "title": "ActivityType",
                "type": "string",
                "enum": [
                  "FILL",
                  "ACATC",
                  "ACATS",
                  "CIL",
                  "CSD",
                  "CSW",
                  "DIV",
                  "DIVCGL",
                  "DIVCGS",
                  "DIVNRA",
                  "DIVROC",
                  "DIVTXEX",
                  "FEE",
                  "INT",
                  "JNLC",
                  "JNLS",
                  "MA",
                  "PTC",
                  "REORG",
                  "SPIN",
                  "SPLIT"
                ],
                "description": "Represents the various kinds of activity.\n\nTradeActivity's will always have the type `FILL`\n\n- **FILL**\n  Order Fills (Partial/Full)\n- **ACATC**\n  ACATS IN/OUT (Cash)\n- **ACATS**\n  ACATS IN/OUT (Securities)\n- **CIL**\n  Cash in Lieu of Stock\n- **CSD**\n  Cash Disbursement (+)\n- **CSW**\n  Cash Withdrawable\n- **DIV**\n  Dividend\n- **DIVCGL**\n  Dividend (Capital Gain Long Term)\n- **DIVCGS**\n  Dividend (Capital Gain Short Term)\n- **DIVNRA**\n  Dividend Adjusted (NRA Withheld)\n- **DIVROC**\n  Dividend Return of Capital\n- **DIVTXEX**\n  Dividend (Tax Exempt)\n- **FEE**\n  REG and TAF Fees\n- **INT**\n  Interest (Credit/Margin)\n- **JNLC**\n  Journal Entry (Cash)\n- **JNLS**\n  Journal Entry (Stock)\n- **MA**\n  Merger/Acquisition\n- **PTC**\n  Pass Thru Change\n- **REORG**\n  Reorg CA\n- **SPIN**\n  Stock Spinoff\n- **SPLIT**\n  Stock Split",
                "x-stoplight": {
                  "id": "y6utewjrnwcgk"
                }
              }
            }
          },
          {
            "oneOf": [
              {
                "title": "TradeActivity",
                "type": "object",
                "properties": {
                  "transaction_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-05-10T14:01:04.650275Z",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "fill",
                      "partial_fill"
                    ],
                    "example": "fill",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.1415",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "0.38921",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "side": {
                    "type": "string",
                    "enum": [
                      "buy",
                      "sell",
                      "buy_minus",
                      "sell_plus",
                      "sell_short",
                      "sell_short_exempt",
                      "undisclosed",
                      "cross",
                      "cross_short"
                    ],
                    "example": "buy",
                    "description": "Represents what side of the transaction an order was on.",
                    "x-stoplight": {
                      "id": "zrdcas15ugcl7"
                    }
                  },
                  "symbol": {
                    "type": "string",
                    "example": "AAPL",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "leaves_qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "0.5123",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "order_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "fe060a1b-5b45-4eba-ba46-c3a3345d8255",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "cum_qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "0.9723",
                    "description": "Valid only for trading activity types. Null for non-trading activites."
                  },
                  "order_status": {
                    "type": "string",
                    "enum": [
                      "new",
                      "partially_filled",
                      "filled",
                      "done_for_day",
                      "canceled",
                      "expired",
                      "replaced",
                      "pending_cancel",
                      "pending_replace",
                      "accepted",
                      "pending_new",
                      "accepted_for_bidding",
                      "stopped",
                      "rejected",
                      "suspended",
                      "calculated"
                    ],
                    "example": "filled",
                    "x-stoplight": {
                      "id": "742rdkivas7us"
                    }
                  }
                },
                "x-stoplight": {
                  "id": "q0bbbxhqaumis"
                }
              },
              {
                "title": "NonTradeActivity",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2021-05-21",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "net_amount": {
                    "type": "string",
                    "format": "decimal",
                    "example": "1234",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "description": {
                    "type": "string",
                    "example": "Example description",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "executed",
                      "correct",
                      "canceled"
                    ],
                    "example": "executed",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "symbol": {
                    "type": "string",
                    "example": "AAPL",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "0.38921",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  },
                  "per_share_amount": {
                    "type": "string",
                    "format": "decimal",
                    "example": "0.38921",
                    "description": "Valid only for non-trading activity types. Null for trading activites."
                  }
                },
                "x-stoplight": {
                  "id": "iycf52rzeqwkt"
                }
              }
            ]
          }
        ],
        "required": [
          "id",
          "activity_type"
        ],
        "x-stoplight": {
          "id": "1cd58vzvymj1a"
        }
      },
      "ActivityType": {
        "title": "ActivityType",
        "type": "string",
        "enum": [
          "FILL",
          "ACATC",
          "ACATS",
          "CIL",
          "CSD",
          "CSW",
          "DIV",
          "DIVCGL",
          "DIVCGS",
          "DIVNRA",
          "DIVROC",
          "DIVTXEX",
          "FEE",
          "INT",
          "JNLC",
          "JNLS",
          "MA",
          "PTC",
          "REORG",
          "SPIN",
          "SPLIT"
        ],
        "description": "Represents the various kinds of activity.\n\nTradeActivity's will always have the type `FILL`\n\n- **FILL**\n  Order Fills (Partial/Full)\n- **ACATC**\n  ACATS IN/OUT (Cash)\n- **ACATS**\n  ACATS IN/OUT (Securities)\n- **CIL**\n  Cash in Lieu of Stock\n- **CSD**\n  Cash Disbursement (+)\n- **CSW**\n  Cash Withdrawable\n- **DIV**\n  Dividend\n- **DIVCGL**\n  Dividend (Capital Gain Long Term)\n- **DIVCGS**\n  Dividend (Capital Gain Short Term)\n- **DIVNRA**\n  Dividend Adjusted (NRA Withheld)\n- **DIVROC**\n  Dividend Return of Capital\n- **DIVTXEX**\n  Dividend (Tax Exempt)\n- **FEE**\n  REG and TAF Fees\n- **INT**\n  Interest (Credit/Margin)\n- **JNLC**\n  Journal Entry (Cash)\n- **JNLS**\n  Journal Entry (Stock)\n- **MA**\n  Merger/Acquisition\n- **PTC**\n  Pass Thru Change\n- **REORG**\n  Reorg CA\n- **SPIN**\n  Stock Spinoff\n- **SPLIT**\n  Stock Split",
        "x-stoplight": {
          "id": "y6utewjrnwcgk"
        }
      },
      "TradeActivity": {
        "title": "TradeActivity",
        "type": "object",
        "properties": {
          "transaction_time": {
            "type": "string",
            "format": "date-time",
            "example": "2021-05-10T14:01:04.650275Z",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "type": {
            "type": "string",
            "enum": [
              "fill",
              "partial_fill"
            ],
            "example": "fill",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "example": "3.1415",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "qty": {
            "type": "string",
            "format": "decimal",
            "example": "0.38921",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "side": {
            "type": "string",
            "enum": [
              "buy",
              "sell",
              "buy_minus",
              "sell_plus",
              "sell_short",
              "sell_short_exempt",
              "undisclosed",
              "cross",
              "cross_short"
            ],
            "example": "buy",
            "description": "Represents what side of the transaction an order was on.",
            "x-stoplight": {
              "id": "zrdcas15ugcl7"
            }
          },
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "leaves_qty": {
            "type": "string",
            "format": "decimal",
            "example": "0.5123",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "order_id": {
            "type": "string",
            "format": "uuid",
            "example": "fe060a1b-5b45-4eba-ba46-c3a3345d8255",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "cum_qty": {
            "type": "string",
            "format": "decimal",
            "example": "0.9723",
            "description": "Valid only for trading activity types. Null for non-trading activites."
          },
          "order_status": {
            "type": "string",
            "enum": [
              "new",
              "partially_filled",
              "filled",
              "done_for_day",
              "canceled",
              "expired",
              "replaced",
              "pending_cancel",
              "pending_replace",
              "accepted",
              "pending_new",
              "accepted_for_bidding",
              "stopped",
              "rejected",
              "suspended",
              "calculated"
            ],
            "example": "filled",
            "x-stoplight": {
              "id": "742rdkivas7us"
            }
          }
        },
        "x-stoplight": {
          "id": "q0bbbxhqaumis"
        }
      },
      "NonTradeActivity": {
        "title": "NonTradeActivity",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "2021-05-21",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "net_amount": {
            "type": "string",
            "format": "decimal",
            "example": "1234",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "description": {
            "type": "string",
            "example": "Example description",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "status": {
            "type": "string",
            "enum": [
              "executed",
              "correct",
              "canceled"
            ],
            "example": "executed",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "qty": {
            "type": "string",
            "format": "decimal",
            "example": "0.38921",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          },
          "per_share_amount": {
            "type": "string",
            "format": "decimal",
            "example": "0.38921",
            "description": "Valid only for non-trading activity types. Null for trading activites."
          }
        },
        "x-stoplight": {
          "id": "iycf52rzeqwkt"
        }
      },
      "ActivityItem": {
        "title": "ActivityItem",
        "anyOf": [
          {
            "title": "TradeActivity",
            "type": "object",
            "properties": {
              "transaction_time": {
                "type": "string",
                "format": "date-time",
                "example": "2021-05-10T14:01:04.650275Z",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "type": {
                "type": "string",
                "enum": [
                  "fill",
                  "partial_fill"
                ],
                "example": "fill",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "price": {
                "type": "string",
                "format": "decimal",
                "example": "3.1415",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "qty": {
                "type": "string",
                "format": "decimal",
                "example": "0.38921",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "side": {
                "type": "string",
                "enum": [
                  "buy",
                  "sell",
                  "buy_minus",
                  "sell_plus",
                  "sell_short",
                  "sell_short_exempt",
                  "undisclosed",
                  "cross",
                  "cross_short"
                ],
                "example": "buy",
                "description": "Represents what side of the transaction an order was on.",
                "x-stoplight": {
                  "id": "zrdcas15ugcl7"
                }
              },
              "symbol": {
                "type": "string",
                "example": "AAPL",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "leaves_qty": {
                "type": "string",
                "format": "decimal",
                "example": "0.5123",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "order_id": {
                "type": "string",
                "format": "uuid",
                "example": "fe060a1b-5b45-4eba-ba46-c3a3345d8255",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "cum_qty": {
                "type": "string",
                "format": "decimal",
                "example": "0.9723",
                "description": "Valid only for trading activity types. Null for non-trading activites."
              },
              "order_status": {
                "type": "string",
                "enum": [
                  "new",
                  "partially_filled",
                  "filled",
                  "done_for_day",
                  "canceled",
                  "expired",
                  "replaced",
                  "pending_cancel",
                  "pending_replace",
                  "accepted",
                  "pending_new",
                  "accepted_for_bidding",
                  "stopped",
                  "rejected",
                  "suspended",
                  "calculated"
                ],
                "example": "filled",
                "x-stoplight": {
                  "id": "742rdkivas7us"
                }
              }
            },
            "x-stoplight": {
              "id": "q0bbbxhqaumis"
            }
          },
          {
            "title": "NonTradeActivity",
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date",
                "example": "2021-05-21",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "net_amount": {
                "type": "string",
                "format": "decimal",
                "example": "1234",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "description": {
                "type": "string",
                "example": "Example description",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "status": {
                "type": "string",
                "enum": [
                  "executed",
                  "correct",
                  "canceled"
                ],
                "example": "executed",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "symbol": {
                "type": "string",
                "example": "AAPL",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "qty": {
                "type": "string",
                "format": "decimal",
                "example": "0.38921",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              },
              "per_share_amount": {
                "type": "string",
                "format": "decimal",
                "example": "0.38921",
                "description": "Valid only for non-trading activity types. Null for trading activites."
              }
            },
            "x-stoplight": {
              "id": "iycf52rzeqwkt"
            }
          }
        ],
        "x-stoplight": {
          "id": "y003g9p5i9t0n"
        }
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "identity_verification",
          "address_verification",
          "date_of_birth_verification",
          "tax_id_verification",
          "account_approval_letter",
          "cip_result",
          "w8ben",
          "w9",
          "limited_trading_authorization"
        ],
        "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
        "example": "identity_verification",
        "x-stoplight": {
          "id": "8u8j8gn6uuzk8"
        }
      },
      "DocumentUploadRequest": {
        "type": "object",
        "description": "If an account has to replace documents after the submission, it has to use\nthe Document model instead of DocumentUploadRequest.\n",
        "example": {
          "document_type": "identity_verification",
          "document_sub_type": "passport",
          "content": "/9j/Cg==",
          "mime_type": "image/jpeg"
        },
        "title": "DocumentUploadRequest",
        "x-examples": {
          "example-1": {
            "document_type": "identity_verification",
            "document_sub_type": "passport",
            "content": "/9j/Cg==",
            "mime_type": "image/jpeg"
          }
        },
        "x-stoplight": {
          "id": "s4kbyizjyxroo"
        },
        "properties": {
          "document_type": {
            "type": "string",
            "enum": [
              "identity_verification",
              "address_verification",
              "date_of_birth_verification",
              "tax_id_verification",
              "account_approval_letter",
              "cip_result",
              "w8ben",
              "w9",
              "limited_trading_authorization"
            ],
            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
            "example": "identity_verification",
            "x-stoplight": {
              "id": "8u8j8gn6uuzk8"
            }
          },
          "document_sub_type": {
            "type": "string",
            "example": "passport",
            "description": "The specific type of document, e.g. passport"
          },
          "content": {
            "type": "string",
            "format": "base64",
            "example": "/9j/Cg==",
            "description": "Base64 string representing the document"
          },
          "content_data": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "additional_conditions": "None",
                "country_citizen": "Australia",
                "date": "2021-06-14",
                "date_of_birth": "1970-01-01",
                "foreign_tax_id": "123 456 789",
                "ftin_not_required": false,
                "full_name": "John Doe",
                "ip_address": "127.0.0.1",
                "mailing_address_city_state": "Adelaide, South Australia",
                "mailing_address_country": "Australia",
                "mailing_address_street": "51 Main St",
                "paragraph_number": "15",
                "percent_rate_withholding": 5,
                "permanent_address_city_state": "Adelaide, South Australia",
                "permanent_address_country": "Australia",
                "permanent_address_street": "20 Main St",
                "reference_number": "abc123",
                "residency": "Australia",
                "revision": "10-2021",
                "tax_id_ssn": "123-00-456",
                "timestamp": "2021-06-14T09:31:05Z",
                "income_type": "interest",
                "signer_full_name": "Mr. Signing User"
              }
            },
            "description": "W-8BEN documents model.",
            "properties": {
              "additional_conditions": {
                "type": "string",
                "description": "Any additional conditions to specify"
              },
              "country_citizen": {
                "type": "string",
                "description": "The country that the applicant is a citizen of"
              },
              "date": {
                "type": "string",
                "format": "date",
                "description": "date signed"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "date of birth of applicant"
              },
              "foreign_tax_id": {
                "type": "string",
                "description": "Applicant's tax id in their home country"
              },
              "ftin_not_required": {
                "type": "boolean",
                "description": "Required if foreign_tax_id and tax_id_ssn are empty."
              },
              "full_name": {
                "type": "string",
                "description": "Full name of applicant"
              },
              "ip_address": {
                "type": "string",
                "description": "IP address of applicant when signed"
              },
              "mailing_address_city_state": {
                "type": "string",
                "description": "Mailing city/state of applicant"
              },
              "mailing_address_country": {
                "type": "string",
                "description": "Mailing country for applicant"
              },
              "mailing_address_street": {
                "type": "string",
                "description": "Mailing street address for applicant"
              },
              "paragraph_number": {
                "type": "string"
              },
              "percent_rate_withholding": {
                "type": "integer"
              },
              "permanent_address_city_state": {
                "type": "string",
                "description": "Permanent city/state of applicant"
              },
              "permanent_address_country": {
                "type": "string",
                "description": "Permanent country of residence of applicant"
              },
              "permanent_address_street": {
                "type": "string",
                "description": "Permanent street address of applicant"
              },
              "reference_number": {
                "type": "string"
              },
              "residency": {
                "type": "string",
                "description": "Country of residency of applicant"
              },
              "revision": {
                "type": "string",
                "description": "Revision of the W8BEN form"
              },
              "tax_id_ssn": {
                "type": "string",
                "description": "TaxID/SSN of applicant"
              },
              "timestamp": {
                "type": "string",
                "format": "time",
                "description": "Timestamp when form data was gathered"
              },
              "income_type": {
                "type": "string",
                "description": "Income type of applicant"
              },
              "signer_full_name": {
                "type": "string",
                "description": "Full name of signing user"
              }
            },
            "required": [
              "country_citizen",
              "date",
              "date_of_birth",
              "full_name",
              "ip_address",
              "permanent_address_city_state",
              "permanent_address_country",
              "permanent_address_street",
              "revision",
              "timestamp",
              "signer_full_name"
            ],
            "x-stoplight": {
              "id": "8cjul4ni6pe66"
            }
          },
          "mime_type": {
            "type": "string",
            "example": "image/jpeg",
            "description": "This field is Required if content is specified. ENUM: application/pdf, image/png, or image/jpeg. If document_type is w8ben then application/json is also accepted"
          }
        },
        "required": [
          "document_type",
          "content"
        ]
      },
      "KYCResult": {
        "type": "object",
        "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
        "x-stoplight": {
          "id": "m6so9tt7secvm"
        },
        "properties": {
          "reject": {
            "title": "KYCResultType",
            "x-stoplight": {
              "id": "mkpd1y7i0tihh"
            },
            "type": "string",
            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
          },
          "accept": {
            "title": "KYCResultType",
            "x-stoplight": {
              "id": "mkpd1y7i0tihh"
            },
            "type": "string",
            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
          },
          "indeterminate": {
            "title": "KYCResultType",
            "x-stoplight": {
              "id": "mkpd1y7i0tihh"
            },
            "type": "string",
            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
          },
          "addidional_information": {
            "type": "string",
            "description": "Used to display a custom message."
          },
          "summary": {
            "type": "string",
            "x-stoplight": {
              "id": "dfz7vejxhvxyk"
            },
            "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
          }
        }
      },
      "StreetAddress": {
        "type": "string",
        "example": "20 N San Mateo Dr",
        "x-stoplight": {
          "id": "10wajx98hc79a"
        }
      },
      "Contact": {
        "type": "object",
        "description": "Contact is the model for the account owner contact information.\n",
        "x-stoplight": {
          "id": "qcig9irpj9334"
        },
        "properties": {
          "email_address": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phone_number": {
            "type": "string",
            "example": "+15556667788",
            "description": "Phone number should include the country code, format: “+15555555555”"
          },
          "street_address": {
            "type": "array",
            "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
            "items": {
              "type": "string",
              "example": "20 N San Mateo Dr",
              "x-stoplight": {
                "id": "10wajx98hc79a"
              }
            }
          },
          "unit": {
            "type": "string",
            "x-stoplight": {
              "id": "yybrq2o2nb5gy"
            },
            "description": "The specific apartment number if applicable"
          },
          "city": {
            "type": "string",
            "example": "San Mateo"
          },
          "state": {
            "type": "string",
            "example": "CA",
            "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
          },
          "postal_code": {
            "type": "string",
            "example": "94401"
          }
        },
        "required": [
          "email_address",
          "phone_number",
          "street_address"
        ]
      },
      "Identity": {
        "type": "object",
        "description": "Identity is the model to provide account owner’s identity information.\n",
        "example": {
          "given_name": "John",
          "family_name": "Doe",
          "date_of_birth": "1990-01-01",
          "tax_id": "666-55-4321",
          "tax_id_type": "USA_SSN",
          "country_of_citizenship": "AUS",
          "country_of_birth": "AUS",
          "country_of_tax_residence": "USA",
          "funding_source": [
            "employment_income"
          ]
        },
        "x-stoplight": {
          "id": "oi43k8rpw570e"
        },
        "properties": {
          "given_name": {
            "type": "string",
            "example": "John",
            "description": "The first/given name of the user."
          },
          "family_name": {
            "type": "string",
            "example": "Doe",
            "description": "The last name (surname) of the user."
          },
          "middle_name": {
            "type": "string",
            "x-stoplight": {
              "id": "p03brcsyyjbcq"
            },
            "description": "The middle name of the user."
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "example": "1990-01-01",
            "description": "The date of birth in \"YYYY-MM-DD\" format."
          },
          "tax_id": {
            "type": "string",
            "example": "666-55-4321",
            "description": "Required if tax_id_type is set."
          },
          "tax_id_type": {
            "type": "string",
            "title": "TaxIdType",
            "enum": [
              "USA_SSN",
              "ARG_AG_CUIT",
              "AUS_TFN",
              "AUS_ABN",
              "BOL_NIT",
              "BRA_CPF",
              "CHL_RUT",
              "COL_NIT",
              "CRI_NITE",
              "DEU_TAX_ID",
              "DOM_RNC",
              "ECU_RUC",
              "FRA_SPI",
              "GBR_UTR",
              "GBR_NINO",
              "GTM_NIT",
              "HND_RTN",
              "HUN_TIN",
              "IDN_KTP",
              "IND_PAN",
              "ISR_TAX_ID",
              "ITA_TAX_ID",
              "JPN_TAX_ID",
              "MEX_RFC",
              "NIC_RUC",
              "NLD_TIN",
              "PAN_RUC",
              "PER_RUC",
              "PRY_RUC",
              "SGP_NRIC",
              "SGP_FIN",
              "SGP_ASGD",
              "SGP_ITR",
              "SLV_NIT",
              "SWE_TAX_ID",
              "URY_RUT",
              "VEN_RIF",
              "NATIONAL_ID",
              "PASSPORT",
              "PERMANENT_RESIDENT",
              "DRIVER_LICENSE",
              "OTHER_GOV_ID",
              "NOT_SPECIFIED"
            ],
            "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
            "example": "USA_SSN",
            "x-stoplight": {
              "id": "ulm45kpr2peox"
            }
          },
          "country_of_citizenship": {
            "type": "string",
            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
            "example": "USA"
          },
          "country_of_birth": {
            "type": "string",
            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
            "example": "USA"
          },
          "country_of_tax_residence": {
            "type": "string",
            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
            "example": "USA"
          },
          "funding_source": {
            "type": "array",
            "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
            "items": {
              "type": "string",
              "enum": [
                "employment_income",
                "investments",
                "inheritance",
                "business_income",
                "savings",
                "family"
              ]
            }
          },
          "annual_income_min": {
            "type": "number",
            "description": "The lower bound of the user's annual income."
          },
          "annual_income_max": {
            "type": "number",
            "description": "The upper bound of the user's annual income."
          },
          "liquid_net_worth_min": {
            "type": "number",
            "description": "The lower bound of the user's liquid net worth."
          },
          "liquid_net_worth_max": {
            "type": "number",
            "description": "The upper bound of the user's liquid net worth."
          },
          "total_net_worth_min": {
            "type": "number",
            "description": "The lower bound of the user's total net worth."
          },
          "total_net_worth_max": {
            "type": "number",
            "description": "The upper bound of the user's total net worth."
          },
          "visa_type": {
            "type": "string",
            "x-stoplight": {
              "id": "y5a5r7inu02w8"
            },
            "description": "Only used to collect visa types for users residing in the USA."
          },
          "visa_expiration_date": {
            "type": "string",
            "x-stoplight": {
              "id": "q7b33k53b5alk"
            },
            "description": "Required if `visa_type` is set.",
            "format": "date"
          },
          "date_of_departure_from_usa": {
            "type": "string",
            "x-stoplight": {
              "id": "yasik2wcmshea"
            },
            "format": "date",
            "description": "Required if `visa_type` = B1 or B2"
          },
          "permanent_resident": {
            "type": "boolean",
            "x-stoplight": {
              "id": "jlvzbu3cevmju"
            },
            "description": "Only used to collect permanent residence status in the USA."
          },
          "extra": {
            "type": "object",
            "description": "Any additional information used for KYC purposes\n"
          }
        },
        "required": [
          "given_name",
          "family_name",
          "date_of_birth",
          "tax_id_type",
          "country_of_tax_residence",
          "funding_source"
        ]
      },
      "Disclosures": {
        "type": "object",
        "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
        "example": {
          "is_control_person": false,
          "is_affiliated_exchange_or_finra": false,
          "is_politically_exposed": false,
          "immediate_family_exposed": false
        },
        "x-stoplight": {
          "id": "h3ui3575tdh6q"
        },
        "properties": {
          "employment_status": {
            "type": "string",
            "enum": [
              "unemployed",
              "employed",
              "student",
              "retired"
            ],
            "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
          },
          "employer_name": {
            "type": "string",
            "description": "The name of the employer if the user is employed."
          },
          "employer_address": {
            "type": "string",
            "description": "The employer's address if the user is employed."
          },
          "employment_position": {
            "type": "string",
            "description": "The user's position if they are employed."
          },
          "is_control_person": {
            "type": "boolean",
            "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
          },
          "is_affiliated_exchange_or_finra": {
            "type": "boolean",
            "description": "Whether user is affiliated with any exchanges or FINRA."
          },
          "is_politically_exposed": {
            "type": "boolean",
            "description": "Whether the user is politically exposed."
          },
          "immediate_family_exposed": {
            "type": "boolean",
            "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
          },
          "context": {
            "type": "array",
            "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
            "nullable": true,
            "items": {
              "title": "DisclosureContextAnnotation",
              "type": "object",
              "properties": {
                "context_type": {
                  "type": "string",
                  "enum": [
                    "CONTROLLED_FIRM",
                    "IMMEDIATE_FAMILY_EXPOSED",
                    "AFFILIATE_FIRM"
                  ],
                  "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                },
                "company_name": {
                  "type": "string",
                  "description": "Required for FINRA affiliations and controlled firms."
                },
                "company_street_address": {
                  "type": "string",
                  "description": "Required for FINRA affiliations and controlled firms."
                },
                "company_city": {
                  "type": "string",
                  "description": "Required for FINRA affiliations and controlled firms."
                },
                "company_state": {
                  "type": "string",
                  "description": "Required if and only if `company_country` is `USA`."
                },
                "company_country": {
                  "type": "string",
                  "description": "Required for FINRA affiliations and controlled firms."
                },
                "company_compliance_email": {
                  "type": "string",
                  "description": "Required for FINRA affiliations and controlled firms."
                },
                "given_name": {
                  "type": "string",
                  "description": "Required for immediate family members of politically exposed persons."
                },
                "family_name": {
                  "type": "string",
                  "description": "Required for immediate family members of politically exposed persons."
                }
              },
              "required": [
                "context_type"
              ],
              "x-stoplight": {
                "id": "rf62uwbtfdfpk"
              }
            }
          }
        },
        "required": [
          "is_control_person",
          "is_affiliated_exchange_or_finra",
          "is_politically_exposed",
          "immediate_family_exposed"
        ]
      },
      "Agreement": {
        "type": "object",
        "x-stoplight": {
          "id": "ucn8nh8ei4mag"
        },
        "properties": {
          "agreement": {
            "type": "string",
            "title": "AgreementType",
            "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
            "enum": [
              "margin_agreement",
              "account_agreement",
              "customer_agreement",
              "crypto_agreement"
            ],
            "example": "customer_agreement",
            "x-stoplight": {
              "id": "pw9nog92a1hgz"
            }
          },
          "signed_at": {
            "type": "string",
            "example": "2019-09-11T18:09:33Z",
            "format": "date-time",
            "description": "The timestamp the agreement was signed."
          },
          "ip_address": {
            "type": "string",
            "format": "ipv4",
            "example": "185.13.21.99",
            "description": "The ip_address the signed agreements were sent from by the user."
          },
          "revision": {
            "type": "string",
            "description": "The revision date if agreement is a revision."
          }
        },
        "required": [
          "agreement",
          "signed_at",
          "ip_address"
        ]
      },
      "AgreementType": {
        "type": "string",
        "title": "AgreementType",
        "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
        "enum": [
          "margin_agreement",
          "account_agreement",
          "customer_agreement",
          "crypto_agreement"
        ],
        "example": "customer_agreement",
        "x-stoplight": {
          "id": "pw9nog92a1hgz"
        }
      },
      "Agreements": {
        "type": "array",
        "description": "The client has to present Alpaca Account Agreement and Margin Agreement to the end user, and have them read full sentences.",
        "items": {
          "type": "object",
          "x-stoplight": {
            "id": "ucn8nh8ei4mag"
          },
          "properties": {
            "agreement": {
              "type": "string",
              "title": "AgreementType",
              "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
              "enum": [
                "margin_agreement",
                "account_agreement",
                "customer_agreement",
                "crypto_agreement"
              ],
              "example": "customer_agreement",
              "x-stoplight": {
                "id": "pw9nog92a1hgz"
              }
            },
            "signed_at": {
              "type": "string",
              "example": "2019-09-11T18:09:33Z",
              "format": "date-time",
              "description": "The timestamp the agreement was signed."
            },
            "ip_address": {
              "type": "string",
              "format": "ipv4",
              "example": "185.13.21.99",
              "description": "The ip_address the signed agreements were sent from by the user."
            },
            "revision": {
              "type": "string",
              "description": "The revision date if agreement is a revision."
            }
          },
          "required": [
            "agreement",
            "signed_at",
            "ip_address"
          ]
        },
        "x-stoplight": {
          "id": "rgkowddv2zn4r"
        }
      },
      "TrustedContact": {
        "type": "object",
        "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
        "properties": {
          "given_name": {
            "type": "string",
            "example": "Jane"
          },
          "family_name": {
            "type": "string",
            "example": "Doe"
          },
          "email_address": {
            "type": "string",
            "format": "email",
            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
            "example": "jane.doe@example.com"
          },
          "phone_number": {
            "type": "string",
            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
          },
          "street_address": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
          },
          "city": {
            "type": "string",
            "description": "required if `street_address` is set\n"
          },
          "state": {
            "type": "string",
            "description": "required if `street_address` is set\n"
          },
          "postal_code": {
            "type": "string",
            "description": "required if `street_address` is set\n"
          },
          "country": {
            "type": "string",
            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
          }
        },
        "required": [
          "given_name",
          "family_name"
        ],
        "example": {
          "given_name": "Jane",
          "family_name": "Doe",
          "email_address": "jane.doe@example.com"
        },
        "x-stoplight": {
          "id": "fyme2rvoeickd"
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "x-stoplight": {
          "id": "d27prln6qqj0i"
        },
        "properties": {
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "Symbol or asset ID to identify the asset to trade"
          },
          "qty": {
            "type": "string",
            "format": "decimal",
            "example": "4.124",
            "description": "Number of shares to trade. Can be fractionable for only market and day order types."
          },
          "notional": {
            "type": "string",
            "format": "decimal",
            "example": "3",
            "description": "Dollar amount to trade. Cannot work with qty. Can only work for market order types and time_in_force = day."
          },
          "side": {
            "type": "string",
            "enum": [
              "buy",
              "sell",
              "buy_minus",
              "sell_plus",
              "sell_short",
              "sell_short_exempt",
              "undisclosed",
              "cross",
              "cross_short"
            ],
            "example": "buy",
            "description": "Represents what side of the transaction an order was on.",
            "x-stoplight": {
              "id": "zrdcas15ugcl7"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "market",
              "limit",
              "stop",
              "stop_limit",
              "trailing_stop"
            ],
            "example": "stop"
          },
          "time_in_force": {
            "type": "string",
            "enum": [
              "day",
              "gtc",
              "opg",
              "cls",
              "ioc",
              "fok"
            ],
            "example": "gtc",
            "x-stoplight": {
              "id": "fcff27bvys4gi"
            }
          },
          "limit_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Required if type is limit or stop_limit"
          },
          "stop_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Required if type is stop or stop_limit"
          },
          "trail_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "If type is trailing_stop, then one of trail_price or trail_percent is required"
          },
          "trail_percent": {
            "type": "string",
            "format": "decimal",
            "example": "5.0",
            "description": "If type is trailing_stop, then one of trail_price or trail_percent is required"
          },
          "extended_hours": {
            "type": "boolean",
            "example": false,
            "description": "Defaults to false. If true, order will be eligible to execute in premarket/afterhours. Only works with type limit and time_in_force = day."
          },
          "client_order_id": {
            "type": "string",
            "example": "eb9e2aaa-f71a-4f51-b5b4-52a6c565dad4",
            "description": "A unique identifier for the order. Automatically generated if not sent. (<= 48 characters)",
            "maxLength": 48
          },
          "order_class": {
            "type": "string",
            "enum": [
              "simple",
              "bracket",
              "oco",
              "oto"
            ],
            "example": "bracket",
            "x-stoplight": {
              "id": "5lrkevtge17ap"
            }
          },
          "take_profit": {
            "type": "object",
            "description": "Takes in a string/number value for limit_price",
            "properties": {
              "limit_price": {
                "type": "string",
                "format": "decimal",
                "example": "3.14"
              }
            }
          },
          "stop_loss": {
            "description": "Takes in a string/number values for stop_price and limit_price",
            "type": "object",
            "properties": {
              "stop_price": {
                "type": "string",
                "format": "decimal",
                "example": "3.14"
              },
              "limit_price": {
                "type": "string",
                "format": "decimal",
                "example": "3.14"
              }
            }
          },
          "commission": {
            "type": "string",
            "format": "decimal",
            "example": "1.0",
            "description": "The commission you want to collect from the user."
          },
          "commission_bps": {
            "type": "string",
            "format": "decimal",
            "example": "10",
            "description": "The percent commission you want to charge the end user on the order (expressed in bps). Alpaca will convert the order to a notional amount for purposes of calculating commission"
          },
          "source": {
            "type": "string",
            "x-stoplight": {
              "id": "6lusmwaj5fmzf"
            }
          },
          "instructions": {
            "type": "string",
            "x-stoplight": {
              "id": "8jlb3tz44l3tl"
            }
          },
          "subtag": {
            "type": "string",
            "x-stoplight": {
              "id": "zajfuuduk4uss"
            }
          },
          "swap_fee_bps": {
            "type": "string",
            "x-stoplight": {
              "id": "hs4bv5gu00jjh"
            },
            "format": "decimal"
          }
        },
        "required": [
          "symbol",
          "side",
          "type",
          "time_in_force"
        ]
      },
      "AssetClass": {
        "type": "string",
        "enum": [
          "us_equity",
          "crypto"
        ],
        "x-stoplight": {
          "id": "0stvwzkbv2e0u"
        }
      },
      "OrderType": {
        "type": "string",
        "enum": [
          "market",
          "limit",
          "stop",
          "stop_limit",
          "trailing_stop"
        ],
        "example": "stop"
      },
      "OrderSide": {
        "type": "string",
        "enum": [
          "buy",
          "sell",
          "buy_minus",
          "sell_plus",
          "sell_short",
          "sell_short_exempt",
          "undisclosed",
          "cross",
          "cross_short"
        ],
        "example": "buy",
        "description": "Represents what side of the transaction an order was on.",
        "x-stoplight": {
          "id": "zrdcas15ugcl7"
        }
      },
      "OrderClass": {
        "type": "string",
        "enum": [
          "simple",
          "bracket",
          "oco",
          "oto"
        ],
        "example": "bracket",
        "x-stoplight": {
          "id": "5lrkevtge17ap"
        }
      },
      "TimeInForce": {
        "type": "string",
        "enum": [
          "day",
          "gtc",
          "opg",
          "cls",
          "ioc",
          "fok"
        ],
        "example": "gtc",
        "x-stoplight": {
          "id": "fcff27bvys4gi"
        }
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "new",
          "partially_filled",
          "filled",
          "done_for_day",
          "canceled",
          "expired",
          "replaced",
          "pending_cancel",
          "pending_replace",
          "accepted",
          "pending_new",
          "accepted_for_bidding",
          "stopped",
          "rejected",
          "suspended",
          "calculated"
        ],
        "example": "filled",
        "x-stoplight": {
          "id": "742rdkivas7us"
        }
      },
      "Order": {
        "type": "object",
        "x-stoplight": {
          "id": "aygszffe87j44"
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "description": "Order ID generated by Alpaca"
          },
          "client_order_id": {
            "type": "string",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "description": "Client unique order ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Time when order was entered"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Time of most recent change to the order"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Time the order was submitted for execution or, if not yet submitted the created_at time. Because orders are submitted for execution asynchronous to database updates, at times this may be before the created_at time."
          },
          "filled_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Time the order was filled. Can be null if not filled",
            "nullable": true
          },
          "expired_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Can be null",
            "nullable": true
          },
          "canceled_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Can be null",
            "nullable": true
          },
          "failed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Can be null",
            "nullable": true
          },
          "replaced_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Can be null",
            "nullable": true
          },
          "replaced_by": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "description": "The order ID that this order was replaced by. (Can be null)",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "description": "The order ID that this order replaces. (Can be null)",
            "nullable": true
          },
          "asset_id": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "description": "The asset ID"
          },
          "symbol": {
            "type": "string",
            "example": "AALP",
            "description": "The asset symbol"
          },
          "asset_class": {
            "type": "string",
            "enum": [
              "us_equity",
              "crypto"
            ],
            "x-stoplight": {
              "id": "0stvwzkbv2e0u"
            }
          },
          "notional": {
            "type": "string",
            "format": "decimal",
            "example": "4.2",
            "description": "Ordered notional amount. If entered, qty will be null. Can take up to 2 decimal points.",
            "nullable": true
          },
          "qty": {
            "type": "string",
            "format": "decimal",
            "example": "4.2",
            "description": "Ordered quantity. If entered, notional will be null. Can take up to 2 decimal points.",
            "nullable": true
          },
          "filled_qty": {
            "type": "string",
            "format": "decimal",
            "example": "4.2",
            "description": "Filled quantity"
          },
          "filled_avg_price": {
            "type": "string",
            "format": "decimal",
            "example": "4.2",
            "description": "Filled average price. Can be 0 until order is processed in case order is passed outside of market hours",
            "nullable": true
          },
          "order_class": {
            "type": "string",
            "enum": [
              "simple",
              "bracket",
              "oco",
              "oto"
            ],
            "example": "bracket",
            "x-stoplight": {
              "id": "5lrkevtge17ap"
            }
          },
          "order_type": {
            "type": "string",
            "enum": [
              "market",
              "limit",
              "stop",
              "stop_limit",
              "trailing_stop"
            ],
            "example": "stop"
          },
          "type": {
            "type": "string",
            "enum": [
              "market",
              "limit",
              "stop",
              "stop_limit",
              "trailing_stop"
            ],
            "example": "stop"
          },
          "side": {
            "type": "string",
            "enum": [
              "buy",
              "sell",
              "buy_minus",
              "sell_plus",
              "sell_short",
              "sell_short_exempt",
              "undisclosed",
              "cross",
              "cross_short"
            ],
            "example": "buy",
            "description": "Represents what side of the transaction an order was on.",
            "x-stoplight": {
              "id": "zrdcas15ugcl7"
            }
          },
          "time_in_force": {
            "type": "string",
            "enum": [
              "day",
              "gtc",
              "opg",
              "cls",
              "ioc",
              "fok"
            ],
            "example": "gtc",
            "x-stoplight": {
              "id": "fcff27bvys4gi"
            }
          },
          "limit_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Limit price",
            "nullable": true
          },
          "stop_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Stop price",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "partially_filled",
              "filled",
              "done_for_day",
              "canceled",
              "expired",
              "replaced",
              "pending_cancel",
              "pending_replace",
              "accepted",
              "pending_new",
              "accepted_for_bidding",
              "stopped",
              "rejected",
              "suspended",
              "calculated"
            ],
            "example": "filled",
            "x-stoplight": {
              "id": "742rdkivas7us"
            }
          },
          "extended_hours": {
            "type": "boolean",
            "example": true
          },
          "legs": {
            "type": "array",
            "description": "When querying non-simple order_class orders in a nested style, an array of Order entities associated with this order. Otherwise, null.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "trail_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "The dollar value away from the high water mark for trailing stop orders.",
            "nullable": true
          },
          "trail_percent": {
            "type": "string",
            "format": "decimal",
            "example": "5.0",
            "description": "The percent value away from the high water mark for trailing stop orders.",
            "nullable": true
          },
          "hwm": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "The highest (lowest) market price seen since the trailing stop order was submitted.",
            "nullable": true
          },
          "commission": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "The dollar value commission you want to charge the end user."
          },
          "commission_bps": {
            "type": "string",
            "format": "decimal",
            "example": "10",
            "description": "The percent commission you want to charge the end user on the order (expressed in bps). Alpaca will convert the order to a notional amount for purposes of calculating commission"
          },
          "swap_rate": {
            "type": "string",
            "x-stoplight": {
              "id": "n291a2g9jl9xe"
            },
            "description": "Swap rate is the exchange rate (without mark-up) used to convert the price into local currency or crypto asset"
          },
          "swap_fee_bps": {
            "type": "string",
            "x-stoplight": {
              "id": "89yg6cj3l3g2h"
            },
            "description": "Fee in basis points on top swap rate charged by the correspondent on every order"
          },
          "usd": {
            "type": "object",
            "x-stoplight": {
              "id": "h8eckru1banfe"
            },
            "description": "Nested object to encompass the USD equivalent fields for the local currency fields"
          }
        },
        "required": [
          "id",
          "symbol"
        ]
      },
      "UpdateOrderRequest": {
        "type": "object",
        "title": "OrderUpdateRequest",
        "description": "Represents the fields that are editable in an order replace/update call.\n\nNote: client_order_id is currently not editable on its own, one of the other fields must be changed at the same time to effectively replace the order",
        "properties": {
          "qty": {
            "type": "string",
            "format": "decimal",
            "example": "4.2",
            "description": "You can only patch full shares for now"
          },
          "time_in_force": {
            "type": "string",
            "enum": [
              "day",
              "gtc",
              "opg",
              "cls",
              "ioc",
              "fok"
            ],
            "example": "gtc",
            "x-stoplight": {
              "id": "fcff27bvys4gi"
            }
          },
          "limit_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Required if original order's `type` field was limit or stop_limit"
          },
          "stop_price": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "Required if original order's `type` field was stop or stop_limit"
          },
          "trail": {
            "type": "string",
            "format": "decimal",
            "example": "3.14",
            "description": "The new value of the trail_price or trail_percent"
          },
          "client_order_id": {
            "type": "string",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
          }
        },
        "x-stoplight": {
          "id": "iip4vylvgdefq"
        }
      },
      "Bank": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "8475c676-68e3-4cfc-a683-9ca2f47a6172",
            "account_id": "56712986-9ff7-4d8f-8e52-077e099e533e",
            "name": "Bank XYZ",
            "status": "QUEUED",
            "country": "",
            "state_province": "",
            "postal_code": "",
            "city": "",
            "street_address": "",
            "account_number": "123456789abc",
            "bank_code": "123456789",
            "bank_code_type": "ABA",
            "created_at": "2022-02-11T21:35:19.268681613Z",
            "updated_at": "2022-02-11T21:35:19.268681613Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          },
          "account_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "SENT_TO_CLEARING",
              "APPROVED",
              "CANCELED"
            ],
            "description": "QUEUED, SENT_TO_CLEARING, APPROVED, CANCELED"
          },
          "name": {
            "type": "string",
            "description": "Name of recipient bank"
          },
          "bank_code": {
            "type": "string",
            "description": "9-Digit ABA RTN (Routing Number) or BIC"
          },
          "bank_code_type": {
            "type": "string",
            "enum": [
              "ABA",
              "BIC"
            ],
            "description": "ABA (Domestic) or BIC (International)"
          },
          "country": {
            "type": "string",
            "description": "Only for international banks"
          },
          "state_province": {
            "type": "string",
            "description": "Only for international banks"
          },
          "postal_code": {
            "type": "string",
            "description": "Only for international banks"
          },
          "city": {
            "type": "string",
            "description": "Only for international banks"
          },
          "street_address": {
            "type": "string",
            "description": "Only for international banks"
          },
          "account_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "bank_code",
          "bank_code_type",
          "account_number"
        ],
        "x-stoplight": {
          "id": "zb27jqls868ez"
        }
      },
      "CreateBankRequest": {
        "title": "CreateBankRequest",
        "type": "object",
        "description": "Represents the possible fields to send when creating a new associated Bank resource for an account",
        "x-stoplight": {
          "id": "dqsm6v1t25vuq"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of recipient bank"
          },
          "bank_code": {
            "type": "string",
            "description": "9-Digit ABA RTN (Routing Number) or BIC"
          },
          "bank_code_type": {
            "type": "string",
            "enum": [
              "ABA",
              "BIC"
            ],
            "description": "ABA (Domestic) or BIC (International)"
          },
          "account_number": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Only for international banks, ie if bank_code_type = BIC"
          },
          "state_province": {
            "type": "string",
            "description": "Only for international banks, ie if bank_code_type = BIC"
          },
          "postal_code": {
            "type": "string",
            "description": "Only for international banks, ie if bank_code_type = BIC"
          },
          "city": {
            "type": "string",
            "description": "Only for international banks, ie if bank_code_type = BIC"
          },
          "street_address": {
            "type": "string",
            "description": "Only for international banks, ie if bank_code_type = BIC"
          }
        },
        "required": [
          "name",
          "bank_code",
          "bank_code_type",
          "account_number"
        ]
      },
      "IdentifiedResource": {
        "title": "IdentifiedResource",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "61e69015-8549-4bfd-b9c3-01e75843f47d",
            "created_at": "2021-03-16T18:38:01.942282Z",
            "updated_at": "2021-03-16T18:38:01.942282Z"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "description": "TODO: Remove this model",
        "x-internal": true,
        "x-stoplight": {
          "id": "np9d1l0a80v2h"
        }
      },
      "ACHRelationship": {
        "title": "ACHRelationship",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-03-16T18:38:01.942282Z",
            "description": "Format: 2020-01-01T01:01:01Z"
          },
          "account_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "APPROVED",
              "PENDING",
              "CANCEL_REQUESTED"
            ]
          },
          "account_owner_name": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the account owner"
          },
          "bank_account_type": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "CHECKING",
              "SAVINGS"
            ],
            "description": "Must be CHECKING or SAVINGS"
          },
          "bank_account_number": {
            "type": "string",
            "minLength": 1
          },
          "bank_routing_number": {
            "type": "string",
            "minLength": 1
          },
          "nickname": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "account_id",
          "status",
          "account_owner_name"
        ],
        "x-stoplight": {
          "id": "013jdl3wk8c87"
        }
      },
      "CreateACHRelationshipRequest": {
        "description": "Represents the fields used in creation of a new ACHRelationship.\n\nYou can create an ACHRelationship by passing the required fields here or if you have an account with Plaid you can use our integration with Plaid to create a relationship.\n\nPlease see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#plaid-integration-for-bank-transfers) for more info on using Plaid with Alpaca",
        "type": "object",
        "title": "CreateACHRelationshipRequest",
        "x-stoplight": {
          "id": "2vv9f2s2sc8om"
        },
        "properties": {
          "account_owner_name": {
            "type": "string",
            "minLength": 1
          },
          "bank_account_type": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "CHECKING",
              "SAVINGS"
            ],
            "description": "Must be `CHECKING` or `SAVINGS`"
          },
          "bank_account_number": {
            "type": "string",
            "minLength": 1,
            "description": "In sandbox, this still must be a valid format"
          },
          "bank_routing_number": {
            "type": "string",
            "minLength": 1,
            "description": "In sandbox, this still must be a valid format"
          },
          "nickname": {
            "type": "string",
            "minLength": 1
          },
          "processor_token": {
            "type": "string",
            "description": "If using Plaid, you can specify a Plaid processor token here "
          },
          "instant": {
            "type": "boolean",
            "x-stoplight": {
              "id": "zs4ueaei5ins9"
            }
          }
        },
        "required": [
          "account_owner_name",
          "bank_account_type",
          "bank_account_number",
          "bank_routing_number"
        ]
      },
      "UntypedACHTransferData": {
        "title": "UntypedACHTransferData",
        "allOf": [
          {
            "title": "UntypedTransferData",
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal"
              },
              "direction": {
                "type": "string",
                "enum": [
                  "INCOMING",
                  "OUTGOING"
                ]
              }
            },
            "required": [
              "amount",
              "direction"
            ],
            "x-stoplight": {
              "id": "tjar7yvz35ydv"
            }
          },
          {
            "type": "object",
            "properties": {
              "relationship_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "relationship_id"
            ]
          }
        ],
        "x-stoplight": {
          "id": "i9vaag8nhps1u"
        }
      },
      "TransferResource": {
        "title": "TransferResource",
        "allOf": [
          {
            "title": "IdentifiedResource",
            "type": "object",
            "x-examples": {
              "example-1": {
                "id": "61e69015-8549-4bfd-b9c3-01e75843f47d",
                "created_at": "2021-03-16T18:38:01.942282Z",
                "updated_at": "2021-03-16T18:38:01.942282Z"
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2021-03-16T18:38:01.942282Z",
                "description": "Format: 2020-01-01T01:01:01Z"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2021-03-16T18:38:01.942282Z",
                "description": "Format: 2020-01-01T01:01:01Z"
              }
            },
            "required": [
              "id",
              "created_at",
              "updated_at"
            ],
            "description": "TODO: Remove this model",
            "x-internal": true,
            "x-stoplight": {
              "id": "np9d1l0a80v2h"
            }
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ach",
                  "wire"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "QUEUED",
                  "APPROVAL_PENDING",
                  "PENDING",
                  "SENT_TO_CLEARING",
                  "REJECTED",
                  "CANCELED",
                  "APPROVED",
                  "COMPLETE",
                  "RETURNED"
                ]
              },
              "account_id": {
                "type": "string",
                "format": "uuid"
              },
              "reason": {
                "type": "string",
                "nullable": true
              },
              "expires_at": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "type",
              "status",
              "account_id",
              "expires_at"
            ]
          },
          {
            "oneOf": [
              {
                "title": "UntypedACHTransferData",
                "allOf": [
                  {
                    "title": "UntypedTransferData",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "format": "decimal"
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "INCOMING",
                          "OUTGOING"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "direction"
                    ],
                    "x-stoplight": {
                      "id": "tjar7yvz35ydv"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "relationship_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "relationship_id"
                    ]
                  }
                ],
                "x-stoplight": {
                  "id": "i9vaag8nhps1u"
                }
              },
              {
                "allOf": [
                  {
                    "title": "UntypedTransferData",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "format": "decimal"
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "INCOMING",
                          "OUTGOING"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "direction"
                    ],
                    "x-stoplight": {
                      "id": "tjar7yvz35ydv"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "additional_information": {
                        "type": "string"
                      },
                      "bank_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "bank_id"
                    ]
                  }
                ],
                "title": "UntypedWireTransferData",
                "x-stoplight": {
                  "id": "nvbjf7idwk0ck"
                }
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ach": "#/components/schemas/UntypedACHTransferData",
                "wire": "#/components/schemas/UntypedWireTransferData"
              }
            }
          }
        ],
        "x-stoplight": {
          "id": "yti97z3bu9rn8"
        }
      },
      "TransferData": {
        "title": "TransferData",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "transfer_type": {
                "type": "string",
                "enum": [
                  "ach",
                  "wire"
                ]
              },
              "timing": {
                "type": "string",
                "enum": [
                  "immediate"
                ]
              }
            },
            "required": [
              "transfer_type"
            ]
          },
          {
            "oneOf": [
              {
                "title": "UntypedACHTransferData",
                "allOf": [
                  {
                    "title": "UntypedTransferData",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "format": "decimal"
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "INCOMING",
                          "OUTGOING"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "direction"
                    ],
                    "x-stoplight": {
                      "id": "tjar7yvz35ydv"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "relationship_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "relationship_id"
                    ]
                  }
                ],
                "x-stoplight": {
                  "id": "i9vaag8nhps1u"
                }
              },
              {
                "allOf": [
                  {
                    "title": "UntypedTransferData",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "format": "decimal"
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "INCOMING",
                          "OUTGOING"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "direction"
                    ],
                    "x-stoplight": {
                      "id": "tjar7yvz35ydv"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "additional_information": {
                        "type": "string"
                      },
                      "bank_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "bank_id"
                    ]
                  }
                ],
                "title": "UntypedWireTransferData",
                "x-stoplight": {
                  "id": "nvbjf7idwk0ck"
                }
              }
            ],
            "discriminator": {
              "propertyName": "transfer_type",
              "mapping": {
                "ach": "#/components/schemas/UntypedACHTransferData",
                "wire": "#/components/schemas/UntypedWireTransferData"
              }
            }
          }
        ],
        "x-stoplight": {
          "id": "slca0hcxw7fft"
        }
      },
      "UntypedWireTransferData": {
        "allOf": [
          {
            "title": "UntypedTransferData",
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal"
              },
              "direction": {
                "type": "string",
                "enum": [
                  "INCOMING",
                  "OUTGOING"
                ]
              }
            },
            "required": [
              "amount",
              "direction"
            ],
            "x-stoplight": {
              "id": "tjar7yvz35ydv"
            }
          },
          {
            "type": "object",
            "properties": {
              "additional_information": {
                "type": "string"
              },
              "bank_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "bank_id"
            ]
          }
        ],
        "title": "UntypedWireTransferData",
        "x-stoplight": {
          "id": "nvbjf7idwk0ck"
        }
      },
      "UntypedTransferData": {
        "title": "UntypedTransferData",
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "format": "decimal"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ]
          }
        },
        "required": [
          "amount",
          "direction"
        ],
        "x-stoplight": {
          "id": "tjar7yvz35ydv"
        }
      },
      "CreateTransferRequest": {
        "title": "CreateTransferRequest",
        "type": "object",
        "description": "[See main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#creating-a-transfer-entity)",
        "x-stoplight": {
          "id": "p5r8jvdp1gmvw"
        },
        "properties": {
          "transfer_type": {
            "type": "string",
            "example": "ach",
            "enum": [
              "ach",
              "instant_ach",
              "wire"
            ],
            "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
            "title": "TransferType",
            "x-stoplight": {
              "id": "bn365jqublfc6"
            }
          },
          "relationship_id": {
            "type": "string",
            "format": "uuid",
            "description": "Required if type = `ach`\n\nThe ach_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#creating-an-ach-relationship)"
          },
          "bank_id": {
            "type": "string",
            "format": "uuid",
            "description": "Required if type = `wire`\n\nThe bank_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/bank/#creating-a-new-bank-relationship)"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "description": "Must be > 0.00"
          },
          "direction": {
            "type": "string",
            "example": "INCOMING",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
            "x-stoplight": {
              "id": "mda3ylkcj1ceo"
            }
          },
          "timing": {
            "type": "string",
            "example": "immediate",
            "enum": [
              "immediate"
            ],
            "description": "Only `immediate` is currently supported.\n\nvalues:\n\n- **immediate**\n\n- **next_day**",
            "x-stoplight": {
              "id": "v6623fj1j3umc"
            }
          },
          "additional_information": {
            "type": "string",
            "description": "Additional details for when type = `wire`",
            "nullable": true
          },
          "fee_payment_method": {
            "title": "FeePaymentMethod",
            "x-stoplight": {
              "id": "ycxjjvxcdifuc"
            },
            "type": "string",
            "description": "Only outgoing wire fees are currently supported for automated processing.\n\n\n**user**\tThe end user will pay any applicable fees\n**invoice**\tAny applicable fees will be billed to the client in the following monthly invoice"
          }
        },
        "required": [
          "transfer_type",
          "amount",
          "direction",
          "timing"
        ]
      },
      "Transfer": {
        "title": "Transfer",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "relationship_id": "81412018-ffa2-43f9-a3eb-d39f1c5e0f87",
            "bank_id": "f1ae96de-94c1-468e-93a3-6b7213930ca8",
            "account_id": "449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65",
            "type": "ach",
            "status": "QUEUED",
            "reason": "string",
            "amount": "string",
            "direction": "INCOMING",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "expires_at": "2019-08-24T14:15:22Z",
            "additional_information": "string"
          }
        },
        "description": "Transfers allow you to transfer money/balance into your end customers' account (deposits) or out (withdrawal).\n\n[Main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#the-transfer-object)",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The transfer ID"
          },
          "relationship_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ACH relationship ID only present if type = \"ach\""
          },
          "bank_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the Bank, only present if type = \"wire\""
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "The account ID"
          },
          "type": {
            "type": "string",
            "example": "ach",
            "enum": [
              "ach",
              "instant_ach",
              "wire"
            ],
            "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
            "title": "TransferType",
            "x-stoplight": {
              "id": "bn365jqublfc6"
            }
          },
          "status": {
            "type": "string",
            "example": "QUEUED",
            "enum": [
              "QUEUED",
              "APPROVAL_PENDING",
              "PENDING",
              "SENT_TO_CLEARING",
              "REJECTED",
              "CANCELED",
              "APPROVED",
              "COMPLETE",
              "RETURNED"
            ],
            "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
            "x-stoplight": {
              "id": "mqx0hpg6h25vt"
            }
          },
          "reason": {
            "type": "string",
            "description": "Cause of the status",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "description": "Must be > 0.00",
            "format": "decimal"
          },
          "direction": {
            "type": "string",
            "example": "INCOMING",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
            "x-stoplight": {
              "id": "mda3ylkcj1ceo"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timedate when transfer was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timedate when transfer was updated"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timedate when transfer was expired"
          },
          "additional_information": {
            "type": "string",
            "description": "Additional information. Only applies when type = \"wire\".",
            "nullable": true
          },
          "hold_until": {
            "type": "string",
            "format": "date-time"
          },
          "instant_amount": {
            "type": "string"
          },
          "requested_amount": {
            "type": "string",
            "description": "Must be > 0.00. Only applies when type = \"wire\".",
            "format": "decimal",
            "nullable": true
          },
          "fee": {
            "type": "string",
            "description": "Fee amount to be collected. Only applies when type = \"wire\".",
            "format": "decimal",
            "nullable": true
          },
          "fee_payment_method": {
            "type": "string",
            "description": "Either \"user\" or \"invoice\". Only applies when type = \"wire\".",
            "nullable": true
          }
        },
        "required": [
          "id",
          "account_id",
          "type",
          "status",
          "amount",
          "direction",
          "created_at"
        ],
        "x-stoplight": {
          "id": "f986mttnx5c4n"
        }
      },
      "TransferType": {
        "type": "string",
        "example": "ach",
        "enum": [
          "ach",
          "instant_ach",
          "wire"
        ],
        "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
        "title": "TransferType",
        "x-stoplight": {
          "id": "bn365jqublfc6"
        }
      },
      "TransferDirection": {
        "type": "string",
        "example": "INCOMING",
        "enum": [
          "INCOMING",
          "OUTGOING"
        ],
        "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
        "x-stoplight": {
          "id": "mda3ylkcj1ceo"
        }
      },
      "TransferTiming": {
        "type": "string",
        "example": "immediate",
        "enum": [
          "immediate"
        ],
        "description": "Only `immediate` is currently supported.\n\nvalues:\n\n- **immediate**\n\n- **next_day**",
        "x-stoplight": {
          "id": "v6623fj1j3umc"
        }
      },
      "TransferStatus": {
        "type": "string",
        "example": "QUEUED",
        "enum": [
          "QUEUED",
          "APPROVAL_PENDING",
          "PENDING",
          "SENT_TO_CLEARING",
          "REJECTED",
          "CANCELED",
          "APPROVED",
          "COMPLETE",
          "RETURNED"
        ],
        "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
        "x-stoplight": {
          "id": "mqx0hpg6h25vt"
        }
      },
      "Journal": {
        "title": "Journal",
        "example": {
          "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
          "entry_type": "JNLS",
          "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
          "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
          "status": "executed",
          "symbol": "AAPL",
          "qty": "2",
          "price": "128.23"
        },
        "x-examples": {
          "example": {
            "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
            "entry_type": "JNLS",
            "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
            "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
            "status": "executed",
            "symbol": "AAPL",
            "qty": "2",
            "settle_date": "2020-12-24",
            "price": "128.23"
          },
          "example-pending": {
            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
            "entry_type": "JNLC",
            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
            "symbol": null,
            "qty": null,
            "price": "0",
            "status": "pending",
            "settle_date": "2022-02-17",
            "system_date": "2022-02-17",
            "net_amount": "645",
            "description": ""
          },
          "example-queued": {
            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
            "entry_type": "JNLC",
            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
            "symbol": "",
            "qty": null,
            "price": "0",
            "status": "queued",
            "settle_date": null,
            "system_date": null,
            "net_amount": "645",
            "description": ""
          }
        },
        "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "journal ID"
              },
              "entry_type": {
                "type": "string",
                "title": "",
                "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                "enum": [
                  "JNLC",
                  "JNLS"
                ],
                "x-stoplight": {
                  "id": "itme4epinxsnk"
                }
              },
              "from_account": {
                "type": "string",
                "format": "uuid",
                "description": "account ID the shares go from"
              },
              "to_account": {
                "type": "string",
                "format": "uuid",
                "description": "account ID the shares go to"
              },
              "settle_date": {
                "type": "string",
                "format": "date"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "canceled",
                  "executed",
                  "queued",
                  "rejected",
                  "deleted"
                ],
                "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                "x-stoplight": {
                  "id": "ay4nu4z1j11cu"
                }
              }
            },
            "required": [
              "id",
              "entry_type",
              "from_account",
              "to_account",
              "settle_date"
            ]
          },
          {
            "oneOf": [
              {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                    "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                    "entry_type": "JNLS",
                    "symbol": "AAPL",
                    "qty": "0.5",
                    "price": "128.23",
                    "status": "executed",
                    "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                    "settle_date": "2020-12-24",
                    "system_date": "2020-12-24",
                    "description": "this is a test journal"
                  }
                },
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The journal ID"
                  },
                  "to_account": {
                    "type": "string",
                    "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                  },
                  "entry_type": {
                    "type": "string",
                    "description": "JNLS"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the security journaled"
                  },
                  "qty": {
                    "type": "string",
                    "description": "The quantity of the securities journaled"
                  },
                  "price": {
                    "type": "string",
                    "description": "The price of the security journaled"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "canceled",
                      "executed",
                      "queued",
                      "rejected",
                      "deleted"
                    ],
                    "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                    "x-stoplight": {
                      "id": "ay4nu4z1j11cu"
                    }
                  },
                  "from_account": {
                    "type": "string",
                    "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                  },
                  "settle_date": {
                    "type": "string",
                    "description": "Date string in “%Y-%m-%d” format"
                  },
                  "system_date": {
                    "type": "string",
                    "description": "Date string in “%Y-%m-%d” format"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "29s5ect4watc4"
                    },
                    "description": "Currency denomination of the journal. USD by default."
                  }
                }
              },
              {
                "example": {
                  "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                  "entry_type": "JNLC",
                  "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                  "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                  "status": "pending",
                  "net_amount": "115.5"
                },
                "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                "type": "object",
                "title": "JNLC",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                  },
                  "net_amount": {
                    "type": "string",
                    "format": "decimal",
                    "description": "Only valid for JNLC journals. Null for JNLS."
                  },
                  "transmitter_name": {
                    "type": "string",
                    "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                  },
                  "transmitter_account_number": {
                    "type": "string",
                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                  },
                  "transmitter_address": {
                    "type": "string",
                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                  },
                  "transmitter_financial_institution": {
                    "type": "string",
                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                  },
                  "transmitter_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Only valid for JNLC journals. Null for JNLS."
                  }
                },
                "required": [
                  "net_amount"
                ],
                "x-examples": {},
                "x-stoplight": {
                  "id": "qo2ttptb2frpx"
                }
              }
            ]
          }
        ],
        "x-stoplight": {
          "id": "2isltcm8hzb23"
        }
      },
      "JournalStatus": {
        "type": "string",
        "enum": [
          "pending",
          "canceled",
          "executed",
          "queued",
          "rejected",
          "deleted"
        ],
        "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
        "x-stoplight": {
          "id": "ay4nu4z1j11cu"
        }
      },
      "JournalEntryType": {
        "type": "string",
        "title": "",
        "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
        "enum": [
          "JNLC",
          "JNLS"
        ],
        "x-stoplight": {
          "id": "itme4epinxsnk"
        }
      },
      "JNLS": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
            "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
            "entry_type": "JNLS",
            "symbol": "AAPL",
            "qty": "0.5",
            "price": "128.23",
            "status": "executed",
            "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
            "settle_date": "2020-12-24",
            "system_date": "2020-12-24",
            "description": "this is a test journal"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The journal ID"
          },
          "to_account": {
            "type": "string",
            "description": "The account ID that received the journal - account_status must equal to ACTIVE"
          },
          "entry_type": {
            "type": "string",
            "description": "JNLS"
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the security journaled"
          },
          "qty": {
            "type": "string",
            "description": "The quantity of the securities journaled"
          },
          "price": {
            "type": "string",
            "description": "The price of the security journaled"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "canceled",
              "executed",
              "queued",
              "rejected",
              "deleted"
            ],
            "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
            "x-stoplight": {
              "id": "ay4nu4z1j11cu"
            }
          },
          "from_account": {
            "type": "string",
            "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
          },
          "settle_date": {
            "type": "string",
            "description": "Date string in “%Y-%m-%d” format"
          },
          "system_date": {
            "type": "string",
            "description": "Date string in “%Y-%m-%d” format"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "x-stoplight": {
              "id": "29s5ect4watc4"
            },
            "description": "Currency denomination of the journal. USD by default."
          }
        }
      },
      "JNLC": {
        "example": {
          "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
          "entry_type": "JNLC",
          "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
          "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
          "status": "pending",
          "net_amount": "115.5"
        },
        "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
        "type": "object",
        "title": "JNLC",
        "properties": {
          "description": {
            "type": "string",
            "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
          },
          "net_amount": {
            "type": "string",
            "format": "decimal",
            "description": "Only valid for JNLC journals. Null for JNLS."
          },
          "transmitter_name": {
            "type": "string",
            "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
          },
          "transmitter_account_number": {
            "type": "string",
            "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
          },
          "transmitter_address": {
            "type": "string",
            "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
          },
          "transmitter_financial_institution": {
            "type": "string",
            "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
          },
          "transmitter_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Only valid for JNLC journals. Null for JNLS."
          }
        },
        "required": [
          "net_amount"
        ],
        "x-examples": {},
        "x-stoplight": {
          "id": "qo2ttptb2frpx"
        }
      },
      "JournalData": {
        "title": "JournalData",
        "type": "object",
        "properties": {
          "entry_type": {
            "type": "string",
            "title": "",
            "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
            "enum": [
              "JNLC",
              "JNLS"
            ],
            "x-stoplight": {
              "id": "itme4epinxsnk"
            }
          },
          "from_account": {
            "type": "string",
            "format": "uuid"
          },
          "to_account": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "description": "Required for JNLC.\nThe dollar amount to move. It has to be\na positive value.\n"
          },
          "symbol": {
            "type": "string",
            "description": "Required for JNLS.\n"
          },
          "qty": {
            "type": "string",
            "format": "decimal",
            "description": "Required for JNLS.\nThe number of shares to move. It has to be\na positive value.\n"
          }
        },
        "required": [
          "entry_type",
          "from_account",
          "to_account"
        ],
        "x-stoplight": {
          "id": "092vjqryjigtb"
        }
      },
      "JournalResource": {
        "title": "JournalResource",
        "oneOf": [
          {
            "example": {
              "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
              "entry_type": "JNLC",
              "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
              "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
              "status": "pending",
              "net_amount": "115.5"
            },
            "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
            "type": "object",
            "title": "JNLC",
            "properties": {
              "description": {
                "type": "string",
                "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
              },
              "net_amount": {
                "type": "string",
                "format": "decimal",
                "description": "Only valid for JNLC journals. Null for JNLS."
              },
              "transmitter_name": {
                "type": "string",
                "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
              },
              "transmitter_account_number": {
                "type": "string",
                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
              },
              "transmitter_address": {
                "type": "string",
                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
              },
              "transmitter_financial_institution": {
                "type": "string",
                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
              },
              "transmitter_timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Only valid for JNLC journals. Null for JNLS."
              }
            },
            "required": [
              "net_amount"
            ],
            "x-examples": {},
            "x-stoplight": {
              "id": "qo2ttptb2frpx"
            }
          },
          {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                "entry_type": "JNLS",
                "symbol": "AAPL",
                "qty": "0.5",
                "price": "128.23",
                "status": "executed",
                "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                "settle_date": "2020-12-24",
                "system_date": "2020-12-24",
                "description": "this is a test journal"
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "description": "The journal ID"
              },
              "to_account": {
                "type": "string",
                "description": "The account ID that received the journal - account_status must equal to ACTIVE"
              },
              "entry_type": {
                "type": "string",
                "description": "JNLS"
              },
              "symbol": {
                "type": "string",
                "description": "The symbol of the security journaled"
              },
              "qty": {
                "type": "string",
                "description": "The quantity of the securities journaled"
              },
              "price": {
                "type": "string",
                "description": "The price of the security journaled"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "canceled",
                  "executed",
                  "queued",
                  "rejected",
                  "deleted"
                ],
                "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                "x-stoplight": {
                  "id": "ay4nu4z1j11cu"
                }
              },
              "from_account": {
                "type": "string",
                "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
              },
              "settle_date": {
                "type": "string",
                "description": "Date string in “%Y-%m-%d” format"
              },
              "system_date": {
                "type": "string",
                "description": "Date string in “%Y-%m-%d” format"
              },
              "description": {
                "type": "string"
              },
              "currency": {
                "type": "string",
                "x-stoplight": {
                  "id": "29s5ect4watc4"
                },
                "description": "Currency denomination of the journal. USD by default."
              }
            }
          }
        ],
        "discriminator": {
          "propertyName": "entry_type",
          "mapping": {
            "JNLC": "#/components/schemas/JNLC",
            "JNLS": "#/components/schemas/JNLS"
          }
        },
        "x-stoplight": {
          "id": "p6woubhqxj3os"
        }
      },
      "CreateJournalRequest": {
        "description": "Journals API allows you to move cash or securities from one account to another.\n\nThis model represents the fields you can specify when creating a Journal\n\nFixture Rules\n\n- No Fixtures\n  - anything below limit is executed immediately\n  - anything above limit is pending until executed at EOD,\n- With Fixtures\n  - any status = rejected will be rejected EOD\n  - any status = pending will be pending forever",
        "type": "object",
        "x-examples": {
          "example-1": {
            "from_account": "c94bu7rn-4483-4199-840f-6c5fe0b7ca24",
            "entry_type": "JNLC",
            "to_account": "fn68sbrk-6f2a-433c-8c33-17b66b8941fa",
            "amount": "51",
            "description": "test text /fixtures/status=rejected/fixtures/"
          }
        },
        "x-stoplight": {
          "id": "u380o5uqf31kl"
        },
        "properties": {
          "to_account": {
            "type": "string",
            "minLength": 1,
            "format": "uuid",
            "description": "The account_id you wish to journal to"
          },
          "from_account": {
            "type": "string",
            "minLength": 1,
            "format": "uuid",
            "description": "The account_id you wish to journal from"
          },
          "entry_type": {
            "type": "string",
            "title": "",
            "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
            "enum": [
              "JNLC",
              "JNLS"
            ],
            "x-stoplight": {
              "id": "itme4epinxsnk"
            }
          },
          "amount": {
            "type": "string",
            "description": "Required if `entry_type` = `JNLC`"
          },
          "symbol": {
            "type": "string",
            "description": "Required if `entry_type` = `JNLS`"
          },
          "qty": {
            "type": "string",
            "description": "Required if `entry_type` = `JNLS`"
          },
          "description": {
            "type": "string",
            "description": "Max 1024 characters. Can include fixtures for amounts that are above the transaction limit",
            "maxLength": 1024
          },
          "transmitter_name": {
            "type": "string",
            "maxLength": 255,
            "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
          },
          "transmitter_account_number": {
            "type": "string",
            "maxLength": 255,
            "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
          },
          "transmitter_address": {
            "type": "string",
            "maxLength": 255,
            "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
          },
          "transmitter_financial_institution": {
            "type": "string",
            "maxLength": 255,
            "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
          },
          "transmitter_timestamp": {
            "type": "string",
            "description": "RFC 3339 format. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "x-stoplight": {
              "id": "9ilfs11vxvcbi"
            }
          }
        },
        "required": [
          "to_account",
          "from_account",
          "entry_type"
        ]
      },
      "BatchJournalRequest": {
        "title": "BatchJournalRequest",
        "type": "object",
        "description": "Journals API allows you to move cash or securities from one account to another.\n\nThis model represents the fields you can specify when creating a request of many Journals out of one account to many others at once.",
        "properties": {
          "entry_type": {
            "type": "string",
            "enum": [
              "JNLC"
            ],
            "description": "Only supports `JNLC` for now"
          },
          "from_account": {
            "type": "string",
            "format": "uuid",
            "description": "The account id that is the originator of the funds being moved. Most likely is your Sweep Firm Account"
          },
          "description": {
            "type": "string",
            "description": "Journal description, gets returned in the response"
          },
          "entries": {
            "type": "array",
            "minItems": 1,
            "description": "An array of objects describing to what accounts you want to move funds into and how much to move into for each account",
            "items": {
              "type": "object",
              "properties": {
                "to_account": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID of the account that you want to journal funds into"
                },
                "amount": {
                  "type": "string",
                  "description": "Journal amount in USD"
                }
              },
              "required": [
                "to_account",
                "amount"
              ]
            }
          }
        },
        "required": [
          "entry_type",
          "from_account",
          "entries"
        ],
        "x-stoplight": {
          "id": "cqujg5wj52fpz"
        }
      },
      "BatchJournalResponse": {
        "title": "BatchJournalResponse",
        "description": "A Journal object with an extra attribute error_message in the case when a specific account fails to receive a journal.",
        "allOf": [
          {
            "title": "Journal",
            "example": {
              "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
              "entry_type": "JNLS",
              "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
              "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
              "status": "executed",
              "symbol": "AAPL",
              "qty": "2",
              "price": "128.23"
            },
            "x-examples": {
              "example": {
                "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                "entry_type": "JNLS",
                "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                "status": "executed",
                "symbol": "AAPL",
                "qty": "2",
                "settle_date": "2020-12-24",
                "price": "128.23"
              },
              "example-pending": {
                "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                "entry_type": "JNLC",
                "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                "symbol": null,
                "qty": null,
                "price": "0",
                "status": "pending",
                "settle_date": "2022-02-17",
                "system_date": "2022-02-17",
                "net_amount": "645",
                "description": ""
              },
              "example-queued": {
                "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                "entry_type": "JNLC",
                "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                "symbol": "",
                "qty": null,
                "price": "0",
                "status": "queued",
                "settle_date": null,
                "system_date": null,
                "net_amount": "645",
                "description": ""
              }
            },
            "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "journal ID"
                  },
                  "entry_type": {
                    "type": "string",
                    "title": "",
                    "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                    "enum": [
                      "JNLC",
                      "JNLS"
                    ],
                    "x-stoplight": {
                      "id": "itme4epinxsnk"
                    }
                  },
                  "from_account": {
                    "type": "string",
                    "format": "uuid",
                    "description": "account ID the shares go from"
                  },
                  "to_account": {
                    "type": "string",
                    "format": "uuid",
                    "description": "account ID the shares go to"
                  },
                  "settle_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "canceled",
                      "executed",
                      "queued",
                      "rejected",
                      "deleted"
                    ],
                    "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                    "x-stoplight": {
                      "id": "ay4nu4z1j11cu"
                    }
                  }
                },
                "required": [
                  "id",
                  "entry_type",
                  "from_account",
                  "to_account",
                  "settle_date"
                ]
              },
              {
                "oneOf": [
                  {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                        "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                        "entry_type": "JNLS",
                        "symbol": "AAPL",
                        "qty": "0.5",
                        "price": "128.23",
                        "status": "executed",
                        "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                        "settle_date": "2020-12-24",
                        "system_date": "2020-12-24",
                        "description": "this is a test journal"
                      }
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The journal ID"
                      },
                      "to_account": {
                        "type": "string",
                        "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                      },
                      "entry_type": {
                        "type": "string",
                        "description": "JNLS"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the security journaled"
                      },
                      "qty": {
                        "type": "string",
                        "description": "The quantity of the securities journaled"
                      },
                      "price": {
                        "type": "string",
                        "description": "The price of the security journaled"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "canceled",
                          "executed",
                          "queued",
                          "rejected",
                          "deleted"
                        ],
                        "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                        "x-stoplight": {
                          "id": "ay4nu4z1j11cu"
                        }
                      },
                      "from_account": {
                        "type": "string",
                        "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                      },
                      "settle_date": {
                        "type": "string",
                        "description": "Date string in “%Y-%m-%d” format"
                      },
                      "system_date": {
                        "type": "string",
                        "description": "Date string in “%Y-%m-%d” format"
                      },
                      "description": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "29s5ect4watc4"
                        },
                        "description": "Currency denomination of the journal. USD by default."
                      }
                    }
                  },
                  {
                    "example": {
                      "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                      "entry_type": "JNLC",
                      "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                      "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                      "status": "pending",
                      "net_amount": "115.5"
                    },
                    "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                    "type": "object",
                    "title": "JNLC",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                      },
                      "net_amount": {
                        "type": "string",
                        "format": "decimal",
                        "description": "Only valid for JNLC journals. Null for JNLS."
                      },
                      "transmitter_name": {
                        "type": "string",
                        "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                      },
                      "transmitter_account_number": {
                        "type": "string",
                        "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                      },
                      "transmitter_address": {
                        "type": "string",
                        "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                      },
                      "transmitter_financial_institution": {
                        "type": "string",
                        "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                      },
                      "transmitter_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only valid for JNLC journals. Null for JNLS."
                      }
                    },
                    "required": [
                      "net_amount"
                    ],
                    "x-examples": {},
                    "x-stoplight": {
                      "id": "qo2ttptb2frpx"
                    }
                  }
                ]
              }
            ],
            "x-stoplight": {
              "id": "2isltcm8hzb23"
            }
          },
          {
            "type": "object",
            "properties": {
              "error_message": {
                "type": "string",
                "description": "Description of why this journal transaction failed"
              }
            },
            "required": [
              "error_message"
            ]
          }
        ],
        "x-examples": {
          "example-1": {
            "error_message": "",
            "id": "56f106e5-25a4-4eee-96fa-25bb05dc86bc",
            "entry_type": "JNLC",
            "from_account": "8f8c8cee-2591-4f83-be12-82c659b5e748",
            "to_account": "399f85f1-cbbd-4eaa-a934-70027fb5c1de",
            "symbol": "",
            "qty": null,
            "price": null,
            "status": "pending",
            "settle_date": null,
            "system_date": null,
            "net_amount": "1000",
            "description": ""
          }
        },
        "x-stoplight": {
          "id": "ls0561ikjlnez"
        }
      },
      "Asset": {
        "title": "Asset",
        "type": "object",
        "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
        "x-stoplight": {
          "id": "2bnou9t588bau"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "904837e3-3b76-47ec-b432-046db621571b",
            "format": "uuid",
            "description": "Asset ID"
          },
          "class": {
            "type": "string",
            "enum": [
              "us_equity",
              "crypto"
            ],
            "x-stoplight": {
              "id": "0stvwzkbv2e0u"
            }
          },
          "exchange": {
            "type": "string",
            "title": "Exchange",
            "example": "NASDAQ",
            "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
            "enum": [
              "AMEX",
              "ARCA",
              "BATS",
              "NYSE",
              "NASDAQ",
              "NYSEARCA",
              "OTC",
              "ERSX",
              "FTXU"
            ],
            "x-stoplight": {
              "id": "og9z1j3oimssn"
            }
          },
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "The symbol of the asset"
          },
          "name": {
            "type": "string",
            "example": "Apple Inc. Common Stock",
            "description": "The official name of the asset"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "description": "active or inactive",
            "example": "active"
          },
          "tradable": {
            "type": "boolean",
            "example": true,
            "description": "Asset is tradable on Alpaca or not"
          },
          "marginable": {
            "type": "boolean",
            "example": true,
            "description": "Asset is marginable or not"
          },
          "shortable": {
            "type": "boolean",
            "example": true,
            "description": "Asset is shortable or not"
          },
          "easy_to_borrow": {
            "type": "boolean",
            "example": true,
            "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
          },
          "fractionable": {
            "type": "boolean",
            "example": true,
            "description": "Asset is fractionable or not"
          },
          "last_close_pct_change": {
            "type": "string",
            "format": "decimal",
            "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
          },
          "last_price": {
            "type": "string",
            "format": "decimal",
            "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
          },
          "last_close": {
            "type": "string",
            "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
            "format": "decimal"
          },
          "min_order_size": {
            "type": "string",
            "x-stoplight": {
              "id": "8oxfe2lh08pa5"
            },
            "description": "Minimum order size.  Field available for crypto only."
          },
          "min_trade_increment": {
            "type": "string",
            "x-stoplight": {
              "id": "9x4innaekt0bo"
            },
            "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
          },
          "price_increment": {
            "type": "string",
            "x-stoplight": {
              "id": "y3hwtbjswugep"
            },
            "description": "Amount the price can be incremented by. Field available for crypto only."
          },
          "maintenance_margin_requirement": {
            "type": "number",
            "x-stoplight": {
              "id": "w0vp53j3weqge"
            },
            "description": "Shows the % margin requirement for the asset (equities only)."
          },
          "attributes": {
            "type": "array",
            "x-stoplight": {
              "id": "o1v8vair7lg7a"
            },
            "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
            "items": {
              "x-stoplight": {
                "id": "8q7bxjwl5evxu"
              },
              "type": "string",
              "enum": [
                "ptp_no_exception",
                "ptp_with_exception",
                "ipo"
              ]
            },
            "example": [
              "ptp_no_exception",
              "ipo"
            ]
          }
        },
        "required": [
          "id",
          "class",
          "symbol"
        ]
      },
      "Exchange": {
        "type": "string",
        "title": "Exchange",
        "example": "NASDAQ",
        "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
        "enum": [
          "AMEX",
          "ARCA",
          "BATS",
          "NYSE",
          "NASDAQ",
          "NYSEARCA",
          "OTC",
          "ERSX",
          "FTXU"
        ],
        "x-stoplight": {
          "id": "og9z1j3oimssn"
        }
      },
      "Position": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "asset_id": "93f58d0b-6c53-432d-b8ce-2bad264dbd94",
            "symbol": "AAPL",
            "exchange": "NASDAQ",
            "asset_class": "us_equity",
            "asset_marginable": false,
            "qty": "4",
            "avg_entry_price": "172.08",
            "side": "long",
            "market_value": "688.32",
            "cost_basis": "688.32",
            "unrealized_pl": "0",
            "unrealized_plpc": "0",
            "unrealized_intraday_pl": "0",
            "unrealized_intraday_plpc": "0",
            "current_price": "172.08",
            "lastday_price": "168.88",
            "change_today": "0.0189483657034581"
          }
        },
        "x-stoplight": {
          "id": "b2tmookzpqlzr"
        },
        "properties": {
          "asset_id": {
            "type": "string",
            "example": "904837e3-3b76-47ec-b432-046db621571b",
            "format": "uuid",
            "description": "Asset ID"
          },
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "Asset symbol"
          },
          "exchange": {
            "type": "string",
            "example": "NASDAQ",
            "description": "Exchange name of the asset"
          },
          "asset_class": {
            "type": "string",
            "enum": [
              "us_equity",
              "crypto"
            ],
            "x-stoplight": {
              "id": "0stvwzkbv2e0u"
            }
          },
          "asset_marginable": {
            "type": "boolean",
            "description": "Indicates if this asset is marginable"
          },
          "avg_entry_price": {
            "type": "string",
            "example": "100.0",
            "description": "Average entry price of the position"
          },
          "qty": {
            "type": "string",
            "example": "5",
            "description": "The number of shares"
          },
          "side": {
            "type": "string",
            "example": "long",
            "enum": [
              "long",
              "short"
            ]
          },
          "market_value": {
            "type": "string",
            "format": "decimal",
            "example": "600.0",
            "description": "Total market value of the position"
          },
          "cost_basis": {
            "type": "string",
            "format": "decimal",
            "example": "500.0",
            "description": "Total cost basis"
          },
          "unrealized_pl": {
            "type": "string",
            "format": "decimal",
            "example": "100.0",
            "description": "Unrealized profit/loss"
          },
          "unrealized_plpc": {
            "type": "string",
            "format": "decimal",
            "example": "0.20",
            "description": "Unrealized profit/loss percent (by a factor of 1)"
          },
          "unrealized_intraday_pl": {
            "type": "string",
            "format": "decimal",
            "example": "10.0",
            "description": "Unrealized profit/loss for the day"
          },
          "unrealized_intraday_plpc": {
            "type": "string",
            "format": "decimal",
            "example": "0.0084",
            "description": "Unrealized interday profit/loss percent (by a factor of 1)"
          },
          "current_price": {
            "type": "string",
            "format": "decimal",
            "example": "120.0",
            "description": "Current asset price per share"
          },
          "lastday_price": {
            "type": "string",
            "format": "decimal",
            "example": "119.0",
            "description": "Last day’s asset price per share based on the closing value of the last trading day"
          },
          "change_today": {
            "type": "string",
            "format": "decimal",
            "example": "0.0084",
            "description": "Percent change from last day price (by a factor of 1)"
          },
          "swap_rate": {
            "type": "string",
            "format": "decimal",
            "description": "The latest swap rate. This is only returned for LCT accounts.",
            "example": "1.50",
            "x-stoplight": {
              "id": "t02dt3rtisrkx"
            }
          },
          "avg_entry_swap_rate": {
            "type": "string",
            "format": "decimal",
            "description": "The average swap rate of the position. This is only returned for LCT accounts.",
            "example": "1.40",
            "x-stoplight": {
              "id": "a0kh9eu3byvfp"
            }
          },
          "usd": {
            "title": "USDPosition",
            "description": "Position values in USD. This is returned for LCT (non-USD) accounts only.",
            "type": "object",
            "properties": {
              "avg_entry_price": {
                "type": "string",
                "format": "decimal",
                "description": "Average entry price of the position in USD",
                "example": "71.43"
              },
              "market_value": {
                "type": "string",
                "format": "decimal",
                "description": "Total market value of the position in USD",
                "example": "400.00"
              },
              "cost_basis": {
                "type": "string",
                "format": "decimal",
                "description": "Total cost basis in USD",
                "example": "333.33"
              },
              "unrealized_pl": {
                "type": "string",
                "format": "decimal",
                "description": "Unrealized profit/loss in USD",
                "example": "66.67"
              },
              "unrealized_plpc": {
                "type": "string",
                "format": "decimal",
                "description": "Unrealized profit/loss percent (by a factor of 1)",
                "example": "0.2"
              },
              "unrealized_intraday_pl": {
                "type": "string",
                "format": "decimal",
                "description": "Unrealized profit/loss in USD for the day",
                "example": "6.67"
              },
              "unrealized_intraday_plpc": {
                "type": "string",
                "format": "decimal",
                "description": "Unrealized interday profit/loss percent (by a factor of 1)",
                "example": "0.0084"
              },
              "current_price": {
                "type": "string",
                "format": "decimal",
                "description": "Current asset price per share in USD",
                "example": "80.0"
              },
              "lastday_price": {
                "type": "string",
                "format": "decimal",
                "description": "Last day’s asset price per share based on the closing value of the last trading day in USD",
                "example": "79.33"
              },
              "change_today": {
                "type": "string",
                "format": "decimal",
                "description": "Percent change from last day price (by a factor of 1)",
                "example": "0.67"
              }
            }
          }
        },
        "required": [
          "asset_id",
          "symbol",
          "exchange",
          "asset_class",
          "avg_entry_price",
          "qty",
          "side",
          "market_value",
          "cost_basis",
          "unrealized_pl",
          "unrealized_plpc",
          "unrealized_intraday_pl",
          "unrealized_intraday_plpc",
          "current_price",
          "lastday_price",
          "change_today"
        ]
      },
      "OrderClosedResponse": {
        "title": "OrderClosedResponse",
        "type": "object",
        "description": "Represents the result of asking the api to cancel an Order.\n",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID of the order that was canceled",
            "format": "uuid"
          },
          "status": {
            "type": "integer",
            "description": "Http status code for the attempt to close this Order"
          },
          "body": {
            "$ref": "#/components/schemas/Order"
          }
        },
        "required": [
          "id",
          "status"
        ],
        "x-stoplight": {
          "id": "gm6lf1ox4q0j2"
        }
      },
      "PositionClosedResponse": {
        "title": "PositionClosedResponse",
        "type": "object",
        "description": "Represents the result of asking the api to close a position.\n\n`body` is the Order used to close out the position.",
        "x-examples": {
          "example-1": {
            "symbol": "AAPL",
            "status": 200,
            "body": {
              "id": "f7f25e89-939a-4587-aaf6-414a6b3c341d",
              "client_order_id": "52f8574c-96d5-49b6-94c1-2570a268434e",
              "created_at": "2022-02-04T16:53:29.53427917Z",
              "updated_at": "2022-02-04T16:53:29.53427917Z",
              "submitted_at": "2022-02-04T16:53:29.533738219Z",
              "filled_at": null,
              "expired_at": null,
              "canceled_at": null,
              "failed_at": null,
              "replaced_at": null,
              "replaced_by": null,
              "replaces": null,
              "asset_id": "b0b6dd9d-8b9b-48a9-ba46-b9d54906e415",
              "symbol": "AAPL",
              "asset_class": "us_equity",
              "notional": null,
              "qty": "2",
              "filled_qty": "0",
              "filled_avg_price": null,
              "order_class": "",
              "order_type": "market",
              "type": "market",
              "side": "sell",
              "time_in_force": "day",
              "limit_price": null,
              "stop_price": null,
              "status": "accepted",
              "extended_hours": false,
              "legs": null,
              "trail_percent": null,
              "trail_price": null,
              "hwm": null,
              "commision": "1.0"
            }
          }
        },
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Symbol name of the asset"
          },
          "status": {
            "type": "integer",
            "description": "Http status code for the attempt to close this position"
          },
          "body": {
            "$ref": "#/components/schemas/Order"
          }
        },
        "required": [
          "symbol",
          "status"
        ],
        "x-stoplight": {
          "id": "86zc8o19d0xih"
        }
      },
      "PortfolioHistory": {
        "title": "PortfolioHistory",
        "description": "Timeseries data for equity and profit loss information of the account.",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "array",
            "description": "Time of each data element, left-labeled (the beginning of time window).\n\nThe values returned are in [UNIX epoch format](https://en.wikipedia.org/wiki/Unix_time).\n",
            "items": {
              "type": "integer"
            }
          },
          "equity": {
            "type": "array",
            "description": "equity value of the account in dollar amount as of the end of each time window",
            "items": {
              "type": "number"
            }
          },
          "profit_loss": {
            "type": "array",
            "description": "profit/loss in dollar from the base value",
            "items": {
              "type": "number"
            }
          },
          "profit_loss_pct": {
            "type": "array",
            "description": "profit/loss in percentage from the base value",
            "items": {
              "type": "number"
            },
            "example": [
              0.001,
              0.002
            ]
          },
          "base_value": {
            "type": "number",
            "description": "basis in dollar of the profit loss calculation"
          },
          "base_value_asof": {
            "type": "string",
            "format": "date",
            "example": "2023-10-20",
            "description": "If included, then it indicates that the base_value is the account's closing \nequity value at this trading date.\n\nIf not specified, then the baseline calculation is done against the earliest returned data item. This could happen for\naccounts without prior closing balances (e.g. new account) or for queries with 1D timeframes, where the first data point\nis used as a reference point.\n"
          },
          "timeframe": {
            "type": "string",
            "description": "time window size of each data element",
            "example": "15Min"
          }
        },
        "required": [
          "timestamp",
          "equity",
          "profit_loss",
          "profit_loss_pct",
          "base_value",
          "timeframe"
        ],
        "x-examples": {
          "example-intraday-query-15min-1d": {
            "timestamp": [
              1697722200,
              1697723100,
              1697724000,
              1697724900,
              1697725800,
              1697726700,
              1697727600,
              1697728500,
              1697729400,
              1697730300,
              1697731200,
              1697732100,
              1697733000,
              1697733900,
              1697734800,
              1697735700,
              1697736600,
              1697737500,
              1697738400,
              1697739300,
              1697740200,
              1697741100,
              1697742000,
              1697742900,
              1697743800,
              1697744700,
              1697745600
            ],
            "equity": [
              2773.79,
              2769.04,
              2768.65,
              2765.11,
              2763.03,
              2763.17,
              2763.17,
              2763.47,
              2763.91,
              2768.13,
              2774.98,
              2757.94,
              2757.65,
              2774.54,
              2775.58,
              2775.28,
              2767.9,
              2762.26,
              2762.56,
              2756.99,
              2756.84,
              2752.43,
              2752.13,
              2748.44,
              2751.23,
              2747.54,
              2748.74
            ],
            "profit_loss": [
              -0.37,
              -5.12,
              -5.51,
              -9.05,
              -11.13,
              -10.99,
              -10.99,
              -10.69,
              -10.25,
              -6.03,
              0.82,
              -16.22,
              -16.51,
              0.38,
              1.42,
              1.12,
              -6.26,
              -11.9,
              -11.6,
              -17.17,
              -17.32,
              -21.73,
              -22.03,
              -25.72,
              -22.93,
              -26.62,
              -25.42
            ],
            "profit_loss_pct": [
              -0.0001,
              -0.0018,
              -0.002,
              -0.0033,
              -0.004,
              -0.004,
              -0.004,
              -0.0039,
              -0.0037,
              -0.0022,
              0.0003,
              -0.0058,
              -0.006,
              0.0001,
              0.0005,
              0.0004,
              -0.0023,
              -0.0043,
              -0.0042,
              -0.0062,
              -0.0062,
              -0.0078,
              -0.0079,
              -0.0093,
              -0.0083,
              -0.0096,
              -0.0092
            ],
            "base_value": 2774.16,
            "base_value_asof": "2023-10-18",
            "timeframe": "15Min"
          },
          "example-query-1d-7d": {
            "timestamp": [
              1697241600,
              1697500800,
              1697587200,
              1697673600,
              1697760000
            ],
            "equity": [
              2784.79,
              2794.79,
              2805.46,
              2774.16,
              2748.73
            ],
            "profit_loss": [
              0,
              10.0022,
              10.6692,
              -31.2996,
              -25.4232
            ],
            "profit_loss_pct": [
              0,
              0.0035,
              0.0074,
              -0.0038,
              -0.0129
            ],
            "base_value": 2784.79,
            "timeframe": "1D"
          }
        },
        "x-stoplight": {
          "id": "kjmp5ewl4g6k3"
        }
      },
      "Calendar": {
        "title": "Calendar",
        "type": "object",
        "description": "The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.",
        "x-stoplight": {
          "id": "6w3glz9nvzann"
        },
        "properties": {
          "date": {
            "type": "string",
            "example": "2021-04-06",
            "format": "date",
            "description": "Date string in YYYY-MM-DD format"
          },
          "open": {
            "type": "string",
            "example": "09:30",
            "description": "The time the market opens at on this date in HH:MM format"
          },
          "close": {
            "type": "string",
            "example": "16:00",
            "description": "The time the market closes at on this date in HH:MM format"
          },
          "session_open": {
            "type": "string",
            "example": "0700",
            "deprecated": true,
            "description": "this field has been deprecated please ignore"
          },
          "session_close": {
            "type": "string",
            "example": "1900",
            "deprecated": true,
            "description": "this field has been deprecated please ignore"
          },
          "settlement_date": {
            "type": "string",
            "x-stoplight": {
              "id": "6lmmqwon4mjk0"
            },
            "description": "Date string in “%Y-%m-%d” format. representing the settlement date for the trade date"
          }
        },
        "required": [
          "date",
          "open",
          "close"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-stoplight": {
          "id": "xu9mkrgjdtotd"
        }
      },
      "Clock": {
        "description": "Represents the current market time and open/close events.",
        "type": "object",
        "x-examples": {
          "example": {
            "timestamp": "2018-04-01T12:00:00.000Z",
            "is_open": true,
            "next_open": "2018-04-01T12:00:00.000Z",
            "next_close": "2018-04-01T12:00:00.000Z"
          },
          "example-1": {
            "timestamp": "2022-02-16T13:06:05.210563128-05:00",
            "is_open": true,
            "next_open": "2022-02-17T09:30:00-05:00",
            "next_close": "2022-02-16T16:00:00-05:00"
          }
        },
        "title": "Clock",
        "x-stoplight": {
          "id": "rfhpxij3x0o6m"
        },
        "properties": {
          "timestamp": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "Current timestamp",
            "example": "2022-02-16T13:06:05.210563128-05:00"
          },
          "is_open": {
            "type": "boolean",
            "description": "Whether the market is open or not"
          },
          "next_open": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "Next market open timestamp - inclusive of timestamp"
          },
          "next_close": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "description": "Next market close timestamp - inclusive of timestamp"
          }
        },
        "required": [
          "timestamp",
          "is_open",
          "next_open",
          "next_close"
        ]
      },
      "CountryInfos": {
        "description": "Represents the info for countries as a map where the keys are the ISO 3166 country codes.",
        "type": "object",
        "additionalProperties": {
          "description": "Represents the info for a country.",
          "type": "object",
          "x-examples": {
            "example": "\"ZAF\": {\n    \"full_name\": \"South Africa\",\n    \"crypto_risk_rating\": \"high\",\n    \"securities_risk_rating\": \"high\"\n}\n",
            "example-1": "\"USA\": {\n  \"full_name\": \"United States of America\",\n  \"crypto_risk_rating\": \"medium\",\n  \"securities_risk_rating\": \"medium\",\n  \"crypto_supported_states\": [\n      \"CA\",\n      \"CT\",\n      \"GA\",\n      \"IA\",\n      \"ID\",\n      \"IL\",\n      \"IN\",\n      \"KS\",\n      \"KY\",\n      \"MA\",\n      \"MD\",\n      \"ME\",\n      \"MI\",\n      \"MS\",\n      \"MO\",\n      \"MT\",\n      \"NC\",\n      \"ND\",\n      \"NE\",\n      \"OH\",\n      \"RI\",\n      \"SD\",\n      \"UT\",\n      \"VT\",\n      \"WA\"\n  ]\n}\n"
          },
          "title": "CountryInfo",
          "x-stoplight": {
            "id": "k7nxrton4myk1"
          },
          "properties": {
            "full_name": {
              "type": "string",
              "minLength": 1,
              "description": "The full name of the country definded by ISO 3166-1",
              "example": "Åland Islands"
            },
            "crypto_risk_rating": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "prohibited"
              ],
              "description": "crypto risk rating of the country"
            },
            "securities_risk_rating": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "prohibited"
              ],
              "description": "the securities risk rating of the country"
            },
            "crypto_supported_states": {
              "type": "array",
              "description": "states where Alpaca supports crypto trading",
              "items": {
                "type": "string",
                "description": "the state code defined by ISO 3166-2"
              }
            }
          },
          "required": [
            "full_name",
            "securities_risk_rating",
            "crypto_risk_rating"
          ]
        },
        "title": "CountryInfos",
        "x-stoplight": {
          "id": "5lnmrwon3mjk0"
        }
      },
      "CountryInfo": {
        "description": "Represents the info for a country.",
        "type": "object",
        "x-examples": {
          "example": "\"ZAF\": {\n    \"full_name\": \"South Africa\",\n    \"crypto_risk_rating\": \"high\",\n    \"securities_risk_rating\": \"high\"\n}\n",
          "example-1": "\"USA\": {\n  \"full_name\": \"United States of America\",\n  \"crypto_risk_rating\": \"medium\",\n  \"securities_risk_rating\": \"medium\",\n  \"crypto_supported_states\": [\n      \"CA\",\n      \"CT\",\n      \"GA\",\n      \"IA\",\n      \"ID\",\n      \"IL\",\n      \"IN\",\n      \"KS\",\n      \"KY\",\n      \"MA\",\n      \"MD\",\n      \"ME\",\n      \"MI\",\n      \"MS\",\n      \"MO\",\n      \"MT\",\n      \"NC\",\n      \"ND\",\n      \"NE\",\n      \"OH\",\n      \"RI\",\n      \"SD\",\n      \"UT\",\n      \"VT\",\n      \"WA\"\n  ]\n}\n"
        },
        "title": "CountryInfo",
        "x-stoplight": {
          "id": "k7nxrton4myk1"
        },
        "properties": {
          "full_name": {
            "type": "string",
            "minLength": 1,
            "description": "The full name of the country definded by ISO 3166-1",
            "example": "Åland Islands"
          },
          "crypto_risk_rating": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "prohibited"
            ],
            "description": "crypto risk rating of the country"
          },
          "securities_risk_rating": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "prohibited"
            ],
            "description": "the securities risk rating of the country"
          },
          "crypto_supported_states": {
            "type": "array",
            "description": "states where Alpaca supports crypto trading",
            "items": {
              "type": "string",
              "description": "the state code defined by ISO 3166-2"
            }
          }
        },
        "required": [
          "full_name",
          "securities_risk_rating",
          "crypto_risk_rating"
        ]
      },
      "Document": {
        "type": "array",
        "minItems": 1,
        "uniqueItems": true,
        "x-examples": {
          "example": [
            {
              "document_id": "b792e8ae-2cb4-4209-85b9-32be4c2fcdd6",
              "document_type": "account_statement",
              "document_date": "2019-08-24"
            }
          ]
        },
        "x-stoplight": {
          "id": "qlhjbktu0o14c"
        },
        "items": {
          "type": "object",
          "properties": {
            "document_id": {
              "type": "string",
              "minLength": 1,
              "format": "uuid",
              "description": "ID of the Document"
            },
            "document_type": {
              "type": "string",
              "enum": [
                "identity_verification",
                "address_verification",
                "date_of_birth_verification",
                "tax_id_verification",
                "account_approval_letter",
                "cip_result",
                "w8ben",
                "w9",
                "limited_trading_authorization"
              ],
              "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
              "example": "identity_verification",
              "x-stoplight": {
                "id": "8u8j8gn6uuzk8"
              }
            },
            "created_at": {
              "type": "string",
              "x-stoplight": {
                "id": "2dxllw6r8po62"
              },
              "format": "date-time"
            },
            "mime_type": {
              "type": "string",
              "x-stoplight": {
                "id": "38y7l8mk02mtt"
              },
              "description": "The format of content encoded by the string"
            },
            "content": {
              "type": "string",
              "x-stoplight": {
                "id": "o696aus9wb91b"
              },
              "description": "Base64 string representing the document"
            },
            "document_sub_type": {
              "type": "string",
              "x-stoplight": {
                "id": "xzxw5qb7hnt3r"
              },
              "description": "The specific type of document, e.g. passport"
            }
          },
          "required": [
            "document_id",
            "document_type"
          ]
        }
      },
      "AccountStatusEvent": {
        "description": "Represents a change in an Account's status, sent over the events streaming api.\n\nFor partners who utilize Alpaca’s KYC service for opening brokerage accounts an additional `kyc_results` object is represented in the account status update events.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "account_id": "4db36989-6565-4011-9126-39fe6b3d9bf6",
            "account_number": "",
            "at": "2021-06-14T09:59:15.232782Z",
            "event_id": 122039,
            "event_ulid": "01F84ZC0H0Q1QN7XPNWX44HF5J",
            "kyc_results": null,
            "status_from": "",
            "status_to": "APPROVED"
          }
        },
        "title": "AccountStatusEvent",
        "x-stoplight": {
          "id": "u28ukdg1k63c1"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "minLength": 1
          },
          "account_number": {
            "type": "string",
            "minLength": 1
          },
          "status_from": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "status_to": {
            "type": "string",
            "example": "ACTIVE",
            "enum": [
              "INACTIVE",
              "ONBOARDING",
              "SUBMITTED",
              "SUBMISSION_FAILED",
              "ACTION_REQUIRED",
              "ACCOUNT_UPDATED",
              "APPROVAL_PENDING",
              "APPROVED",
              "REJECTED",
              "ACTIVE",
              "ACCOUNT_CLOSED"
            ],
            "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
            "x-stoplight": {
              "id": "zxsbg55ojatc8"
            }
          },
          "reason": {
            "type": "string",
            "minLength": 1,
            "description": "Optional"
          },
          "at": {
            "type": "string",
            "minLength": 1,
            "description": "Timestamp of event"
          },
          "kyc_result": {
            "type": "object",
            "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
            "x-stoplight": {
              "id": "m6so9tt7secvm"
            },
            "properties": {
              "reject": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "accept": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "indeterminate": {
                "title": "KYCResultType",
                "x-stoplight": {
                  "id": "mkpd1y7i0tihh"
                },
                "type": "string",
                "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
              },
              "addidional_information": {
                "type": "string",
                "description": "Used to display a custom message."
              },
              "summary": {
                "type": "string",
                "x-stoplight": {
                  "id": "dfz7vejxhvxyk"
                },
                "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
              }
            }
          },
          "event_id": {
            "type": "integer",
            "description": "monotonically increasing 64bit integer"
          },
          "event_ulid": {
            "type": "string",
            "format": "ulid",
            "description": "lexically sortable, monotonically increasing character array"
          },
          "crypto_status_from": {
            "type": "string",
            "x-stoplight": {
              "id": "7fgoyvh2ttwzz"
            },
            "description": "Account crypto_status changed from"
          },
          "crypto_status_to": {
            "type": "string",
            "x-stoplight": {
              "id": "g15q2jn26klem"
            },
            "description": "Account crypto_status changed to"
          },
          "admin_configurations": {
            "title": "AdminConfigurations",
            "x-stoplight": {
              "id": "qsosbl2ojvpy5"
            },
            "type": "object",
            "description": "These configurations show account properties that are overriden either by Alpaca Broker Operations or an automated process.\n\nThese values cannot be modified by the Broker Partners.\n\n\nFor the **events** interface we are only broadcasting changes to admin configurations. In case nothing changed for a flag that will not be included in unrelated update events.\n\nDepending on the type of the Admin Configurations the sent event will behave differently. For bool flags we are only sending the new value.\n\nFor example the following payload means, that the disable_shorting flag was set to true from false:\n\n```\n{\n  \"disable_shorting\": false\n}\n```\n\nFor other data types, we are embeding the old and new values into the payload. For example changing the max_margin_multiplier from 4 to 1 will yield this payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": 4,\n    \"new\": 1,\n  }\n}\n```\n\nIntroducing an override value from the default will yield a null value as old. For example restricting the max_margin_multipler to 1 from default will yield the following payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": null,\n    \"new\": 1,\n  }\n}\n```",
            "properties": {
              "restrict_to_liquidation_reasons": {
                "title": "RestrictToLiquidationReasons",
                "x-stoplight": {
                  "id": "8ve05o357xumy"
                },
                "type": "object",
                "description": "Reasons why the liquidation only flag was set",
                "properties": {
                  "pattern_day_trading": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "jie5waxje186p"
                    },
                    "description": "Set when the trading account is marked as a PDT, but its equity falls below the $25k treshold"
                  },
                  "ach_return": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "rdalpird93yqd"
                    },
                    "description": "Set when an incoming ACH transfer gets rejected"
                  },
                  "position_to_equity_ratio": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "w38ngiibz57ih"
                    },
                    "description": "Set when the position to equity ration exceeds the maximum limit"
                  },
                  "unspecified": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "8t9456c8yt2u8"
                    },
                    "description": "Default value for unknown reason"
                  }
                }
              },
              "outgoing_transfers_blocked": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "6asgwwc5og5vt"
                },
                "description": "Wire-out transfers blocked for the account if false"
              },
              "incoming_transfers_blocked": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "9h6kxbeu7892i"
                },
                "description": "Deposits are blocked for the account if false"
              },
              "disable_shorting": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "xpj079uvkjlln"
                },
                "description": "If true the account is not allowed to create short position orders"
              },
              "disable_fractional": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "67vm959kuferk"
                },
                "description": "If true, the account cannot create orders for fractional share positions"
              },
              "disable_crypto": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "h027r16ybjq26"
                },
                "description": "If true, the account is not allowed to trade cryptos"
              },
              "disable_day_trading": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "ypcv5e39wabjv"
                },
                "description": "If true, the account is not allowed to day trade (e.g. buy and sell the same security on the same day)"
              },
              "max_margin_multiplier": {
                "type": "integer",
                "x-stoplight": {
                  "id": "z5ufwctnvy3fy"
                },
                "description": "Max margin multipler is set by admin to this value"
              },
              "acct_daily_transfer_limit": {
                "type": "string",
                "x-stoplight": {
                  "id": "7m2ved3asodk3"
                },
                "description": "Override the correspondent level daily transfer limits",
                "format": "decimal"
              }
            }
          },
          "pattern_day_trader": {
            "type": "boolean",
            "x-stoplight": {
              "id": "05mrhvc4aaeyy"
            },
            "description": "If true the pattern_day_trader flag was set for the account, if false, the flag was reset."
          },
          "account_blocked": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ubzoqqxv9p34z"
            },
            "description": "If true the account was blocked, if false, the account got unblocked"
          },
          "trading_blocked": {
            "type": "boolean",
            "x-stoplight": {
              "id": "tb42kskazg9zr"
            },
            "description": "If true the account cannot trade going forward, if false, the ban has been lifed"
          }
        },
        "required": [
          "account_id",
          "account_number",
          "status_from",
          "status_to",
          "reason",
          "at",
          "event_id",
          "event_ulid"
        ]
      },
      "JournalStatusEvent": {
        "description": "Represents a change in a Journal's status, sent over the events streaming api.\n",
        "type": "object",
        "x-examples": {
          "example-1": {
            "at": "2021-05-07T10:28:23.163857Z",
            "entry_type": "JNLC",
            "event_id": 1406,
            "event_ulid": "01F535Y1FVY8WZHE763HCNS8SZ",
            "journal_id": "2f144d2a-91e6-46ff-8e37-959a701cc58d",
            "status_from": "",
            "status_to": "queued"
          }
        },
        "title": "JournalStatusEvent",
        "properties": {
          "at": {
            "type": "string",
            "minLength": 1,
            "description": "Timestamp of event",
            "format": "date-time"
          },
          "entry_type": {
            "type": "string",
            "title": "",
            "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
            "enum": [
              "JNLC",
              "JNLS"
            ],
            "x-stoplight": {
              "id": "itme4epinxsnk"
            }
          },
          "event_id": {
            "type": "integer",
            "description": "Monotonically increasing 64bit integer"
          },
          "event_ulid": {
            "type": "string",
            "format": "ulid",
            "description": "lexically sortable, monotonically increasing character array"
          },
          "journal_id": {
            "type": "string",
            "description": "The UUID of the related Journal",
            "format": "uuid"
          },
          "status_from": {
            "type": "string",
            "enum": [
              "pending",
              "canceled",
              "executed",
              "queued",
              "rejected",
              "deleted"
            ],
            "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
            "x-stoplight": {
              "id": "ay4nu4z1j11cu"
            }
          },
          "status_to": {
            "type": "string",
            "enum": [
              "pending",
              "canceled",
              "executed",
              "queued",
              "rejected",
              "deleted"
            ],
            "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
            "x-stoplight": {
              "id": "ay4nu4z1j11cu"
            }
          }
        },
        "required": [
          "at",
          "entry_type",
          "event_id",
          "event_ulid",
          "journal_id",
          "status_from",
          "status_to"
        ],
        "x-stoplight": {
          "id": "0pbdls2h4h8za"
        }
      },
      "TransferStatusEvent": {
        "description": "Represents a change in a Transfer's status, sent over the events streaming api.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "account_id": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
            "at": "2021-06-10T19:52:24.066998Z",
            "event_id": 15961,
            "event_ulid": "01F7VQQ782DM57SJNWAYMD14J9",
            "status_from": "QUEUED",
            "status_to": "SENT_TO_CLEARING",
            "transfer_id": "c4ed4206-697b-4859-ab71-b9de6649859d"
          },
          "example-2": {
            "account_id": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
            "at": "2021-06-10T20:02:24.280178Z",
            "event_id": 15962,
            "status_from": "SENT_TO_CLEARING",
            "status_to": "COMPLETE",
            "transfer_id": "c4ed4206-697b-4859-ab71-b9de6649859d"
          }
        },
        "title": "TransferStatusEvent",
        "properties": {
          "account_id": {
            "type": "string",
            "minLength": 1,
            "description": "Account UUID",
            "format": "uuid"
          },
          "at": {
            "type": "string",
            "minLength": 1,
            "description": "Timedate of when the transfer status changed",
            "format": "date-time"
          },
          "event_id": {
            "type": "integer",
            "description": "Monotonically increasing 64bit integer"
          },
          "event_ulid": {
            "type": "string",
            "format": "ulid",
            "description": "lexically sortable, monotonically increasing character array"
          },
          "status_from": {
            "type": "string",
            "example": "QUEUED",
            "enum": [
              "QUEUED",
              "APPROVAL_PENDING",
              "PENDING",
              "SENT_TO_CLEARING",
              "REJECTED",
              "CANCELED",
              "APPROVED",
              "COMPLETE",
              "RETURNED"
            ],
            "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
            "x-stoplight": {
              "id": "mqx0hpg6h25vt"
            }
          },
          "status_to": {
            "type": "string",
            "example": "QUEUED",
            "enum": [
              "QUEUED",
              "APPROVAL_PENDING",
              "PENDING",
              "SENT_TO_CLEARING",
              "REJECTED",
              "CANCELED",
              "APPROVED",
              "COMPLETE",
              "RETURNED"
            ],
            "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
            "x-stoplight": {
              "id": "mqx0hpg6h25vt"
            }
          },
          "transfer_id": {
            "type": "string",
            "minLength": 1,
            "description": "Transfer UUID",
            "format": "uuid"
          }
        },
        "required": [
          "account_id",
          "at",
          "event_id",
          "event_ulid",
          "status_from",
          "status_to",
          "transfer_id"
        ],
        "x-stoplight": {
          "id": "ch42mh3ekwcmy"
        }
      },
      "TradeUpdateEventType": {
        "type": "string",
        "description": "**Common events**\n\nThese are the events that are the expected results of actions you may have taken by sending API requests.\n\nThe meaning of the `timestamp` field changes for each type; the meanings have been specified here for which types the\ntimestamp field will be present.\n\n- `new`: Sent when an order has been routed to exchanges for execution.\n- `fill`: Sent when your order has been completely filled.\n  - `timestamp`: The time at which the order was filled.\n- `partial_fill`: Sent when a number of shares less than the total remaining quantity on your order has been filled.\n  - `timestamp`: The time at which the shares were filled.\n- `canceled`: Sent when your requested cancellation of an order is processed.\n  - `timestamp`: The time at which the order was canceled.\n- `expired`: Sent when an order has reached the end of its lifespan, as determined by the order’s time in force value.\n  - `timestamp`: The time at which the order expired.\n- `done_for_day`: Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n- `replaced`: Sent when your requested replacement of an order is processed.\n  - `timestamp`: The time at which the order was replaced.\n\n**Rarer events**\n\nThese are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n- `rejected`: Sent when your order has been rejected.\n  - `timestamp`: The time at which the rejection occurred.\n- `pending_new`: Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n- `stopped`: Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n- `pending_cancel`: Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n- `pending_replace`: Sent when the order is awaiting replacement.\n- `calculated`: Sent when the order has been completed for the day - it is either `filled` or `done_for_day` - but remaining settlement calculations are still pending.\n- `suspended`: Sent when the order has been suspended and is not eligible for trading.\n- `order_replace_rejected`: Sent when the order replace has been rejected.\n- `order_cancel_rejected`: Sent when the order cancel has been rejected.\n",
        "enum": [
          "new",
          "fill",
          "partial_fill",
          "canceled",
          "expired",
          "done_for_day",
          "replaced",
          "rejected",
          "pending_new",
          "stopped",
          "pending_cancel",
          "pending_replace",
          "calculated",
          "suspended",
          "order_replace_rejected",
          "order_cancel_rejected"
        ],
        "x-stoplight": {
          "id": "hsatty9b5tgrf"
        }
      },
      "TradeUpdateEvent": {
        "description": "Represents an update to an order/trade, sent over the events streaming api.",
        "type": "object",
        "title": "TradeUpdateEvent",
        "x-examples": {
          "example-1": {
            "account_id": "529248ad-c4cc-4a50-bea4-6bfd2953f83a",
            "at": "2022-04-19T14:12:30.656741Z",
            "event": "new",
            "event_id": 37782,
            "event_ulid": "01G112NTT0XAXKDZK3AABK68TH",
            "execution_id": "7e544af3-3104-4e1a-8cbc-dab2624949ff",
            "order": {
              "asset_class": "us_equity",
              "asset_id": "a4778bc8-fad1-47b7-87fe-d5cde10d43f4",
              "cancel_requested_at": null,
              "canceled_at": null,
              "client_order_id": "6d873193-dac6-4f72-8e13-c57853a9339d",
              "commission": "1",
              "created_at": "2022-04-19T10:12:30.57117938-04:00",
              "expired_at": null,
              "extended_hours": false,
              "failed_at": null,
              "filled_at": null,
              "filled_avg_price": null,
              "filled_qty": "0",
              "hwm": null,
              "id": "edada91a-8b55-4916-a153-8c7a9817e708",
              "legs": null,
              "limit_price": "700",
              "notional": null,
              "order_class": "",
              "order_type": "limit",
              "qty": "4",
              "replaced_at": null,
              "replaced_by": null,
              "replaces": null,
              "side": "buy",
              "status": "new",
              "stop_price": null,
              "submitted_at": "2022-04-19T10:12:30.403135025-04:00",
              "symbol": "TSLA",
              "time_in_force": "day",
              "trail_percent": null,
              "trail_price": null,
              "type": "limit",
              "updated_at": "2022-04-19T10:12:30.609783218-04:00"
            },
            "timestamp": "2022-04-19T14:12:30.602193534Z"
          }
        },
        "x-stoplight": {
          "id": "o7j65o5h9vlva"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "minLength": 1,
            "description": "Account UUID",
            "format": "uuid"
          },
          "at": {
            "type": "string",
            "minLength": 1,
            "description": "Timestamp of event",
            "format": "date-time"
          },
          "event": {
            "type": "string",
            "description": "**Common events**\n\nThese are the events that are the expected results of actions you may have taken by sending API requests.\n\nThe meaning of the `timestamp` field changes for each type; the meanings have been specified here for which types the\ntimestamp field will be present.\n\n- `new`: Sent when an order has been routed to exchanges for execution.\n- `fill`: Sent when your order has been completely filled.\n  - `timestamp`: The time at which the order was filled.\n- `partial_fill`: Sent when a number of shares less than the total remaining quantity on your order has been filled.\n  - `timestamp`: The time at which the shares were filled.\n- `canceled`: Sent when your requested cancellation of an order is processed.\n  - `timestamp`: The time at which the order was canceled.\n- `expired`: Sent when an order has reached the end of its lifespan, as determined by the order’s time in force value.\n  - `timestamp`: The time at which the order expired.\n- `done_for_day`: Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n- `replaced`: Sent when your requested replacement of an order is processed.\n  - `timestamp`: The time at which the order was replaced.\n\n**Rarer events**\n\nThese are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n- `rejected`: Sent when your order has been rejected.\n  - `timestamp`: The time at which the rejection occurred.\n- `pending_new`: Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n- `stopped`: Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n- `pending_cancel`: Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n- `pending_replace`: Sent when the order is awaiting replacement.\n- `calculated`: Sent when the order has been completed for the day - it is either `filled` or `done_for_day` - but remaining settlement calculations are still pending.\n- `suspended`: Sent when the order has been suspended and is not eligible for trading.\n- `order_replace_rejected`: Sent when the order replace has been rejected.\n- `order_cancel_rejected`: Sent when the order cancel has been rejected.\n",
            "enum": [
              "new",
              "fill",
              "partial_fill",
              "canceled",
              "expired",
              "done_for_day",
              "replaced",
              "rejected",
              "pending_new",
              "stopped",
              "pending_cancel",
              "pending_replace",
              "calculated",
              "suspended",
              "order_replace_rejected",
              "order_cancel_rejected"
            ],
            "x-stoplight": {
              "id": "hsatty9b5tgrf"
            }
          },
          "event_id": {
            "type": "integer",
            "format": "int64",
            "description": "Monotonically increasing 64bit integer"
          },
          "event_ulid": {
            "type": "string",
            "format": "ulid",
            "description": "lexically sortable, monotonically increasing character array"
          },
          "execution_id": {
            "type": "string",
            "description": "Corresponding execution of an order. If an order gets filled over two executions (a partial_fill for example), you will receive two events with different IDs.",
            "format": "uuid"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "timestamp": {
            "type": "string",
            "description": "Has various different meanings depending on the value of `event`, please see the [Trading Events](https://alpaca.markets/docs/api-references/broker-api/events/#trade-events)\nEnum in the documentation or the TradeUpdateEventType model for more details on when it means different things.\n",
            "format": "date-time"
          },
          "price": {
            "type": "string",
            "x-stoplight": {
              "id": "7v2z4p5jcbe43"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The average price per share at which the order was filled."
          },
          "position_qty": {
            "type": "string",
            "x-stoplight": {
              "id": "cfhfaf0iswtge"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The size of your total position, after this fill event, in shares. Positive for long positions, negative for short positions."
          },
          "qty": {
            "type": "string",
            "x-stoplight": {
              "id": "1nwk8erh23zic"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The amount of shares this Trade order was for"
          }
        },
        "required": [
          "account_id",
          "at",
          "event",
          "event_id",
          "event_ulid",
          "execution_id",
          "order",
          "timestamp"
        ]
      },
      "TradeUpdateEventV2": {
        "description": "Represents an update to an order/trade, sent over the events streaming api.",
        "type": "object",
        "title": "TradeUpdateEvent",
        "x-examples": {
          "example-1": {
            "account_id": "529248ad-c4cc-4a50-bea4-6bfd2953f83a",
            "at": "2022-04-19T14:12:30.656741Z",
            "event": "new",
            "event_id": "01G112NTT0XAXKDZK3AABK68TH",
            "execution_id": "7e544af3-3104-4e1a-8cbc-dab2624949ff",
            "order": {
              "asset_class": "us_equity",
              "asset_id": "a4778bc8-fad1-47b7-87fe-d5cde10d43f4",
              "cancel_requested_at": null,
              "canceled_at": null,
              "client_order_id": "6d873193-dac6-4f72-8e13-c57853a9339d",
              "commission": "1",
              "created_at": "2022-04-19T10:12:30.57117938-04:00",
              "expired_at": null,
              "extended_hours": false,
              "failed_at": null,
              "filled_at": null,
              "filled_avg_price": null,
              "filled_qty": "0",
              "hwm": null,
              "id": "edada91a-8b55-4916-a153-8c7a9817e708",
              "legs": null,
              "limit_price": "700",
              "notional": null,
              "order_class": "",
              "order_type": "limit",
              "qty": "4",
              "replaced_at": null,
              "replaced_by": null,
              "replaces": null,
              "side": "buy",
              "status": "new",
              "stop_price": null,
              "submitted_at": "2022-04-19T10:12:30.403135025-04:00",
              "symbol": "TSLA",
              "time_in_force": "day",
              "trail_percent": null,
              "trail_price": null,
              "type": "limit",
              "updated_at": "2022-04-19T10:12:30.609783218-04:00"
            },
            "timestamp": "2022-04-19T14:12:30.602193534Z"
          }
        },
        "x-stoplight": {
          "id": "o7j65o5h9vlvb"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "minLength": 1,
            "description": "Account UUID",
            "format": "uuid"
          },
          "at": {
            "type": "string",
            "minLength": 1,
            "description": "Timestamp of event",
            "format": "date-time"
          },
          "event": {
            "type": "string",
            "description": "**Common events**\n\nThese are the events that are the expected results of actions you may have taken by sending API requests.\n\nThe meaning of the `timestamp` field changes for each type; the meanings have been specified here for which types the\ntimestamp field will be present.\n\n- `new`: Sent when an order has been routed to exchanges for execution.\n- `fill`: Sent when your order has been completely filled.\n  - `timestamp`: The time at which the order was filled.\n- `partial_fill`: Sent when a number of shares less than the total remaining quantity on your order has been filled.\n  - `timestamp`: The time at which the shares were filled.\n- `canceled`: Sent when your requested cancellation of an order is processed.\n  - `timestamp`: The time at which the order was canceled.\n- `expired`: Sent when an order has reached the end of its lifespan, as determined by the order’s time in force value.\n  - `timestamp`: The time at which the order expired.\n- `done_for_day`: Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n- `replaced`: Sent when your requested replacement of an order is processed.\n  - `timestamp`: The time at which the order was replaced.\n\n**Rarer events**\n\nThese are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n- `rejected`: Sent when your order has been rejected.\n  - `timestamp`: The time at which the rejection occurred.\n- `pending_new`: Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n- `stopped`: Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n- `pending_cancel`: Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n- `pending_replace`: Sent when the order is awaiting replacement.\n- `calculated`: Sent when the order has been completed for the day - it is either `filled` or `done_for_day` - but remaining settlement calculations are still pending.\n- `suspended`: Sent when the order has been suspended and is not eligible for trading.\n- `order_replace_rejected`: Sent when the order replace has been rejected.\n- `order_cancel_rejected`: Sent when the order cancel has been rejected.\n",
            "enum": [
              "new",
              "fill",
              "partial_fill",
              "canceled",
              "expired",
              "done_for_day",
              "replaced",
              "rejected",
              "pending_new",
              "stopped",
              "pending_cancel",
              "pending_replace",
              "calculated",
              "suspended",
              "order_replace_rejected",
              "order_cancel_rejected"
            ],
            "x-stoplight": {
              "id": "hsatty9b5tgrf"
            }
          },
          "event_id": {
            "type": "string",
            "format": "ulid",
            "description": "lexically sortable, monotonically increasing character array"
          },
          "execution_id": {
            "type": "string",
            "description": "Corresponding execution of an order. If an order gets filled over two executions (a partial_fill for example), you will receive two events with different IDs.",
            "format": "uuid"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "timestamp": {
            "type": "string",
            "description": "Has various different meanings depending on the value of `event`, please see the [Trading Events](https://alpaca.markets/docs/api-references/broker-api/events/#trade-events)\nEnum in the documentation or the TradeUpdateEventType model for more details on when it means different things.\n",
            "format": "date-time"
          },
          "price": {
            "type": "string",
            "x-stoplight": {
              "id": "7v2z4p5jcbe43"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The average price per share at which the order was filled."
          },
          "position_qty": {
            "type": "string",
            "x-stoplight": {
              "id": "cfhfaf0iswtge"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The size of your total position, after this fill event, in shares. Positive for long positions, negative for short positions."
          },
          "qty": {
            "type": "string",
            "x-stoplight": {
              "id": "1nwk8erh23zic"
            },
            "description": "Only present when event is either `fill` or `partial_fill`. The amount of shares this Trade order was for"
          }
        },
        "required": [
          "account_id",
          "at",
          "event",
          "event_id",
          "execution_id",
          "order",
          "timestamp"
        ]
      },
      "AdminActionEventGeneral": {
        "description": "Represents general fields for all AdminAction type",
        "type": "object",
        "title": "AdminActionEvent",
        "properties": {
          "event_id": {
            "type": "string",
            "format": "ulid",
            "description": "Lexically sortable, monotonically increasing character array"
          },
          "replaces_event_id": {
            "type": "string",
            "format": "ulid",
            "description": "Id of the replaced event (optional)"
          },
          "at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of event"
          },
          "belongs_to": {
            "description": "Represents structure of an Identifier for all AdminAction type",
            "type": "object",
            "title": "AdminActionBelongsTo",
            "properties": {
              "kind": {
                "enum": [
                  "account",
                  "owner",
                  "correspondent"
                ]
              },
              "id_reference": {
                "type": "string"
              }
            }
          },
          "created_by": {
            "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
            "type": "object",
            "title": "AdminActionCreatedBy",
            "properties": {
              "kind": {
                "enum": [
                  "admin"
                ]
              },
              "id_reference": {
                "type": "string"
              }
            }
          },
          "type": {
            "description": "Type of the Admin Action",
            "enum": [
              "liquidation_admin_event",
              "legacy_note_admin_event",
              "transaction_cancel_admin_event"
            ]
          },
          "category": {
            "description": "Category of the Admin Action",
            "enum": [
              "order",
              "other"
            ]
          },
          "visibility": {
            "description": "Visibility of the Admin Action",
            "enum": [
              "internal",
              "external",
              "correspondent_only"
            ]
          },
          "note": {
            "type": "string",
            "description": "Free text form description of the admin action"
          },
          "correspondent": {
            "type": "string",
            "description": "Related correspondent"
          }
        },
        "required": [
          "event_id",
          "at",
          "belongs_to",
          "created_by",
          "type",
          "category",
          "visibility",
          "note",
          "correspondent",
          "context"
        ]
      },
      "AdminActionLegacyNote": {
        "description": "Represents structure of a LegacyNote type AdminAction",
        "x-examples": {
          "example-1": {
            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
            "at": "2023-03-06T16:38:01Z",
            "belongs_to": {
              "kind": "account",
              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
            },
            "created_by": {
              "kind": "admin",
              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
            },
            "type": "legacy_note_admin_event",
            "category": "other",
            "visibility": "internal",
            "note": "Performed action: Positions split AMZN (long): 1.011266402\n",
            "correspondent": "LPCA",
            "context": null
          }
        },
        "allOf": [
          {
            "description": "Represents general fields for all AdminAction type",
            "type": "object",
            "title": "AdminActionEvent",
            "properties": {
              "event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Lexically sortable, monotonically increasing character array"
              },
              "replaces_event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Id of the replaced event (optional)"
              },
              "at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of event"
              },
              "belongs_to": {
                "description": "Represents structure of an Identifier for all AdminAction type",
                "type": "object",
                "title": "AdminActionBelongsTo",
                "properties": {
                  "kind": {
                    "enum": [
                      "account",
                      "owner",
                      "correspondent"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "created_by": {
                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                "type": "object",
                "title": "AdminActionCreatedBy",
                "properties": {
                  "kind": {
                    "enum": [
                      "admin"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "description": "Type of the Admin Action",
                "enum": [
                  "liquidation_admin_event",
                  "legacy_note_admin_event",
                  "transaction_cancel_admin_event"
                ]
              },
              "category": {
                "description": "Category of the Admin Action",
                "enum": [
                  "order",
                  "other"
                ]
              },
              "visibility": {
                "description": "Visibility of the Admin Action",
                "enum": [
                  "internal",
                  "external",
                  "correspondent_only"
                ]
              },
              "note": {
                "type": "string",
                "description": "Free text form description of the admin action"
              },
              "correspondent": {
                "type": "string",
                "description": "Related correspondent"
              }
            },
            "required": [
              "event_id",
              "at",
              "belongs_to",
              "created_by",
              "type",
              "category",
              "visibility",
              "note",
              "correspondent",
              "context"
            ]
          },
          {
            "type": "object",
            "title": "AdminActionContextLegacyNote",
            "properties": {
              "context": {
                "description": "Variable schema type which depends on the type",
                "type": "object"
              }
            }
          }
        ]
      },
      "AdminActionLiquidation": {
        "description": "Represents structure of a Liquidation type AdminAction",
        "x-examples": {
          "example-1": {
            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
            "at": "2023-03-06T16:38:01Z",
            "belongs_to": {
              "kind": "account",
              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
            },
            "created_by": {
              "kind": "admin",
              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
            },
            "type": "liquidation_admin_event",
            "category": "accounts",
            "visibility": "external",
            "note": "Performed action: Position liquidated: Asset: TSLA, Quantity: 0.0001, Reason: Liquidation due to real time risk\n",
            "correspondent": "LPCA",
            "context": {
              "symbol": "TSLA",
              "reason": "Liquidation due to real time risk",
              "available_qty": "0.0001",
              "requested_qty": "0.0001",
              "error": ""
            }
          }
        },
        "allOf": [
          {
            "description": "Represents general fields for all AdminAction type",
            "type": "object",
            "title": "AdminActionEvent",
            "properties": {
              "event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Lexically sortable, monotonically increasing character array"
              },
              "replaces_event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Id of the replaced event (optional)"
              },
              "at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of event"
              },
              "belongs_to": {
                "description": "Represents structure of an Identifier for all AdminAction type",
                "type": "object",
                "title": "AdminActionBelongsTo",
                "properties": {
                  "kind": {
                    "enum": [
                      "account",
                      "owner",
                      "correspondent"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "created_by": {
                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                "type": "object",
                "title": "AdminActionCreatedBy",
                "properties": {
                  "kind": {
                    "enum": [
                      "admin"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "description": "Type of the Admin Action",
                "enum": [
                  "liquidation_admin_event",
                  "legacy_note_admin_event",
                  "transaction_cancel_admin_event"
                ]
              },
              "category": {
                "description": "Category of the Admin Action",
                "enum": [
                  "order",
                  "other"
                ]
              },
              "visibility": {
                "description": "Visibility of the Admin Action",
                "enum": [
                  "internal",
                  "external",
                  "correspondent_only"
                ]
              },
              "note": {
                "type": "string",
                "description": "Free text form description of the admin action"
              },
              "correspondent": {
                "type": "string",
                "description": "Related correspondent"
              }
            },
            "required": [
              "event_id",
              "at",
              "belongs_to",
              "created_by",
              "type",
              "category",
              "visibility",
              "note",
              "correspondent",
              "context"
            ]
          },
          {
            "type": "object",
            "title": "AdminActionContextLiquidation",
            "properties": {
              "context": {
                "description": "Variable schema type which depends on the type",
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "available_qty": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "requested_qty": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "AdminActionTransactionCancel": {
        "description": "Represents structure of a TransactionCancel type AdminAction",
        "x-examples": {
          "example-1": {
            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
            "at": "2023-03-06T16:38:01Z",
            "belongs_to": {
              "kind": "account",
              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
            },
            "created_by": {
              "kind": "admin",
              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
            },
            "type": "transaction_cancel_admin_event",
            "category": "accounts",
            "visibility": "external",
            "note": "\"Transaction fdf18af2-142b-409e-8aad-d1731e276af0 cancelled for LPCA-12345678\n",
            "correspondent": "LPCA",
            "context": {
              "transaction_id": "fdf18af2-142b-409e-8aad-d1731e276af0",
              "entry_type": "JNLC",
              "external_id": "d5eede2c-1c08-45df-9800-87ad5eefc11f"
            }
          }
        },
        "allOf": [
          {
            "description": "Represents general fields for all AdminAction type",
            "type": "object",
            "title": "AdminActionEvent",
            "properties": {
              "event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Lexically sortable, monotonically increasing character array"
              },
              "replaces_event_id": {
                "type": "string",
                "format": "ulid",
                "description": "Id of the replaced event (optional)"
              },
              "at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of event"
              },
              "belongs_to": {
                "description": "Represents structure of an Identifier for all AdminAction type",
                "type": "object",
                "title": "AdminActionBelongsTo",
                "properties": {
                  "kind": {
                    "enum": [
                      "account",
                      "owner",
                      "correspondent"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "created_by": {
                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                "type": "object",
                "title": "AdminActionCreatedBy",
                "properties": {
                  "kind": {
                    "enum": [
                      "admin"
                    ]
                  },
                  "id_reference": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "description": "Type of the Admin Action",
                "enum": [
                  "liquidation_admin_event",
                  "legacy_note_admin_event",
                  "transaction_cancel_admin_event"
                ]
              },
              "category": {
                "description": "Category of the Admin Action",
                "enum": [
                  "order",
                  "other"
                ]
              },
              "visibility": {
                "description": "Visibility of the Admin Action",
                "enum": [
                  "internal",
                  "external",
                  "correspondent_only"
                ]
              },
              "note": {
                "type": "string",
                "description": "Free text form description of the admin action"
              },
              "correspondent": {
                "type": "string",
                "description": "Related correspondent"
              }
            },
            "required": [
              "event_id",
              "at",
              "belongs_to",
              "created_by",
              "type",
              "category",
              "visibility",
              "note",
              "correspondent",
              "context"
            ]
          },
          {
            "type": "object",
            "title": "AdminActionContextTransactionCancel",
            "properties": {
              "context": {
                "description": "Variable schema type which depends on the type",
                "type": "object",
                "properties": {
                  "transaction_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "entry_type": {
                    "type": "string"
                  },
                  "external_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "AdminActionBelongsTo": {
        "description": "Represents structure of an Identifier for all AdminAction type",
        "type": "object",
        "title": "AdminActionBelongsTo",
        "properties": {
          "kind": {
            "enum": [
              "account",
              "owner",
              "correspondent"
            ]
          },
          "id_reference": {
            "type": "string"
          }
        }
      },
      "AdminActionCreatedBy": {
        "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
        "type": "object",
        "title": "AdminActionCreatedBy",
        "properties": {
          "kind": {
            "enum": [
              "admin"
            ]
          },
          "id_reference": {
            "type": "string"
          }
        }
      },
      "AdminActionBelongsToKind": {
        "enum": [
          "account",
          "owner",
          "correspondent"
        ]
      },
      "AdminActionCreatedByKind": {
        "enum": [
          "admin"
        ]
      },
      "AdminActionType": {
        "description": "Type of the Admin Action",
        "enum": [
          "liquidation_admin_event",
          "legacy_note_admin_event",
          "transaction_cancel_admin_event"
        ]
      },
      "AdminActionCategory": {
        "description": "Category of the Admin Action",
        "enum": [
          "order",
          "other"
        ]
      },
      "AdminActionVisibility": {
        "description": "Visibility of the Admin Action",
        "enum": [
          "internal",
          "external",
          "correspondent_only"
        ]
      },
      "Watchlist": {
        "title": "Watchlist",
        "type": "object",
        "description": "Represents a set of securities observed by a user.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the watchlist itself.\n"
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the account that owns this watchlist.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When watchlist was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When watchlist was last updated"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "User friendly Name of watchlist"
          },
          "assets": {
            "type": "array",
            "description": "The contents of the watchlist, in the order as registered",
            "items": {
              "title": "Asset",
              "type": "object",
              "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
              "x-stoplight": {
                "id": "2bnou9t588bau"
              },
              "properties": {
                "id": {
                  "type": "string",
                  "example": "904837e3-3b76-47ec-b432-046db621571b",
                  "format": "uuid",
                  "description": "Asset ID"
                },
                "class": {
                  "type": "string",
                  "enum": [
                    "us_equity",
                    "crypto"
                  ],
                  "x-stoplight": {
                    "id": "0stvwzkbv2e0u"
                  }
                },
                "exchange": {
                  "type": "string",
                  "title": "Exchange",
                  "example": "NASDAQ",
                  "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                  "enum": [
                    "AMEX",
                    "ARCA",
                    "BATS",
                    "NYSE",
                    "NASDAQ",
                    "NYSEARCA",
                    "OTC",
                    "ERSX",
                    "FTXU"
                  ],
                  "x-stoplight": {
                    "id": "og9z1j3oimssn"
                  }
                },
                "symbol": {
                  "type": "string",
                  "example": "AAPL",
                  "description": "The symbol of the asset"
                },
                "name": {
                  "type": "string",
                  "example": "Apple Inc. Common Stock",
                  "description": "The official name of the asset"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive"
                  ],
                  "description": "active or inactive",
                  "example": "active"
                },
                "tradable": {
                  "type": "boolean",
                  "example": true,
                  "description": "Asset is tradable on Alpaca or not"
                },
                "marginable": {
                  "type": "boolean",
                  "example": true,
                  "description": "Asset is marginable or not"
                },
                "shortable": {
                  "type": "boolean",
                  "example": true,
                  "description": "Asset is shortable or not"
                },
                "easy_to_borrow": {
                  "type": "boolean",
                  "example": true,
                  "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                },
                "fractionable": {
                  "type": "boolean",
                  "example": true,
                  "description": "Asset is fractionable or not"
                },
                "last_close_pct_change": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                },
                "last_price": {
                  "type": "string",
                  "format": "decimal",
                  "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                },
                "last_close": {
                  "type": "string",
                  "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                  "format": "decimal"
                },
                "min_order_size": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "8oxfe2lh08pa5"
                  },
                  "description": "Minimum order size.  Field available for crypto only."
                },
                "min_trade_increment": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "9x4innaekt0bo"
                  },
                  "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                },
                "price_increment": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "y3hwtbjswugep"
                  },
                  "description": "Amount the price can be incremented by. Field available for crypto only."
                },
                "maintenance_margin_requirement": {
                  "type": "number",
                  "x-stoplight": {
                    "id": "w0vp53j3weqge"
                  },
                  "description": "Shows the % margin requirement for the asset (equities only)."
                },
                "attributes": {
                  "type": "array",
                  "x-stoplight": {
                    "id": "o1v8vair7lg7a"
                  },
                  "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                  "items": {
                    "x-stoplight": {
                      "id": "8q7bxjwl5evxu"
                    },
                    "type": "string",
                    "enum": [
                      "ptp_no_exception",
                      "ptp_with_exception",
                      "ipo"
                    ]
                  },
                  "example": [
                    "ptp_no_exception",
                    "ipo"
                  ]
                }
              },
              "required": [
                "id",
                "class",
                "symbol"
              ]
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-stoplight": {
          "id": "j0baixb9il3sa"
        }
      },
      "Announcement": {
        "description": "The announcements endpoint contains public information on previous and upcoming dividends, mergers, spinoffs, and stock splits.\n\nAnnouncement data is made available through the API as soon as it is ingested by Alpaca, which is typically the following trading day after the declaration date. This provides insight into future account stock position and cash balance changes that will take effect on an announcement’s payable date. Additionally, viewing previous announcement details can improve bookkeeping and reconciling previous account cash and position changes.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "bebc5ece-34be-47e9-b944-687e69a102be",
            "corporate_action_id": "78467X109_AA22",
            "ca_type": "dividend",
            "ca_sub_type": "cash",
            "initiating_symbol": "DIA",
            "initiating_original_cusip": "252787106",
            "target_symbol": "DIA",
            "target_original_cusip": "252787106",
            "declaration_date": "2021-12-19",
            "ex_date": "2022-01-21",
            "record_date": "2022-01-24",
            "payable_date": "2022-02-14",
            "cash": "0",
            "old_rate": "1",
            "new_rate": "1"
          }
        },
        "title": "Announcement",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "description": "ID that is specific to a single announcement."
          },
          "corporate_action_id": {
            "type": "string",
            "minLength": 1,
            "description": "ID that remains consistent across all announcements for the same corporate action. Unlike ‘id’, this can be used to connect multiple announcements to see how the terms have changed throughout the lifecycle of the corporate action event."
          },
          "ca_type": {
            "type": "string",
            "description": "Announcements have both a type and a subtype to categorize them. This model represents the higher level abstract \"types\" of Announcement. Please see the AnnouncementCASubType model for finer grain descriptions of the subtypes\n\nPossible values are:\n- dividend\n  can have `cash` and `stock` subtypes\n- merger\n  has `merger_update` and `merger_completion` sub types\n- split\n  has `stock_split`, `until_split`, `reverse_split`, and `recapitalization` sub types\n- spinoff\n  currently has only the `spinoff` subtype and thus is just this higher level category for now. A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
            "title": "",
            "enum": [
              "dividend",
              "merger",
              "split",
              "spinoff"
            ],
            "example": "dividend",
            "x-stoplight": {
              "id": "9u6s2oez5fadz"
            }
          },
          "ca_sub_type": {
            "type": "string",
            "description": "Announcements have both a type and a subtype to categorize them. This model represents the lowever level abstract \"sub types\" of Announcement. Please see the AnnouncementCAType model for higher level descriptions of the possible types\n\nPossible values are:\n\n- from the `dividend` type:\n  - **cash**\n\n    A cash payment based on the number of shares the account holds on the record date.\n  - **stock**\n\n    A stock payment based on the number of shares the account holds on the record date.\n\n- from the `merger` type:\n  - **merger_update**\n\n    An update to the terms of an upcoming merger. This can happen any number of times before the merger is completed and can be tracked by using the id parameter.\n\n  - **merger_completion**\n\n    A final update in the terms of the merger in which the intiating_symbol will acquire the target_symbol. Any previous terms updates for this announcement will have the same id value.\n\n- from the `split` type:\n  - **stock_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split\n  - **until_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split.\n  - **reverse_split**\n\n    A decrease in the number of shares outstanding with an increase in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the spli\n  - **recapitalization**\n\n    A stock recapitalization, typically used by a company to adjust debt and equity ratios.\n\n- from the `spinoff` type:\n  - **spinoff**\n\n    A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
            "title": "",
            "enum": [
              "cash",
              "stock",
              "merger_update",
              "merger_completion",
              "stock_split",
              "until_split",
              "reverse_split",
              "recapitalization",
              "spinoff"
            ],
            "x-stoplight": {
              "id": "r7r5e6m7z8zue"
            }
          },
          "initiating_symbol": {
            "type": "string",
            "minLength": 1,
            "description": "Symbol of the company initiating the announcement."
          },
          "initiating_original_cusip": {
            "type": "string",
            "minLength": 1,
            "description": "CUSIP of the company initiating the announcement."
          },
          "target_symbol": {
            "type": "string",
            "minLength": 1,
            "description": "Symbol of the child company involved in the announcement.",
            "nullable": true
          },
          "target_original_cusip": {
            "type": "string",
            "minLength": 1,
            "description": "CUSIP of the child company involved in the announcement.",
            "nullable": true
          },
          "declaration_date": {
            "type": "string",
            "minLength": 1,
            "description": "Date the corporate action or subsequent terms update was announced."
          },
          "ex_date": {
            "type": "string",
            "minLength": 1,
            "description": "The first date that purchasing a security will not result in a corporate action entitlement.",
            "nullable": true
          },
          "record_date": {
            "type": "string",
            "minLength": 1,
            "description": "The date an account must hold a settled position in the security in order to receive the corporate action entitlement.",
            "nullable": true
          },
          "payable_date": {
            "type": "string",
            "minLength": 1,
            "description": "The date the announcement will take effect. On this date, account stock and cash balances are expected to be processed accordingly."
          },
          "cash": {
            "type": "string",
            "minLength": 1,
            "description": "The amount of cash to be paid per share held by an account on the record date.",
            "nullable": true
          },
          "old_rate": {
            "type": "string",
            "minLength": 1,
            "description": "The denominator to determine any quantity change ratios in positions.",
            "nullable": true
          },
          "new_rate": {
            "type": "string",
            "minLength": 1,
            "description": "The numerator to determine any quantity change ratios in positions.",
            "nullable": true
          }
        },
        "required": [
          "id",
          "corporate_action_id",
          "ca_type",
          "ca_sub_type",
          "initiating_symbol",
          "initiating_original_cusip",
          "target_symbol",
          "target_original_cusip",
          "declaration_date",
          "ex_date",
          "record_date",
          "payable_date",
          "cash",
          "old_rate",
          "new_rate"
        ],
        "x-stoplight": {
          "id": "6xtmj2bgzu4y4"
        }
      },
      "AnnouncementCAType": {
        "type": "string",
        "description": "Announcements have both a type and a subtype to categorize them. This model represents the higher level abstract \"types\" of Announcement. Please see the AnnouncementCASubType model for finer grain descriptions of the subtypes\n\nPossible values are:\n- dividend\n  can have `cash` and `stock` subtypes\n- merger\n  has `merger_update` and `merger_completion` sub types\n- split\n  has `stock_split`, `until_split`, `reverse_split`, and `recapitalization` sub types\n- spinoff\n  currently has only the `spinoff` subtype and thus is just this higher level category for now. A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
        "title": "",
        "enum": [
          "dividend",
          "merger",
          "split",
          "spinoff"
        ],
        "example": "dividend",
        "x-stoplight": {
          "id": "9u6s2oez5fadz"
        }
      },
      "AnnouncementCASubType": {
        "type": "string",
        "description": "Announcements have both a type and a subtype to categorize them. This model represents the lowever level abstract \"sub types\" of Announcement. Please see the AnnouncementCAType model for higher level descriptions of the possible types\n\nPossible values are:\n\n- from the `dividend` type:\n  - **cash**\n\n    A cash payment based on the number of shares the account holds on the record date.\n  - **stock**\n\n    A stock payment based on the number of shares the account holds on the record date.\n\n- from the `merger` type:\n  - **merger_update**\n\n    An update to the terms of an upcoming merger. This can happen any number of times before the merger is completed and can be tracked by using the id parameter.\n\n  - **merger_completion**\n\n    A final update in the terms of the merger in which the intiating_symbol will acquire the target_symbol. Any previous terms updates for this announcement will have the same id value.\n\n- from the `split` type:\n  - **stock_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split\n  - **until_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split.\n  - **reverse_split**\n\n    A decrease in the number of shares outstanding with an increase in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the spli\n  - **recapitalization**\n\n    A stock recapitalization, typically used by a company to adjust debt and equity ratios.\n\n- from the `spinoff` type:\n  - **spinoff**\n\n    A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
        "title": "",
        "enum": [
          "cash",
          "stock",
          "merger_update",
          "merger_completion",
          "stock_split",
          "until_split",
          "reverse_split",
          "recapitalization",
          "spinoff"
        ],
        "x-stoplight": {
          "id": "r7r5e6m7z8zue"
        }
      },
      "OathClientResponse": {
        "title": "OathClientResponse",
        "type": "object",
        "example": {
          "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
          "name": "TradingApp",
          "description": "Sample description",
          "url": "http://test.com",
          "terms_of_use": "",
          "privacy_policy": "",
          "status": "ACTIVE",
          "redirect_uri": [
            "http://localhost"
          ],
          "live_trading_approved": true
        },
        "x-examples": {
          "example-1": {
            "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
            "name": "TradingApp",
            "description": "Sample description",
            "url": "http://test.com",
            "terms_of_use": "",
            "privacy_policy": "",
            "status": "ACTIVE",
            "redirect_uri": [
              "http://localhost"
            ],
            "live_trading_approved": true
          }
        },
        "properties": {
          "client_id": {
            "type": "string",
            "description": "OAuth client id"
          },
          "name": {
            "type": "string",
            "description": "Broker name (your name)"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "terms_of_use": {
            "type": "string",
            "description": "URL of Terms of Use"
          },
          "privacy_policy": {
            "type": "string",
            "description": "URL of Privacy Policy"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED"
            ],
            "description": "ACTIVE or DISABLED",
            "example": "ACTIVE"
          },
          "redirect_uri": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "live_trading_approved": {
            "type": "boolean",
            "example": true
          }
        },
        "x-stoplight": {
          "id": "qlcf3oshsqct1"
        }
      },
      "OAuthTokenRequest": {
        "title": "OAuthTokenRequest",
        "type": "object",
        "example": {
          "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
          "client_secret": "bbb14da2b6b8e7117a3c52a910e1dc2a",
          "redirect_uri": "http://localhost",
          "scope": "general",
          "account_id": "0d18ae51-3c94-4511-b209-101e1666416b"
        },
        "properties": {
          "client_id": {
            "type": "string",
            "description": "OAuth client ID"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth client secret"
          },
          "redirect_uri": {
            "type": "string",
            "description": "redirect URI for the OAuth flow"
          },
          "scope": {
            "type": "string",
            "description": "scopes requested by the OAuth flow"
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "end-user account ID"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "redirect_uri",
          "scope",
          "account_id"
        ],
        "description": "This model is used for both the Issue and Authorize OAuth token routes",
        "x-stoplight": {
          "id": "a9yeydszevnuj"
        }
      },
      "IssueOAuthTokenResponse": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "access_token": "87586f14-c3f4-4912-b107-f75bc17ff87a",
            "token_type": "Bearer",
            "scope": "general"
          }
        },
        "properties": {
          "access_token": {
            "type": "string",
            "description": "OAuth token"
          },
          "token_type": {
            "type": "string",
            "description": "Always `Bearer`",
            "enum": [
              "Bearer"
            ],
            "example": "Bearer"
          },
          "scope": {
            "type": "string",
            "description": "Token’s scope"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "scope"
        ],
        "x-stoplight": {
          "id": "7ljatwc79gihj"
        }
      },
      "AuthorizeOAuthTokenResponse": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": "912b5502-c983-40f7-a01d-6a66f13a754d",
            "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
            "redirect_uri": "http://localhost",
            "scope": ""
          }
        },
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "description": "OAuth code to exchange with token"
          },
          "client_id": {
            "type": "string",
            "minLength": 1,
            "description": "OAuth `client_id`"
          },
          "redirect_uri": {
            "type": "string",
            "minLength": 1,
            "description": "Redirect URI of OAuth flow"
          },
          "scope": {
            "type": "string",
            "description": "Granted scopes"
          }
        },
        "required": [
          "code",
          "client_id",
          "redirect_uri",
          "scope"
        ],
        "x-stoplight": {
          "id": "uz6o7d02lbaxp"
        }
      },
      "CreateWatchlistRequest": {
        "title": "CreateWatchlistRequest",
        "type": "object",
        "description": "This model represents the fields you can specify when Creating or Updating/Replacing a Watchlist",
        "properties": {
          "name": {
            "type": "string",
            "description": "The watchlist name"
          },
          "symbols": {
            "type": "array",
            "description": "The new list of symbol names to watch",
            "items": {
              "type": "string",
              "example": "[\"AAPL\", \"TSLA\"]"
            }
          }
        },
        "required": [
          "name",
          "symbols"
        ],
        "x-stoplight": {
          "id": "8vevle6of8odv"
        }
      },
      "DisclosureContextAnnotation": {
        "title": "DisclosureContextAnnotation",
        "type": "object",
        "properties": {
          "context_type": {
            "type": "string",
            "enum": [
              "CONTROLLED_FIRM",
              "IMMEDIATE_FAMILY_EXPOSED",
              "AFFILIATE_FIRM"
            ],
            "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
          },
          "company_name": {
            "type": "string",
            "description": "Required for FINRA affiliations and controlled firms."
          },
          "company_street_address": {
            "type": "string",
            "description": "Required for FINRA affiliations and controlled firms."
          },
          "company_city": {
            "type": "string",
            "description": "Required for FINRA affiliations and controlled firms."
          },
          "company_state": {
            "type": "string",
            "description": "Required if and only if `company_country` is `USA`."
          },
          "company_country": {
            "type": "string",
            "description": "Required for FINRA affiliations and controlled firms."
          },
          "company_compliance_email": {
            "type": "string",
            "description": "Required for FINRA affiliations and controlled firms."
          },
          "given_name": {
            "type": "string",
            "description": "Required for immediate family members of politically exposed persons."
          },
          "family_name": {
            "type": "string",
            "description": "Required for immediate family members of politically exposed persons."
          }
        },
        "required": [
          "context_type"
        ],
        "x-stoplight": {
          "id": "rf62uwbtfdfpk"
        }
      },
      "W8benDocument": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "additional_conditions": "None",
            "country_citizen": "Australia",
            "date": "2021-06-14",
            "date_of_birth": "1970-01-01",
            "foreign_tax_id": "123 456 789",
            "ftin_not_required": false,
            "full_name": "John Doe",
            "ip_address": "127.0.0.1",
            "mailing_address_city_state": "Adelaide, South Australia",
            "mailing_address_country": "Australia",
            "mailing_address_street": "51 Main St",
            "paragraph_number": "15",
            "percent_rate_withholding": 5,
            "permanent_address_city_state": "Adelaide, South Australia",
            "permanent_address_country": "Australia",
            "permanent_address_street": "20 Main St",
            "reference_number": "abc123",
            "residency": "Australia",
            "revision": "10-2021",
            "tax_id_ssn": "123-00-456",
            "timestamp": "2021-06-14T09:31:05Z",
            "income_type": "interest",
            "signer_full_name": "Mr. Signing User"
          }
        },
        "description": "W-8BEN documents model.",
        "properties": {
          "additional_conditions": {
            "type": "string",
            "description": "Any additional conditions to specify"
          },
          "country_citizen": {
            "type": "string",
            "description": "The country that the applicant is a citizen of"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "date signed"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "date of birth of applicant"
          },
          "foreign_tax_id": {
            "type": "string",
            "description": "Applicant's tax id in their home country"
          },
          "ftin_not_required": {
            "type": "boolean",
            "description": "Required if foreign_tax_id and tax_id_ssn are empty."
          },
          "full_name": {
            "type": "string",
            "description": "Full name of applicant"
          },
          "ip_address": {
            "type": "string",
            "description": "IP address of applicant when signed"
          },
          "mailing_address_city_state": {
            "type": "string",
            "description": "Mailing city/state of applicant"
          },
          "mailing_address_country": {
            "type": "string",
            "description": "Mailing country for applicant"
          },
          "mailing_address_street": {
            "type": "string",
            "description": "Mailing street address for applicant"
          },
          "paragraph_number": {
            "type": "string"
          },
          "percent_rate_withholding": {
            "type": "integer"
          },
          "permanent_address_city_state": {
            "type": "string",
            "description": "Permanent city/state of applicant"
          },
          "permanent_address_country": {
            "type": "string",
            "description": "Permanent country of residence of applicant"
          },
          "permanent_address_street": {
            "type": "string",
            "description": "Permanent street address of applicant"
          },
          "reference_number": {
            "type": "string"
          },
          "residency": {
            "type": "string",
            "description": "Country of residency of applicant"
          },
          "revision": {
            "type": "string",
            "description": "Revision of the W8BEN form"
          },
          "tax_id_ssn": {
            "type": "string",
            "description": "TaxID/SSN of applicant"
          },
          "timestamp": {
            "type": "string",
            "format": "time",
            "description": "Timestamp when form data was gathered"
          },
          "income_type": {
            "type": "string",
            "description": "Income type of applicant"
          },
          "signer_full_name": {
            "type": "string",
            "description": "Full name of signing user"
          }
        },
        "required": [
          "country_citizen",
          "date",
          "date_of_birth",
          "full_name",
          "ip_address",
          "permanent_address_city_state",
          "permanent_address_country",
          "permanent_address_street",
          "revision",
          "timestamp",
          "signer_full_name"
        ],
        "x-stoplight": {
          "id": "8cjul4ni6pe66"
        }
      },
      "CustodialAccountType": {
        "title": "CustodialAccountType",
        "x-stoplight": {
          "id": "jltxs43lpjolf"
        },
        "type": "string",
        "description": "**UTMA**\nCustodianTypeUTMA\n\n**UGMA**\nCustodianTypeUGMA"
      },
      "USDBalances": {
        "title": "USDBalances",
        "x-stoplight": {
          "id": "cqvonohea6r8x"
        },
        "type": "object",
        "properties": {
          "buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "regt_buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "daytrading_buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "cash": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "cash_withdrawable": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "cash_transferable": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "pending_transfer_out": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "portfolio_value": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "equity": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "long_market_value": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "short_market_value": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "initial_margin": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "maintenance_margin": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_maintenance_margin": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "sma": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_equity": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_long_market_value": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_short_market_value": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_cash": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_regt_buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "06hyvz1658m2j"
            },
            "format": "decimal"
          },
          "last_daytrading_buying_power": {
            "type": "string",
            "x-stoplight": {
              "id": "f178oif7i5e4d"
            }
          }
        },
        "description": "Account balances in USD."
      },
      "USDPosition": {
        "title": "USDPosition",
        "description": "Position values in USD. This is returned for LCT (non-USD) accounts only.",
        "type": "object",
        "properties": {
          "avg_entry_price": {
            "type": "string",
            "format": "decimal",
            "description": "Average entry price of the position in USD",
            "example": "71.43"
          },
          "market_value": {
            "type": "string",
            "format": "decimal",
            "description": "Total market value of the position in USD",
            "example": "400.00"
          },
          "cost_basis": {
            "type": "string",
            "format": "decimal",
            "description": "Total cost basis in USD",
            "example": "333.33"
          },
          "unrealized_pl": {
            "type": "string",
            "format": "decimal",
            "description": "Unrealized profit/loss in USD",
            "example": "66.67"
          },
          "unrealized_plpc": {
            "type": "string",
            "format": "decimal",
            "description": "Unrealized profit/loss percent (by a factor of 1)",
            "example": "0.2"
          },
          "unrealized_intraday_pl": {
            "type": "string",
            "format": "decimal",
            "description": "Unrealized profit/loss in USD for the day",
            "example": "6.67"
          },
          "unrealized_intraday_plpc": {
            "type": "string",
            "format": "decimal",
            "description": "Unrealized interday profit/loss percent (by a factor of 1)",
            "example": "0.0084"
          },
          "current_price": {
            "type": "string",
            "format": "decimal",
            "description": "Current asset price per share in USD",
            "example": "80.0"
          },
          "lastday_price": {
            "type": "string",
            "format": "decimal",
            "description": "Last day’s asset price per share based on the closing value of the last trading day in USD",
            "example": "79.33"
          },
          "change_today": {
            "type": "string",
            "format": "decimal",
            "description": "Percent change from last day price (by a factor of 1)",
            "example": "0.67"
          }
        }
      },
      "Currency": {
        "title": "Currency",
        "x-stoplight": {
          "id": "go8dbrpz277wf"
        },
        "type": "string",
        "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
      },
      "AccountBeneficiary": {
        "title": "AccountBeneficiary",
        "x-stoplight": {
          "id": "jfa7t5m9a9zss"
        },
        "type": "object",
        "properties": {
          "given_name": {
            "type": "string",
            "x-stoplight": {
              "id": "eyvjdrp7kgx56"
            }
          },
          "family_name": {
            "type": "string",
            "x-stoplight": {
              "id": "qzv63knp6b070"
            }
          },
          "date_of_birth": {
            "type": "string",
            "x-stoplight": {
              "id": "n83rzcqjolua4"
            }
          },
          "tax_id": {
            "type": "string",
            "x-stoplight": {
              "id": "y0leo7surlw4d"
            }
          },
          "tax_id_type": {
            "type": "string",
            "x-stoplight": {
              "id": "42cg7cd7womlj"
            }
          },
          "country_of_citizenship": {
            "type": "string",
            "x-stoplight": {
              "id": "30oumhfia7cqe"
            }
          },
          "country_of_birth": {
            "type": "string",
            "x-stoplight": {
              "id": "om78cyhfkzm0j"
            }
          },
          "country_of_tax_residence": {
            "type": "string",
            "x-stoplight": {
              "id": "h8uz2zrbz5whv"
            }
          },
          "state": {
            "type": "string",
            "x-stoplight": {
              "id": "887z7m0ncyak7"
            }
          },
          "email": {
            "type": "string",
            "x-stoplight": {
              "id": "c7jk1nxqlo1jw"
            }
          },
          "": {
            "type": "string",
            "x-stoplight": {
              "id": "1zg5jnb6rzdoo"
            }
          }
        },
        "required": [
          "given_name",
          "date_of_birth",
          "email"
        ],
        "description": "The beneficiary of the account."
      },
      "CIPInfo": {
        "title": "CIPInfo",
        "x-stoplight": {
          "id": "nmcb0qvan724h"
        },
        "type": "object",
        "description": "Customer Identification Program (CIP) information for an account applicant.",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this CIPInfo",
            "format": "uuid"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "nti69y3rr1e79"
            },
            "format": "uuid",
            "description": "UUID of the Account instance this CIPInfo is for"
          },
          "provider_name": {
            "type": "array",
            "x-stoplight": {
              "id": "1e8bkk1u4yiew"
            },
            "description": "List of KYC providers this information came from",
            "items": {
              "title": "CIPProvider",
              "x-stoplight": {
                "id": "1ladh13ciiv0e"
              },
              "type": "string",
              "description": "\"alloy\"   - ALLOY\n\"trulioo\" - TRULIOO\n\"onfido\"  - ONFIDO\n\"veriff\"  - VERIFF\n\"jumio\"   - JUMIO\n\"getmati\" - GETMATI"
            }
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "64h0di2a6vyej"
            },
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "x-stoplight": {
              "id": "suqeaf04rzb77"
            },
            "format": "date-time"
          },
          "kyc": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "CBDAD1C4-1047-450E-BAE5-B6C406F509B4",
                "risk_level": "LOW",
                "applicant_name": "John Doe",
                "email_address": "johndoe@example.com",
                "nationality": "American",
                "id_number": "jd0000123456789",
                "date_of_birth": "1970-12-01",
                "address": "42 Faux St",
                "postal_code": "94401",
                "country_of_residency": "USA",
                "kyc_completed_at": "2021-06-10T15:37:03Z",
                "ip_address": "127.0.0.1",
                "check_initiated_at": "2021-06-10T15:37:03Z",
                "check_completed_at": "2021-06-10T15:37:03Z",
                "approval_status": "approved",
                "approved_by": "Jane Doe",
                "approved_at": "2021-06-10T15:38:03Z"
              }
            },
            "description": "Represents Know Your Customer (KYC) info for a CIPInfo",
            "properties": {
              "id": {
                "type": "string",
                "description": "Your internal ID of check",
                "format": "uuid"
              },
              "risk_score": {
                "type": "string",
                "description": "Overall risk score returned by KYC provider or assessed",
                "x-stoplight": {
                  "id": "90qw403hvrt4y"
                }
              },
              "risk_level": {
                "type": "string",
                "description": "Overall risk level returned by KYC provider or assessed",
                "x-stoplight": {
                  "id": "qlzreqji4lhci"
                }
              },
              "risk_categories": {
                "type": "array",
                "description": "The list of risk categories returned by the KYC provider or assessed",
                "x-stoplight": {
                  "id": "qlzreqji4lhci"
                },
                "items": {
                  "x-stoplight": {
                    "id": "me5f66krhts26"
                  },
                  "type": "string"
                }
              },
              "applicant_name": {
                "type": "string",
                "description": "Given and family name of applicant"
              },
              "email_address": {
                "type": "string",
                "description": "email address of applicant"
              },
              "nationality": {
                "type": "string",
                "description": "nationality of applicant"
              },
              "date_of_birth": {
                "type": "string",
                "description": "DOB of applicant",
                "format": "date"
              },
              "address": {
                "type": "string",
                "description": "Concatenated street address, city, state and country of applicant"
              },
              "postal_code": {
                "type": "string",
                "description": "postal code for `address` field"
              },
              "country_of_residency": {
                "type": "string",
                "description": "country for `address` field"
              },
              "kyc_completed_at": {
                "type": "string",
                "description": "Datetime that KYC check was completed at",
                "format": "date-time"
              },
              "ip_address": {
                "type": "string",
                "description": "IP address of applicant at time of KYC check"
              },
              "check_initiated_at": {
                "type": "string",
                "description": "start datetime of KYC check",
                "format": "date-time"
              },
              "check_completed_at": {
                "type": "string",
                "description": "completion datetime of KYC check",
                "format": "date-time"
              },
              "approval_status": {
                "type": "string",
                "description": "Approval status of KYC check"
              },
              "approved_by": {
                "type": "string",
                "description": "Identifier of who approved KYC check"
              },
              "approved_at": {
                "type": "string",
                "description": "Reason for approving this KYC check",
                "format": "date-time"
              },
              "approved_reason": {
                "type": "string",
                "x-stoplight": {
                  "id": "rw7ke3e65x6xk"
                },
                "description": "Datetime that this KYC check was approved"
              }
            },
            "required": [
              "id"
            ],
            "title": "CIPKYCInfo",
            "x-stoplight": {
              "id": "1ygvfp2y5nwev"
            }
          },
          "document": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "55B9931A-3BE6-4BC0-9BDD-0B954E4A4632",
                "result": "clear",
                "status": "complete",
                "created_at": "2021-06-10T15:37:03Z",
                "image_integrity": "clear"
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "description": "Your internal ID of check"
              },
              "result": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "status": {
                "title": "CIPStatus",
                "x-stoplight": {
                  "id": "ejcunr8l8s0f2"
                },
                "type": "string",
                "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Datetime for when this check was done"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "Datetime for when this check was done",
                "x-stoplight": {
                  "id": "mldoed43bulx0"
                }
              },
              "date_of_expiry": {
                "type": "string",
                "format": "date",
                "description": "Datetime for when this check was done",
                "x-stoplight": {
                  "id": "zgpwb045porqt"
                }
              },
              "document_numbers": {
                "type": "array",
                "x-stoplight": {
                  "id": "ylxi39biyo436"
                },
                "description": "Number of the document that was checked",
                "items": {
                  "x-stoplight": {
                    "id": "n986txzgf0lnx"
                  },
                  "type": "string"
                }
              },
              "document_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "n8sxd8t9f3kzq"
                },
                "description": "Type of the document that was checked"
              },
              "first_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "w2punywp6uw0v"
                },
                "description": "First name extracted from the document"
              },
              "last_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "2nutmuuiwgyib"
                },
                "description": "Last name extracted from the document"
              },
              "gender": {
                "type": "string",
                "x-stoplight": {
                  "id": "23ze35btn7pgd"
                },
                "description": "Gender info extracted from the document"
              },
              "issuing_country": {
                "type": "string",
                "x-stoplight": {
                  "id": "0kb0a69x5g5m6"
                },
                "description": "Country for which issued the document"
              },
              "nationality": {
                "type": "string",
                "x-stoplight": {
                  "id": "l39n0f7u9rg3g"
                },
                "description": "Nationality extracted from the document"
              },
              "age_validation": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "comprised_document": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "police_record": {
                "title": "CIPStatus",
                "x-stoplight": {
                  "id": "ejcunr8l8s0f2"
                },
                "type": "string",
                "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
              },
              "data_comparison": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "data_comparison_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "j5c0hr492lzlv"
                },
                "description": "json object representing the results of the various sub-checks\n          done when calculating the result on `data_comparison`. Example: {“date_of_birth”: “clear”,\n          “date_of_expiry”: “clear” “document_numbers”: “clear”, “document_type”: “clear”, “first_name”: “clear”,\n          “gender”: “clear”, “issuing_country”: “clear”, “last_name”: “clear”}"
              },
              "image_integrity": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "image_integrity_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "gw6cht7g7zui2"
                },
                "description": "json object representing the results of the various sub-checks done\n          when calculating the result on `image_integrity`. Example: example: {“colour_picture”: “clear”,\n          “conclusive_document_quality”: “clear”, “image_quality”: “clear”, “supported_document”: “clear”}"
              },
              "visual_authenticity": {
                "type": "string",
                "x-stoplight": {
                  "id": "ccsft0oc0p7y7"
                },
                "description": "json object representing the the various sub-checks done when determening\n          whether visual (non-textual) elements are correct given the document type. Example: {\n          “digital_tampering”: “clear”, “face_detection”: “clear”, “fonts”: “clear”, “original_document_present”:\n          “clear”, “picture_face_integrity”: “clear”, “security_features”: “clear”, “template”: “clear”}"
              }
            },
            "required": [
              "id"
            ],
            "description": "Represents results of checking a document for CIPInfo\n",
            "x-stoplight": {
              "id": "7pizeb1ps42ij"
            }
          },
          "photo": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "0DD13020-F0FD-4B5A-B58F-BC1885E90A6D",
                "result": "clear",
                "status": "complete",
                "created_at": "2021-06-10T15:37:03Z",
                "face_comparison": "clear"
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "description": "Your internal ID of check"
              },
              "result": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "status": {
                "type": "number",
                "description": "Overall status of check"
              },
              "created_at": {
                "type": "string",
                "description": "datetime of when check happened"
              },
              "face_comparison": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "face_comparison_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "nva7tm8q3itop"
                },
                "description": "a json object representing the breakdown of sub-checks done in\n          `face_comparison`. Example: {“face_match”:{“result”: “clear”,“properties”:{“score”: “80”}}}"
              },
              "image_integrity": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "image_integrity_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "lltcpsijc1bwo"
                },
                "description": "a json object representing the breakdown of sub-checks done in\n          `image_integrity`. Example  {“face_detected”:{“result”: “clear”},“source_integrity”: {“result”: “clear”}}"
              },
              "visual_authenticity": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "visual_authenticity_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "0712bbbrw15oo"
                },
                "description": "a json object representing the breakdown of sub-checks don in\n          `visual_authenticity`. Example {“spoofing_detection”: {“result”: “clear”,“properties”: {“score”: “26”}}}}"
              }
            },
            "required": [
              "id"
            ],
            "description": "Represents the results of checking a Photo for CIPInfo",
            "x-stoplight": {
              "id": "hqx4vrzqypp7h"
            }
          },
          "identity": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "28E1CCE8-1B1A-4472-9AD4-C6C5B7C3A6AF",
                "result": "clear",
                "status": "complete",
                "created_at": "2021-06-10T15:37:03Z",
                "sources": "clear",
                "address": "clear",
                "date_of_birth": "clear"
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "description": "Your internal ID of check"
              },
              "result": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "status": {
                "title": "CIPStatus",
                "x-stoplight": {
                  "id": "ejcunr8l8s0f2"
                },
                "type": "string",
                "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
              },
              "created_at": {
                "type": "string",
                "description": "datetime when identity check happened"
              },
              "matched_address": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "matched_addresses": {
                "type": "string",
                "description": "datetime when identity check happened",
                "x-stoplight": {
                  "id": "1vqeq6vfihjs2"
                }
              },
              "sources": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "sources_breakdown": {
                "type": "string",
                "description": "a json object representing the breakdown of `sources` field. For example:\n          {“total_sources”: {“result”: “clear”,“properties”: {“total_number_of_sources”: “3”}}}",
                "x-stoplight": {
                  "id": "4aehkpo8da5mr"
                }
              },
              "address": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "address_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "wcctczes53ivy"
                },
                "description": "a json object representing the breakdown of the `address` field. For example:\n          {“credit_agencies”: {“result”: “clear”,“properties”:{“number_of_matches”:“1”}}"
              },
              "date_of_birth": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "date_of_birth_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "efhx1bwabsdty"
                },
                "description": "a json object representing the breakdown of the `date_of_birth` field.\n          For example: example: {“credit_agencies”:{“result”: “clear”,“properties”: {“number_of_matches”: “1”}}"
              },
              "tax_id": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "tax_id_breakdown": {
                "type": "string",
                "x-stoplight": {
                  "id": "x5c64geol7p1s"
                },
                "description": "a json object representing the breakdown of the `tax_id` field"
              }
            },
            "required": [
              "id"
            ],
            "x-stoplight": {
              "id": "g8qjr3c8h1npx"
            }
          },
          "watchlist": {
            "type": "object",
            "x-examples": {
              "Example 1": {
                "id": "7572B870-EB4C-46A2-8B88-509194CCEE7E",
                "result": "clear",
                "status": "complete",
                "created_at": "2021-06-10T15:37:03Z",
                "politically_exposed_person": "clear",
                "sanction": "clear",
                "adverse_media": "clear",
                "monitored_lists": "clear"
              }
            },
            "description": "Represents the result of checking to see if the applicant is in any watchlists for a CIPInfo",
            "properties": {
              "id": {
                "type": "string",
                "description": "Your internal ID of check"
              },
              "result": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "status": {
                "title": "CIPStatus",
                "x-stoplight": {
                  "id": "ejcunr8l8s0f2"
                },
                "type": "string",
                "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
              },
              "created_at": {
                "type": "string",
                "description": "datetime when check happened"
              },
              "records": {
                "type": "string",
                "x-stoplight": {
                  "id": "0jk1ut5oct0ml"
                },
                "description": "a json object. Example [{“text”: “Record info”}]"
              },
              "politically_exposed_person": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "adverse_media": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "sanction": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              },
              "monitored_lists": {
                "title": "CIPResult",
                "x-stoplight": {
                  "id": "4mte2vkxwqcmd"
                },
                "type": "string",
                "description": "\"clear\"\n\n\"consider\""
              }
            },
            "required": [
              "id"
            ],
            "x-stoplight": {
              "id": "b6tmg9qshk4f9"
            }
          }
        }
      },
      "CIPProvider": {
        "title": "CIPProvider",
        "x-stoplight": {
          "id": "1ladh13ciiv0e"
        },
        "type": "string",
        "description": "\"alloy\"   - ALLOY\n\"trulioo\" - TRULIOO\n\"onfido\"  - ONFIDO\n\"veriff\"  - VERIFF\n\"jumio\"   - JUMIO\n\"getmati\" - GETMATI"
      },
      "CIPKYC": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "CBDAD1C4-1047-450E-BAE5-B6C406F509B4",
            "risk_level": "LOW",
            "applicant_name": "John Doe",
            "email_address": "johndoe@example.com",
            "nationality": "American",
            "id_number": "jd0000123456789",
            "date_of_birth": "1970-12-01",
            "address": "42 Faux St",
            "postal_code": "94401",
            "country_of_residency": "USA",
            "kyc_completed_at": "2021-06-10T15:37:03Z",
            "ip_address": "127.0.0.1",
            "check_initiated_at": "2021-06-10T15:37:03Z",
            "check_completed_at": "2021-06-10T15:37:03Z",
            "approval_status": "approved",
            "approved_by": "Jane Doe",
            "approved_at": "2021-06-10T15:38:03Z"
          }
        },
        "description": "Represents Know Your Customer (KYC) info for a CIPInfo",
        "properties": {
          "id": {
            "type": "string",
            "description": "Your internal ID of check",
            "format": "uuid"
          },
          "risk_score": {
            "type": "string",
            "description": "Overall risk score returned by KYC provider or assessed",
            "x-stoplight": {
              "id": "90qw403hvrt4y"
            }
          },
          "risk_level": {
            "type": "string",
            "description": "Overall risk level returned by KYC provider or assessed",
            "x-stoplight": {
              "id": "qlzreqji4lhci"
            }
          },
          "risk_categories": {
            "type": "array",
            "description": "The list of risk categories returned by the KYC provider or assessed",
            "x-stoplight": {
              "id": "qlzreqji4lhci"
            },
            "items": {
              "x-stoplight": {
                "id": "me5f66krhts26"
              },
              "type": "string"
            }
          },
          "applicant_name": {
            "type": "string",
            "description": "Given and family name of applicant"
          },
          "email_address": {
            "type": "string",
            "description": "email address of applicant"
          },
          "nationality": {
            "type": "string",
            "description": "nationality of applicant"
          },
          "date_of_birth": {
            "type": "string",
            "description": "DOB of applicant",
            "format": "date"
          },
          "address": {
            "type": "string",
            "description": "Concatenated street address, city, state and country of applicant"
          },
          "postal_code": {
            "type": "string",
            "description": "postal code for `address` field"
          },
          "country_of_residency": {
            "type": "string",
            "description": "country for `address` field"
          },
          "kyc_completed_at": {
            "type": "string",
            "description": "Datetime that KYC check was completed at",
            "format": "date-time"
          },
          "ip_address": {
            "type": "string",
            "description": "IP address of applicant at time of KYC check"
          },
          "check_initiated_at": {
            "type": "string",
            "description": "start datetime of KYC check",
            "format": "date-time"
          },
          "check_completed_at": {
            "type": "string",
            "description": "completion datetime of KYC check",
            "format": "date-time"
          },
          "approval_status": {
            "type": "string",
            "description": "Approval status of KYC check"
          },
          "approved_by": {
            "type": "string",
            "description": "Identifier of who approved KYC check"
          },
          "approved_at": {
            "type": "string",
            "description": "Reason for approving this KYC check",
            "format": "date-time"
          },
          "approved_reason": {
            "type": "string",
            "x-stoplight": {
              "id": "rw7ke3e65x6xk"
            },
            "description": "Datetime that this KYC check was approved"
          }
        },
        "required": [
          "id"
        ],
        "title": "CIPKYCInfo",
        "x-stoplight": {
          "id": "1ygvfp2y5nwev"
        }
      },
      "CIPDocument": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "55B9931A-3BE6-4BC0-9BDD-0B954E4A4632",
            "result": "clear",
            "status": "complete",
            "created_at": "2021-06-10T15:37:03Z",
            "image_integrity": "clear"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Your internal ID of check"
          },
          "result": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "status": {
            "title": "CIPStatus",
            "x-stoplight": {
              "id": "ejcunr8l8s0f2"
            },
            "type": "string",
            "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime for when this check was done"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "Datetime for when this check was done",
            "x-stoplight": {
              "id": "mldoed43bulx0"
            }
          },
          "date_of_expiry": {
            "type": "string",
            "format": "date",
            "description": "Datetime for when this check was done",
            "x-stoplight": {
              "id": "zgpwb045porqt"
            }
          },
          "document_numbers": {
            "type": "array",
            "x-stoplight": {
              "id": "ylxi39biyo436"
            },
            "description": "Number of the document that was checked",
            "items": {
              "x-stoplight": {
                "id": "n986txzgf0lnx"
              },
              "type": "string"
            }
          },
          "document_type": {
            "type": "string",
            "x-stoplight": {
              "id": "n8sxd8t9f3kzq"
            },
            "description": "Type of the document that was checked"
          },
          "first_name": {
            "type": "string",
            "x-stoplight": {
              "id": "w2punywp6uw0v"
            },
            "description": "First name extracted from the document"
          },
          "last_name": {
            "type": "string",
            "x-stoplight": {
              "id": "2nutmuuiwgyib"
            },
            "description": "Last name extracted from the document"
          },
          "gender": {
            "type": "string",
            "x-stoplight": {
              "id": "23ze35btn7pgd"
            },
            "description": "Gender info extracted from the document"
          },
          "issuing_country": {
            "type": "string",
            "x-stoplight": {
              "id": "0kb0a69x5g5m6"
            },
            "description": "Country for which issued the document"
          },
          "nationality": {
            "type": "string",
            "x-stoplight": {
              "id": "l39n0f7u9rg3g"
            },
            "description": "Nationality extracted from the document"
          },
          "age_validation": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "comprised_document": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "police_record": {
            "title": "CIPStatus",
            "x-stoplight": {
              "id": "ejcunr8l8s0f2"
            },
            "type": "string",
            "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
          },
          "data_comparison": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "data_comparison_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "j5c0hr492lzlv"
            },
            "description": "json object representing the results of the various sub-checks\n          done when calculating the result on `data_comparison`. Example: {“date_of_birth”: “clear”,\n          “date_of_expiry”: “clear” “document_numbers”: “clear”, “document_type”: “clear”, “first_name”: “clear”,\n          “gender”: “clear”, “issuing_country”: “clear”, “last_name”: “clear”}"
          },
          "image_integrity": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "image_integrity_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "gw6cht7g7zui2"
            },
            "description": "json object representing the results of the various sub-checks done\n          when calculating the result on `image_integrity`. Example: example: {“colour_picture”: “clear”,\n          “conclusive_document_quality”: “clear”, “image_quality”: “clear”, “supported_document”: “clear”}"
          },
          "visual_authenticity": {
            "type": "string",
            "x-stoplight": {
              "id": "ccsft0oc0p7y7"
            },
            "description": "json object representing the the various sub-checks done when determening\n          whether visual (non-textual) elements are correct given the document type. Example: {\n          “digital_tampering”: “clear”, “face_detection”: “clear”, “fonts”: “clear”, “original_document_present”:\n          “clear”, “picture_face_integrity”: “clear”, “security_features”: “clear”, “template”: “clear”}"
          }
        },
        "required": [
          "id"
        ],
        "description": "Represents results of checking a document for CIPInfo\n",
        "x-stoplight": {
          "id": "7pizeb1ps42ij"
        }
      },
      "CIPResult": {
        "title": "CIPResult",
        "x-stoplight": {
          "id": "4mte2vkxwqcmd"
        },
        "type": "string",
        "description": "\"clear\"\n\n\"consider\""
      },
      "CIPStatus": {
        "title": "CIPStatus",
        "x-stoplight": {
          "id": "ejcunr8l8s0f2"
        },
        "type": "string",
        "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
      },
      "CIPApprovalStatus": {
        "title": "CIPApprovalStatus",
        "x-stoplight": {
          "id": "iqzwhz2gafp7w"
        },
        "type": "string",
        "description": "\"approved\"\n\n\"rejected\""
      },
      "CIPPhoto": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "0DD13020-F0FD-4B5A-B58F-BC1885E90A6D",
            "result": "clear",
            "status": "complete",
            "created_at": "2021-06-10T15:37:03Z",
            "face_comparison": "clear"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Your internal ID of check"
          },
          "result": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "status": {
            "type": "number",
            "description": "Overall status of check"
          },
          "created_at": {
            "type": "string",
            "description": "datetime of when check happened"
          },
          "face_comparison": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "face_comparison_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "nva7tm8q3itop"
            },
            "description": "a json object representing the breakdown of sub-checks done in\n          `face_comparison`. Example: {“face_match”:{“result”: “clear”,“properties”:{“score”: “80”}}}"
          },
          "image_integrity": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "image_integrity_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "lltcpsijc1bwo"
            },
            "description": "a json object representing the breakdown of sub-checks done in\n          `image_integrity`. Example  {“face_detected”:{“result”: “clear”},“source_integrity”: {“result”: “clear”}}"
          },
          "visual_authenticity": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "visual_authenticity_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "0712bbbrw15oo"
            },
            "description": "a json object representing the breakdown of sub-checks don in\n          `visual_authenticity`. Example {“spoofing_detection”: {“result”: “clear”,“properties”: {“score”: “26”}}}}"
          }
        },
        "required": [
          "id"
        ],
        "description": "Represents the results of checking a Photo for CIPInfo",
        "x-stoplight": {
          "id": "hqx4vrzqypp7h"
        }
      },
      "CIPIdentity": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "28E1CCE8-1B1A-4472-9AD4-C6C5B7C3A6AF",
            "result": "clear",
            "status": "complete",
            "created_at": "2021-06-10T15:37:03Z",
            "sources": "clear",
            "address": "clear",
            "date_of_birth": "clear"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Your internal ID of check"
          },
          "result": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "status": {
            "title": "CIPStatus",
            "x-stoplight": {
              "id": "ejcunr8l8s0f2"
            },
            "type": "string",
            "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
          },
          "created_at": {
            "type": "string",
            "description": "datetime when identity check happened"
          },
          "matched_address": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "matched_addresses": {
            "type": "string",
            "description": "datetime when identity check happened",
            "x-stoplight": {
              "id": "1vqeq6vfihjs2"
            }
          },
          "sources": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "sources_breakdown": {
            "type": "string",
            "description": "a json object representing the breakdown of `sources` field. For example:\n          {“total_sources”: {“result”: “clear”,“properties”: {“total_number_of_sources”: “3”}}}",
            "x-stoplight": {
              "id": "4aehkpo8da5mr"
            }
          },
          "address": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "address_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "wcctczes53ivy"
            },
            "description": "a json object representing the breakdown of the `address` field. For example:\n          {“credit_agencies”: {“result”: “clear”,“properties”:{“number_of_matches”:“1”}}"
          },
          "date_of_birth": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "date_of_birth_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "efhx1bwabsdty"
            },
            "description": "a json object representing the breakdown of the `date_of_birth` field.\n          For example: example: {“credit_agencies”:{“result”: “clear”,“properties”: {“number_of_matches”: “1”}}"
          },
          "tax_id": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "tax_id_breakdown": {
            "type": "string",
            "x-stoplight": {
              "id": "x5c64geol7p1s"
            },
            "description": "a json object representing the breakdown of the `tax_id` field"
          }
        },
        "required": [
          "id"
        ],
        "x-stoplight": {
          "id": "g8qjr3c8h1npx"
        }
      },
      "CIPWatchlist": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "7572B870-EB4C-46A2-8B88-509194CCEE7E",
            "result": "clear",
            "status": "complete",
            "created_at": "2021-06-10T15:37:03Z",
            "politically_exposed_person": "clear",
            "sanction": "clear",
            "adverse_media": "clear",
            "monitored_lists": "clear"
          }
        },
        "description": "Represents the result of checking to see if the applicant is in any watchlists for a CIPInfo",
        "properties": {
          "id": {
            "type": "string",
            "description": "Your internal ID of check"
          },
          "result": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "status": {
            "title": "CIPStatus",
            "x-stoplight": {
              "id": "ejcunr8l8s0f2"
            },
            "type": "string",
            "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
          },
          "created_at": {
            "type": "string",
            "description": "datetime when check happened"
          },
          "records": {
            "type": "string",
            "x-stoplight": {
              "id": "0jk1ut5oct0ml"
            },
            "description": "a json object. Example [{“text”: “Record info”}]"
          },
          "politically_exposed_person": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "adverse_media": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "sanction": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          },
          "monitored_lists": {
            "title": "CIPResult",
            "x-stoplight": {
              "id": "4mte2vkxwqcmd"
            },
            "type": "string",
            "description": "\"clear\"\n\n\"consider\""
          }
        },
        "required": [
          "id"
        ],
        "x-stoplight": {
          "id": "b6tmg9qshk4f9"
        }
      },
      "OnfidoSDKOutcome": {
        "title": "OnfidoSDKOutcome",
        "x-stoplight": {
          "id": "gasz29uxpmhoo"
        },
        "type": "string",
        "description": "\"NOT_STARTED\"\tThe user has not started the SDK flow yet. outcome is set to this default value upon token generation\n\"USER_EXITED\"\tThe user exited the SDK flow\n\"SDK_ERROR\"\tAn error occurred in the SDK flow\n\"USER_COMPLETED\"\tThe user completed the SDK flow"
      },
      "AdminConfigurations": {
        "title": "AdminConfigurations",
        "x-stoplight": {
          "id": "qsosbl2ojvpy5"
        },
        "type": "object",
        "description": "These configurations show account properties that are overriden either by Alpaca Broker Operations or an automated process.\n\nThese values cannot be modified by the Broker Partners.\n\n\nFor the **events** interface we are only broadcasting changes to admin configurations. In case nothing changed for a flag that will not be included in unrelated update events.\n\nDepending on the type of the Admin Configurations the sent event will behave differently. For bool flags we are only sending the new value.\n\nFor example the following payload means, that the disable_shorting flag was set to true from false:\n\n```\n{\n  \"disable_shorting\": false\n}\n```\n\nFor other data types, we are embeding the old and new values into the payload. For example changing the max_margin_multiplier from 4 to 1 will yield this payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": 4,\n    \"new\": 1,\n  }\n}\n```\n\nIntroducing an override value from the default will yield a null value as old. For example restricting the max_margin_multipler to 1 from default will yield the following payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": null,\n    \"new\": 1,\n  }\n}\n```",
        "properties": {
          "restrict_to_liquidation_reasons": {
            "title": "RestrictToLiquidationReasons",
            "x-stoplight": {
              "id": "8ve05o357xumy"
            },
            "type": "object",
            "description": "Reasons why the liquidation only flag was set",
            "properties": {
              "pattern_day_trading": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "jie5waxje186p"
                },
                "description": "Set when the trading account is marked as a PDT, but its equity falls below the $25k treshold"
              },
              "ach_return": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "rdalpird93yqd"
                },
                "description": "Set when an incoming ACH transfer gets rejected"
              },
              "position_to_equity_ratio": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "w38ngiibz57ih"
                },
                "description": "Set when the position to equity ration exceeds the maximum limit"
              },
              "unspecified": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "8t9456c8yt2u8"
                },
                "description": "Default value for unknown reason"
              }
            }
          },
          "outgoing_transfers_blocked": {
            "type": "boolean",
            "x-stoplight": {
              "id": "6asgwwc5og5vt"
            },
            "description": "Wire-out transfers blocked for the account if false"
          },
          "incoming_transfers_blocked": {
            "type": "boolean",
            "x-stoplight": {
              "id": "9h6kxbeu7892i"
            },
            "description": "Deposits are blocked for the account if false"
          },
          "disable_shorting": {
            "type": "boolean",
            "x-stoplight": {
              "id": "xpj079uvkjlln"
            },
            "description": "If true the account is not allowed to create short position orders"
          },
          "disable_fractional": {
            "type": "boolean",
            "x-stoplight": {
              "id": "67vm959kuferk"
            },
            "description": "If true, the account cannot create orders for fractional share positions"
          },
          "disable_crypto": {
            "type": "boolean",
            "x-stoplight": {
              "id": "h027r16ybjq26"
            },
            "description": "If true, the account is not allowed to trade cryptos"
          },
          "disable_day_trading": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ypcv5e39wabjv"
            },
            "description": "If true, the account is not allowed to day trade (e.g. buy and sell the same security on the same day)"
          },
          "max_margin_multiplier": {
            "type": "integer",
            "x-stoplight": {
              "id": "z5ufwctnvy3fy"
            },
            "description": "Max margin multipler is set by admin to this value"
          },
          "acct_daily_transfer_limit": {
            "type": "string",
            "x-stoplight": {
              "id": "7m2ved3asodk3"
            },
            "description": "Override the correspondent level daily transfer limits",
            "format": "decimal"
          }
        }
      },
      "RestrictToLiquidationReasons": {
        "title": "RestrictToLiquidationReasons",
        "x-stoplight": {
          "id": "8ve05o357xumy"
        },
        "type": "object",
        "description": "Reasons why the liquidation only flag was set",
        "properties": {
          "pattern_day_trading": {
            "type": "boolean",
            "x-stoplight": {
              "id": "jie5waxje186p"
            },
            "description": "Set when the trading account is marked as a PDT, but its equity falls below the $25k treshold"
          },
          "ach_return": {
            "type": "boolean",
            "x-stoplight": {
              "id": "rdalpird93yqd"
            },
            "description": "Set when an incoming ACH transfer gets rejected"
          },
          "position_to_equity_ratio": {
            "type": "boolean",
            "x-stoplight": {
              "id": "w38ngiibz57ih"
            },
            "description": "Set when the position to equity ration exceeds the maximum limit"
          },
          "unspecified": {
            "type": "boolean",
            "x-stoplight": {
              "id": "8t9456c8yt2u8"
            },
            "description": "Default value for unknown reason"
          }
        }
      },
      "KYCResultType": {
        "title": "KYCResultType",
        "x-stoplight": {
          "id": "mkpd1y7i0tihh"
        },
        "type": "string",
        "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
      },
      "FeePaymentMethod": {
        "title": "FeePaymentMethod",
        "x-stoplight": {
          "id": "ycxjjvxcdifuc"
        },
        "type": "string",
        "description": "Only outgoing wire fees are currently supported for automated processing.\n\n\n**user**\tThe end user will pay any applicable fees\n**invoice**\tAny applicable fees will be billed to the client in the following monthly invoice"
      },
      "RetrieveJITReportRequest": {
        "title": "RetrieveJITReportRequest",
        "x-stoplight": {
          "id": "u9ujcu7towxv0"
        },
        "type": "object",
        "properties": {
          "report_type": {
            "title": "ReportType",
            "x-stoplight": {
              "id": "7oh9cpf7r8tcr"
            },
            "type": "string",
            "description": "**detail**\tDetail report, content-type = application/csv\n**net_summary**\tNet Summary report, content-type = application/csv\n**net_payment**\tNet Payment report, content-type = application/pdf\n**net_payment_final**\tNet Payment Final report, content-type = application/pdf\n**gross_summary\tGross** Summary report, content-type = application/pdf\n**gross_payment\tGross** Payment report, content-type = application/pdf\n**gross_payment_final**\tGross Payment Final report, content-type = application/pdf"
          },
          "system_date": {
            "type": "string",
            "x-stoplight": {
              "id": "lvqwksnjozoij"
            },
            "description": "Date of file generation"
          },
          "asset_class": {
            "type": "string",
            "x-stoplight": {
              "id": "zttrrajefujf7"
            },
            "description": "The asset class to retrieve for."
          }
        },
        "required": [
          "report_type",
          "system_date"
        ],
        "description": ""
      },
      "ReportType": {
        "title": "ReportType",
        "x-stoplight": {
          "id": "7oh9cpf7r8tcr"
        },
        "type": "string",
        "description": "**detail**\tDetail report, content-type = application/csv\n**net_summary**\tNet Summary report, content-type = application/csv\n**net_payment**\tNet Payment report, content-type = application/pdf\n**net_payment_final**\tNet Payment Final report, content-type = application/pdf\n**gross_summary\tGross** Summary report, content-type = application/pdf\n**gross_payment\tGross** Payment report, content-type = application/pdf\n**gross_payment_final**\tGross Payment Final report, content-type = application/pdf"
      },
      "JITReport": {
        "title": "JITReport",
        "x-stoplight": {
          "id": "ragg7o909954y"
        },
        "type": "object",
        "description": "JIT Securities reports are made available through the API and can be accessed within the hour after 11:30 PM EST on the trade date (T+0). The reports communicate transaction-level details as well as overall settlement amounts, transfer direction, and payment timing.",
        "properties": {
          "detail": {
            "type": "string",
            "x-stoplight": {
              "id": "s4ezmhwn7oqxv"
            },
            "description": "Contains all activities that impact cash throughout the trading session including executed trades, trading fees, and corporate actions that involve cash allocations.\n\ncontent-type = application/csv"
          },
          "net_summary": {
            "type": "string",
            "x-stoplight": {
              "id": "phtq9hmob3aux"
            },
            "description": "Consists of three columns and a single row, which lists the net money movement to or from Alpaca for T0, T1, and T2.\n\ncontent-type = application/csv"
          },
          "net_payment": {
            "type": "string",
            "x-stoplight": {
              "id": "um5xd4us4djch"
            },
            "description": "Highlights the net amount due to Alpaca by settlement or to the partner on the date of settlement in a formalized invoice format.\n\ncontent-type = application/pdf"
          },
          "net_payment_final": {
            "type": "string",
            "x-stoplight": {
              "id": "3q3ubyhwekvh4"
            },
            "description": "Includes additional information to account for T+0 and T+1 settling activity to clarify settlement journaling reconciliation. This report is generated after trading session close on T+1.\n\ncontent-type = application/pdf"
          }
        }
      },
      "DailyTradingLimit": {
        "title": "DailyTradingLimit",
        "x-stoplight": {
          "id": "at5t8fzsrjz6s"
        },
        "type": "object",
        "properties": {
          "daily_net_limit_in_use": {
            "type": "string",
            "x-stoplight": {
              "id": "4159up5cilte2"
            },
            "description": "The real time net value of cash inflows (buy trades, etc.) with cash outflows (sell trades, dividends, etc). This will be dynamic throughout the day based on user activity, with executed orders being reset at the start of the next trading day.",
            "format": "decimal"
          },
          "daily_net_limit": {
            "type": "string",
            "x-stoplight": {
              "id": "s7lyx5zx2bxkq"
            },
            "format": "decimal",
            "description": "The net buying limit that can be reached before further cash outflow trading activity is restricted. Please reach out to learn more about how this limit is determined."
          }
        }
      },
      "JITLedgerAccount": {
        "title": "JITLedgerAccount",
        "x-stoplight": {
          "id": "8qgcugadp72ky"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ledger ID"
          },
          "ledger_name": {
            "type": "string",
            "x-stoplight": {
              "id": "177un5yfjzo30"
            },
            "description": "The ledger name"
          },
          "status": {
            "type": "string",
            "x-stoplight": {
              "id": "f1h0v5xllvutk"
            }
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "v28v0514mevfi"
            },
            "description": "Creation time in UNIX format"
          }
        },
        "x-examples": {
          "Example 1": {
            "id": "2896b9e2-3198-44cd-a08e-4cc4079aee33",
            "ledger_name": "Securities JIT IN",
            "status": "active",
            "created_at": "1653532627"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "account_id": "06b9d76e-1733-460c-844e-48d1ae0f10c3",
            "account_no": "JTRJITS00",
            "account_name": "Just In Time Receivable - JITS",
            "system_date": "2022-06-10",
            "entry_type": "JNLC",
            "description": "debit balance = 4185.36, base_rate = 0.0375, spread = 0.05",
            "contra_account_name": "Just In Time Interest Income",
            "amount": "1",
            "balance": "4186.36"
          }
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ledger ID"
          },
          "account_no": {
            "type": "string",
            "description": "The ledger account number"
          },
          "account_name": {
            "type": "string",
            "description": "The ledger name"
          },
          "system_date": {
            "type": "string",
            "description": "Date of transaction"
          },
          "entry_type": {
            "type": "string",
            "description": "Type of transaction"
          },
          "description": {
            "type": "string",
            "description": "Plain text overview of the transaction"
          },
          "contra_account_name": {
            "type": "string",
            "description": "Contra account of transaction"
          },
          "amount": {
            "type": "string",
            "description": "Total amount of the transaction"
          },
          "balance": {
            "type": "string",
            "description": "Ending balance after thetransaction has been applied"
          }
        }
      },
      "ReverseBatchJournalRequest": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "entry_type": "JNLC",
            "to_account": "8f8c8cee-2591-4f83-be12-82c659b5e748",
            "entries": [
              {
                "from_account": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
                "amount": "10"
              },
              {
                "from_account": "b9b19618-22dd-4e80-8432-fc9e1ba0b27d",
                "amount": "100"
              },
              {
                "from_account": "c96a5e16-7fca-425a-b67b-0814d064bfc0",
                "amount": "100"
              }
            ]
          }
        },
        "properties": {
          "entry_type": {
            "type": "string",
            "description": "ENUM: JNLC or JNLS"
          },
          "to_account": {
            "type": "string",
            "description": "The destination of funds. Most likely is your Sweep Firm Account"
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from_account": {
                  "type": "string",
                  "description": "The ID of the from_account that you want to journal from"
                },
                "amount": {
                  "type": "string",
                  "description": "Journal amount in USD"
                }
              }
            }
          },
          "description": {
            "type": "string",
            "x-stoplight": {
              "id": "xlfz4halme40h"
            },
            "description": "Journal description, gets returned in the response"
          }
        }
      },
      "AggregatePositionResponse": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "symbol": "AAPL",
            "cusip": "037833100",
            "long_qty": "1",
            "short_qty": "0",
            "long_market_value": "148.4700",
            "short_market_value": "0",
            "num_accounts": "1",
            "asset_type": "us_equity",
            "closing_price": "148.4700"
          }
        },
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Symbol of asset"
          },
          "cusip": {
            "type": "string",
            "description": "Cusip (9 digits, can start with 0’s)",
            "format": "decimal"
          },
          "long_qty": {
            "type": "string",
            "description": "Aggregate number of shares that the partner is long",
            "format": "decimal"
          },
          "short_qty": {
            "type": "string",
            "description": "Aggregate number of shares that the partner is short",
            "format": "decimal"
          },
          "long_market_value": {
            "type": "string",
            "description": "Aggregate notional dollar amount of the partner’s long positions",
            "format": "decimal"
          },
          "short_market_value": {
            "type": "string",
            "description": "Aggregate notional dollar amount of the partner’s short positions",
            "format": "decimal"
          },
          "num_accounts": {
            "type": "integer",
            "description": "Number of accounts that have a position in this asset (either long or short)",
            "format": "decimal"
          },
          "asset_type": {
            "type": "string",
            "enum": [
              "us_equity",
              "crypto"
            ],
            "x-stoplight": {
              "id": "0stvwzkbv2e0u"
            }
          },
          "closing_price": {
            "type": "string",
            "description": "EOD asset price per share at session close",
            "format": "decimal"
          }
        },
        "title": ""
      },
      "Portfolio": {
        "title": "Portfolio",
        "x-stoplight": {
          "id": "fmog87vwh0ufj"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Portfolio ID"
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "js7w7q6882lci"
            },
            "description": "Name of portfolio"
          },
          "status": {
            "type": "string",
            "x-stoplight": {
              "id": "n83qg43to8usu"
            },
            "description": "Current status of portfolio"
          },
          "description": {
            "type": "string",
            "x-stoplight": {
              "id": "0kpa55c7vtowj"
            },
            "description": "Text to describe portfolio"
          },
          "weights": {
            "type": "array",
            "x-stoplight": {
              "id": "tc4yqvolhyk6k"
            },
            "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
            "items": {
              "title": "PortfolioWeights",
              "x-stoplight": {
                "id": "alpltc9n7bi9j"
              },
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "7xfg4b1oj2sbw"
                  },
                  "description": "Possible values of cash or asset"
                },
                "symbol": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "wupeosw0tkf1x"
                  },
                  "description": "Must be fractionable asset. Only provided if type = “asset”"
                },
                "percent": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "yxgkifes2yzr0"
                  },
                  "description": "Must be a positive value, up to two decimal places"
                }
              }
            }
          },
          "cooldown_days": {
            "type": "string",
            "x-stoplight": {
              "id": "zdwrgssm6qy43"
            },
            "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
          },
          "rebalancing_conditions": {
            "type": "string",
            "x-stoplight": {
              "id": "qb75cbb4u1i90"
            },
            "description": "Rebalancing conditions for portfolio"
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "aq79n954xgv8l"
            },
            "description": "Portfolio creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "x-stoplight": {
              "id": "tfmbwhsply5a2"
            },
            "description": "Portfolio updated timestamp"
          }
        }
      },
      "PortfolioWeights": {
        "title": "PortfolioWeights",
        "x-stoplight": {
          "id": "alpltc9n7bi9j"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "7xfg4b1oj2sbw"
            },
            "description": "Possible values of cash or asset"
          },
          "symbol": {
            "type": "string",
            "x-stoplight": {
              "id": "wupeosw0tkf1x"
            },
            "description": "Must be fractionable asset. Only provided if type = “asset”"
          },
          "percent": {
            "type": "string",
            "x-stoplight": {
              "id": "yxgkifes2yzr0"
            },
            "description": "Must be a positive value, up to two decimal places"
          }
        }
      },
      "RebalancingConditions": {
        "title": "RebalancingConditions",
        "x-stoplight": {
          "id": "i4rbs4yru2m5b"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "yw99dm6g7gy0a"
            },
            "description": "Possible values of drift_band or calendar"
          },
          "sub_type": {
            "type": "string",
            "x-stoplight": {
              "id": "xrefv8k8riuqi"
            },
            "description": "For type = drift_band: absolute or relative. For type = calendar: weekly,monthly, quarterly or annually"
          },
          "percent": {
            "type": "string",
            "x-stoplight": {
              "id": "n1iwthxr6ktka"
            },
            "description": "Must be a positive value, up to two decimal places. Only permitted and required for type = drift_band. This is the max allowable drift percent from any target weight (+/-)"
          },
          "day": {
            "type": "string",
            "x-stoplight": {
              "id": "wr2y2qbyu15ty"
            },
            "description": "Used to specify the rebalancing day for conditions of type = calendar. Only permitted and required for type = calendar. In scenarios when the specified day aligns to a non-trading day, the rebalance will be triggered on the preceding trading day. For type= annually, the value must be passed in MM-DD format. If 02-29 is specified and the current year is not a leap year, the rebalance will occur on the trading day preceding 2/29. For type= quarterly and monthly the value must be an integer between 1 and 31 inclusive. This represents the day of month. For quarterly, rebalancing will trigger on this day in January, March, June, and December. If the specified day is non-existent for the month then the rebalancing will trigger on the preceding trading day. For type = weekly, permitted values are Monday, Tuesday, Wednesday, Thursday, Friday."
          }
        }
      },
      "PortfolioSubscription": {
        "title": "PortfolioSubscription",
        "x-stoplight": {
          "id": "ldbnrrt7wnoke"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Subscription ID"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "phfwv1q9wabod"
            },
            "description": "Account ID subscribing to portfolio"
          },
          "portfolio_id": {
            "type": "string",
            "x-stoplight": {
              "id": "07c4juxi9n3d6"
            },
            "description": "Portfolio ID for subscription"
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "0difpd7n53ewk"
            },
            "description": "Subscription creation timestamp",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "x-stoplight": {
              "id": "shzmstps2m4j0"
            },
            "description": "Subscription updated timestamp",
            "format": "date-time"
          },
          "last_rebalanced_at": {
            "type": "string",
            "x-stoplight": {
              "id": "vda454kksiutp"
            },
            "description": "Last rebalancing event for this subscription. Can be null."
          }
        }
      },
      "PortfolioRun": {
        "title": "PortfolioRun",
        "x-stoplight": {
          "id": "2fff3ngujfnlk"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Run ID"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "e5b9jxg40dm32"
            },
            "description": "Account ID for given run"
          },
          "portfolio_id": {
            "type": "string",
            "x-stoplight": {
              "id": "xiiu41p3i2x1e"
            },
            "description": "Portfolio ID for given run"
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "n0xkwdoznl4sb"
            },
            "description": "full_rebalance or invest_cash"
          },
          "initiated_by": {
            "type": "string",
            "x-stoplight": {
              "id": "96p7nh85x27ad"
            },
            "description": "system or api"
          },
          "updated_at": {
            "type": "string",
            "x-stoplight": {
              "id": "gnkdvsd306tkh"
            },
            "description": "RFC3339 format"
          },
          "completed_at": {
            "type": "string",
            "x-stoplight": {
              "id": "e9g3vqannt4l4"
            },
            "description": "RFC3339 format"
          },
          "canceled_at": {
            "type": "string",
            "x-stoplight": {
              "id": "p0zhdmev1a419"
            },
            "description": "RFC3339 format"
          },
          "status": {
            "title": "PortfolioRunStatus",
            "x-stoplight": {
              "id": "zwksu6m27qox0"
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "description": "|       Status       | Final |                                 Represented State                                |                                                         Notes                                                        |\n|:------------------:|:-----:|:--------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------:|\n| QUEUED             | No    | The run has been queued, waiting for our system to process it.                   | Runs only executed when the US market is open and there’s at least 15 minutes before the market closes.              |\n| IN_PROGRESS        | No    | Portfolio adjustment is in progress.                                             |                                                                                                                      |\n| CANCELED           | Yes   | Portfolio run canceled, before being picked up by Alpaca’s background processing |                                                                                                                      |\n| CANCELED_MID_RUN   | Yes   | Portfolio run canceled while executing.                                          | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| ERROR              | Yes   | There was an error while rebalancing the portfolio.                              | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| TIMEOUT            | Yes   | A timeout occured while rebalancing the portfolio.                               | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| COMPLETED_ADJUSTED | Yes   | The portfolio has been adjusted                                                  | The adjustments have been prepared, but the run details haven’t yet updated with the list of resulting orders        |\n| COMPLETED_SUCCESS  | Yes   | The portfolio has been adjusted, run status updated                              |                                                                                                                      |"
          },
          "reason": {
            "type": "string",
            "x-stoplight": {
              "id": "2cabm5kwcc7pk"
            },
            "description": "Explainer text in case of failed runs"
          },
          "weights": {
            "type": "array",
            "x-stoplight": {
              "id": "qcw8voqow82n6"
            },
            "description": "Considered weighting for this run",
            "items": {
              "title": "PortfolioWeights",
              "x-stoplight": {
                "id": "alpltc9n7bi9j"
              },
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "7xfg4b1oj2sbw"
                  },
                  "description": "Possible values of cash or asset"
                },
                "symbol": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "wupeosw0tkf1x"
                  },
                  "description": "Must be fractionable asset. Only provided if type = “asset”"
                },
                "percent": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "yxgkifes2yzr0"
                  },
                  "description": "Must be a positive value, up to two decimal places"
                }
              }
            }
          },
          "orders": {
            "type": "array",
            "x-stoplight": {
              "id": "pkp3xm0hhluzx"
            },
            "description": "Array of executed orders for this run",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "failed_orders": {
            "type": "array",
            "x-stoplight": {
              "id": "diem5oexjqx3r"
            },
            "description": "Array of failed orders for this run",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "skipped_orders": {
            "type": "array",
            "x-stoplight": {
              "id": "rbbuqp48ji4xw"
            },
            "description": "Array of skipped order for this run",
            "items": {
              "title": "SkippedOrder",
              "x-stoplight": {
                "id": "9azbr7fhzkkk7"
              },
              "type": "object",
              "description": "Skipped orders model contains information for such orders that the rebalancing engine didn’t send to our order system due to some validation issues.",
              "properties": {
                "symbol": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "vcp7ffvaq2wsy"
                  },
                  "description": "Symbol for which the adjustment was skipped"
                },
                "side": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "uofkwlhuzrj74"
                  },
                  "description": "Side of the order (buy, sell, sell_short)"
                },
                "notional": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "th4w7c8w02q9s"
                  },
                  "description": "Notional value of the order"
                },
                "currency": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "i99mj8cy90o7y"
                  },
                  "description": "Currency of the order"
                },
                "reason": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "u316hj6bjcq73"
                  },
                  "description": "Reason for the order being skipped"
                },
                "reason_details": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "1sltu2x6qfmtm"
                  },
                  "description": "Formatted error message with the cause of the skip"
                }
              },
              "required": [
                "symbol",
                "reason",
                "reason_details"
              ]
            }
          }
        }
      },
      "PortfolioRunStatus": {
        "title": "PortfolioRunStatus",
        "x-stoplight": {
          "id": "zwksu6m27qox0"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "|       Status       | Final |                                 Represented State                                |                                                         Notes                                                        |\n|:------------------:|:-----:|:--------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------:|\n| QUEUED             | No    | The run has been queued, waiting for our system to process it.                   | Runs only executed when the US market is open and there’s at least 15 minutes before the market closes.              |\n| IN_PROGRESS        | No    | Portfolio adjustment is in progress.                                             |                                                                                                                      |\n| CANCELED           | Yes   | Portfolio run canceled, before being picked up by Alpaca’s background processing |                                                                                                                      |\n| CANCELED_MID_RUN   | Yes   | Portfolio run canceled while executing.                                          | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| ERROR              | Yes   | There was an error while rebalancing the portfolio.                              | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| TIMEOUT            | Yes   | A timeout occured while rebalancing the portfolio.                               | The portfolio’s state is in between the pre-run and post-run state, manual remediation or job re-run is recommended. |\n| COMPLETED_ADJUSTED | Yes   | The portfolio has been adjusted                                                  | The adjustments have been prepared, but the run details haven’t yet updated with the list of resulting orders        |\n| COMPLETED_SUCCESS  | Yes   | The portfolio has been adjusted, run status updated                              |                                                                                                                      |"
      },
      "SkippedOrder": {
        "title": "SkippedOrder",
        "x-stoplight": {
          "id": "9azbr7fhzkkk7"
        },
        "type": "object",
        "description": "Skipped orders model contains information for such orders that the rebalancing engine didn’t send to our order system due to some validation issues.",
        "properties": {
          "symbol": {
            "type": "string",
            "x-stoplight": {
              "id": "vcp7ffvaq2wsy"
            },
            "description": "Symbol for which the adjustment was skipped"
          },
          "side": {
            "type": "string",
            "x-stoplight": {
              "id": "uofkwlhuzrj74"
            },
            "description": "Side of the order (buy, sell, sell_short)"
          },
          "notional": {
            "type": "string",
            "x-stoplight": {
              "id": "th4w7c8w02q9s"
            },
            "description": "Notional value of the order"
          },
          "currency": {
            "type": "string",
            "x-stoplight": {
              "id": "i99mj8cy90o7y"
            },
            "description": "Currency of the order"
          },
          "reason": {
            "type": "string",
            "x-stoplight": {
              "id": "u316hj6bjcq73"
            },
            "description": "Reason for the order being skipped"
          },
          "reason_details": {
            "type": "string",
            "x-stoplight": {
              "id": "1sltu2x6qfmtm"
            },
            "description": "Formatted error message with the cause of the skip"
          }
        },
        "required": [
          "symbol",
          "reason",
          "reason_details"
        ]
      },
      "BatchCreateFundingWalletRequest": {
        "type": "object",
        "properties": {
          "account_ids": {
            "type": "array",
            "description": "list of UUID account ids which will have funding wallets created",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BatchCreateFundingWalletResponse": {
        "type": "object",
        "properties": {
          "funding_wallets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "x-go-type": "uuid.UUID",
                  "x-go-type-import": {
                    "path": "github.com/gofrs/uuid"
                  }
                },
                "account_id": {
                  "type": "string",
                  "format": "uuid",
                  "x-go-type": "uuid.UUID",
                  "x-go-type-import": {
                    "path": "github.com/gofrs/uuid"
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled"
                  ],
                  "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "ListFundingDetails": {
        "type": "object",
        "properties": {
          "funding_details": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Gets funding details that can be used to settle and collect funds in each available currency.\n",
              "properties": {
                "account_number": {
                  "type": "string"
                },
                "account_holder_name": {
                  "type": "string"
                },
                "account_number_type": {
                  "type": "string"
                },
                "bank_information": {
                  "type": "object",
                  "required": [
                    "name",
                    "address"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                },
                "bank_name": {
                  "type": "string"
                },
                "bank_address": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "routing_code_type": {
                  "type": "string",
                  "enum": [
                    "BIC",
                    "ACH_ROUTING",
                    "ABA",
                    "ROUTING",
                    "SORT_CODE"
                  ],
                  "description": "Status:\n * `BIC`: bic_swift\n * `ACH`: ach_routing_code\n * `ABA`: aba\n * `ROUTING`: routing_code\n * `SORT_CODE`: sort_code\n"
                },
                "routing_code": {
                  "type": "string"
                },
                "payment_type": {
                  "type": "string",
                  "enum": [
                    "swift_wire",
                    "local_rails"
                  ],
                  "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
                },
                "bank_country": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ListTransfersResponse": {
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "x-go-type": "uuid.UUID",
                  "x-go-type-import": {
                    "path": "github.com/gofrs/uuid"
                  }
                },
                "account_id": {
                  "type": "string",
                  "format": "uuid",
                  "x-go-type": "uuid.UUID",
                  "x-go-type-import": {
                    "path": "github.com/gofrs/uuid"
                  }
                },
                "fees": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type",
                      "amount",
                      "currency",
                      "payment_type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "withdrawal_fee",
                          "fx_fee",
                          "network_fee",
                          "deposit_fee",
                          "ach_return_fee",
                          "parnter_fee",
                          "alpaca_fee"
                        ],
                        "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
                      },
                      "amount": {
                        "type": "string",
                        "nullable": false,
                        "format": "decimal",
                        "x-go-type": "decimal.Decimal",
                        "x-go-type-import": {
                          "path": "github.com/shopspring/decimal"
                        }
                      },
                      "currency": {
                        "title": "Currency",
                        "x-stoplight": {
                          "id": "go8dbrpz277wf"
                        },
                        "type": "string",
                        "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                      },
                      "payment_type": {
                        "type": "string",
                        "enum": [
                          "invoice"
                        ],
                        "description": "Status:\n * `invoice`\n"
                      }
                    }
                  }
                },
                "amount": {
                  "type": "string",
                  "format": "decimal",
                  "x-go-type": "decimal.Decimal",
                  "x-go-type-import": {
                    "path": "github.com/shopspring/decimal"
                  }
                },
                "currency": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "incoming",
                    "outgoing"
                  ],
                  "description": "Status:\n * `incoming`: incoming amount\n * `outgoing`: outgoing amount\n"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "CANCELED",
                    "EXECUTED",
                    "FAILED",
                    "COMPLETE"
                  ],
                  "description": "Status:\n * `PENDING`: Created and waiting to be processed\n * `CANCELED`: Canceled\n * `FAILED`: Failed mostly due to technical reasons\n * `COMPLETE`: Transfer has settled\n"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "usd": {
                  "type": "object",
                  "required": [
                    "amount"
                  ],
                  "properties": {
                    "amount": {
                      "type": "string",
                      "nullable": false,
                      "format": "decimal",
                      "x-go-type": "decimal.Decimal",
                      "x-go-type-import": {
                        "path": "github.com/shopspring/decimal"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DemoFundingTransfer": {
        "type": "object",
        "properties": {
          "receiver_account_number": {
            "type": "string"
          },
          "receiver_routing_code": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "x-go-type": "decimal.Decimal",
            "x-go-type-import": {
              "path": "github.com/shopspring/decimal"
            }
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "FundingWallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "x-go-type": "uuid.UUID",
            "x-go-type-import": {
              "path": "github.com/gofrs/uuid"
            }
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "x-go-type": "uuid.UUID",
            "x-go-type-import": {
              "path": "github.com/gofrs/uuid"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "pending",
              "disabled"
            ],
            "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FundingDetail": {
        "type": "object",
        "description": "Gets funding details that can be used to settle and collect funds in each available currency.\n",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "account_holder_name": {
            "type": "string"
          },
          "account_number_type": {
            "type": "string"
          },
          "bank_information": {
            "type": "object",
            "required": [
              "name",
              "address"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "bank_name": {
            "type": "string"
          },
          "bank_address": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "routing_code_type": {
            "type": "string",
            "enum": [
              "BIC",
              "ACH_ROUTING",
              "ABA",
              "ROUTING",
              "SORT_CODE"
            ],
            "description": "Status:\n * `BIC`: bic_swift\n * `ACH`: ach_routing_code\n * `ABA`: aba\n * `ROUTING`: routing_code\n * `SORT_CODE`: sort_code\n"
          },
          "routing_code": {
            "type": "string"
          },
          "payment_type": {
            "type": "string",
            "enum": [
              "swift_wire",
              "local_rails"
            ],
            "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
          },
          "bank_country": {
            "type": "string"
          }
        }
      },
      "Usd": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "nullable": false,
            "format": "decimal",
            "x-go-type": "decimal.Decimal",
            "x-go-type-import": {
              "path": "github.com/shopspring/decimal"
            }
          }
        }
      },
      "FundingWalletTransfer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "x-go-type": "uuid.UUID",
            "x-go-type-import": {
              "path": "github.com/gofrs/uuid"
            }
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "x-go-type": "uuid.UUID",
            "x-go-type-import": {
              "path": "github.com/gofrs/uuid"
            }
          },
          "fees": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "amount",
                "currency",
                "payment_type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "withdrawal_fee",
                    "fx_fee",
                    "network_fee",
                    "deposit_fee",
                    "ach_return_fee",
                    "parnter_fee",
                    "alpaca_fee"
                  ],
                  "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
                },
                "amount": {
                  "type": "string",
                  "nullable": false,
                  "format": "decimal",
                  "x-go-type": "decimal.Decimal",
                  "x-go-type-import": {
                    "path": "github.com/shopspring/decimal"
                  }
                },
                "currency": {
                  "title": "Currency",
                  "x-stoplight": {
                    "id": "go8dbrpz277wf"
                  },
                  "type": "string",
                  "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                },
                "payment_type": {
                  "type": "string",
                  "enum": [
                    "invoice"
                  ],
                  "description": "Status:\n * `invoice`\n"
                }
              }
            }
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "x-go-type": "decimal.Decimal",
            "x-go-type-import": {
              "path": "github.com/shopspring/decimal"
            }
          },
          "currency": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "incoming",
              "outgoing"
            ],
            "description": "Status:\n * `incoming`: incoming amount\n * `outgoing`: outgoing amount\n"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "CANCELED",
              "EXECUTED",
              "FAILED",
              "COMPLETE"
            ],
            "description": "Status:\n * `PENDING`: Created and waiting to be processed\n * `CANCELED`: Canceled\n * `FAILED`: Failed mostly due to technical reasons\n * `COMPLETE`: Transfer has settled\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "usd": {
            "type": "object",
            "required": [
              "amount"
            ],
            "properties": {
              "amount": {
                "type": "string",
                "nullable": false,
                "format": "decimal",
                "x-go-type": "decimal.Decimal",
                "x-go-type-import": {
                  "path": "github.com/shopspring/decimal"
                }
              }
            }
          }
        }
      },
      "FundingWalletRecipientBank": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "x-go-type": "uuid.UUID",
            "x-go-type-import": {
              "path": "github.com/gofrs/uuid"
            }
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "payment_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "swift_wire",
                "local_rails"
              ],
              "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
            }
          },
          "street_address": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Two-letter ISO country code."
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code"
          },
          "state_or_province": {
            "type": "string",
            "description": "State or province."
          },
          "currency": {
            "type": "string",
            "description": "Currency in which money is held in the beneficiary's bank account. Three-digit currency code."
          },
          "account_number": {
            "type": "string",
            "description": "Bank account number."
          },
          "routing_code_type": {
            "type": "string",
            "description": "Local payment routing system."
          },
          "routing_code": {
            "type": "string",
            "description": "Value for \"routing_code_type\"."
          },
          "bic_swift": {
            "type": "string",
            "description": "BIC/SWIFT code"
          },
          "iban": {
            "type": "string",
            "description": "IBAN code"
          },
          "created_at": {
            "type": "string",
            "description": "Date the beneficiary record was created.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Date the beneficiary record was last updated.",
            "format": "date-time"
          }
        }
      },
      "TransferFee": {
        "type": "object",
        "required": [
          "type",
          "amount",
          "currency",
          "payment_type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "withdrawal_fee",
              "fx_fee",
              "network_fee",
              "deposit_fee",
              "ach_return_fee",
              "parnter_fee",
              "alpaca_fee"
            ],
            "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
          },
          "amount": {
            "type": "string",
            "nullable": false,
            "format": "decimal",
            "x-go-type": "decimal.Decimal",
            "x-go-type-import": {
              "path": "github.com/shopspring/decimal"
            }
          },
          "currency": {
            "title": "Currency",
            "x-stoplight": {
              "id": "go8dbrpz277wf"
            },
            "type": "string",
            "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
          },
          "payment_type": {
            "type": "string",
            "enum": [
              "invoice"
            ],
            "description": "Status:\n * `invoice`\n"
          }
        }
      },
      "CreateFundingWalletWithdrawalRequest": {
        "type": "object",
        "properties": {
          "usd_amount": {
            "type": "string",
            "format": "decimal",
            "x-go-type": "decimal.Decimal",
            "x-go-type-import": {
              "path": "github.com/shopspring/decimal"
            }
          },
          "desired_currency": {
            "type": "string"
          },
          "payment_type": {
            "type": "string",
            "enum": [
              "swift_wire",
              "local_rails"
            ],
            "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
          }
        }
      },
      "BankInformation": {
        "type": "object",
        "required": [
          "name",
          "address"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "FundingDetailPaymentType": {
        "type": "string",
        "enum": [
          "swift_wire",
          "local_rails"
        ],
        "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
      },
      "FundingDetailRoutingCodeType": {
        "type": "string",
        "enum": [
          "BIC",
          "ACH_ROUTING",
          "ABA",
          "ROUTING",
          "SORT_CODE"
        ],
        "description": "Status:\n * `BIC`: bic_swift\n * `ACH`: ach_routing_code\n * `ABA`: aba\n * `ROUTING`: routing_code\n * `SORT_CODE`: sort_code\n"
      },
      "FundingWalletTransferDirection": {
        "type": "string",
        "enum": [
          "incoming",
          "outgoing"
        ],
        "description": "Status:\n * `incoming`: incoming amount\n * `outgoing`: outgoing amount\n"
      },
      "FeeType": {
        "type": "string",
        "enum": [
          "withdrawal_fee",
          "fx_fee",
          "network_fee",
          "deposit_fee",
          "ach_return_fee",
          "parnter_fee",
          "alpaca_fee"
        ],
        "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
      },
      "FeePaymentType": {
        "type": "string",
        "enum": [
          "invoice"
        ],
        "description": "Status:\n * `invoice`\n"
      },
      "FundingWalletTransferStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "CANCELED",
          "EXECUTED",
          "FAILED",
          "COMPLETE"
        ],
        "description": "Status:\n * `PENDING`: Created and waiting to be processed\n * `CANCELED`: Canceled\n * `FAILED`: Failed mostly due to technical reasons\n * `COMPLETE`: Transfer has settled\n"
      },
      "FundingWalletStatus": {
        "type": "string",
        "enum": [
          "active",
          "pending",
          "disabled"
        ],
        "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
      }
    },
    "responses": {
      "Forbidden": {
        "description": "Request is forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Malformed input.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Error",
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "x-stoplight": {
                "id": "xu9mkrgjdtotd"
              }
            }
          }
        }
      },
      "NotAuthorized": {
        "description": "Client is not authorized for this operation.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Error",
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "x-stoplight": {
                "id": "xu9mkrgjdtotd"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource does not exist.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Error",
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "x-stoplight": {
                "id": "xu9mkrgjdtotd"
              }
            }
          }
        }
      }
    },
    "requestBodies": {}
  },
  "paths": {
    "/v1/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Accounts",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pass space-delimited tokens. The response will contain accounts that match with each of the tokens (logical AND). A match means the token is present in either the account’s associated account number, phone number, name, or e-mail address (logical OR)."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "created_after",
            "description": "Inclusive of timestamp. Example: 2019-10-12T07:20:50.52Z"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "created_before",
            "description": "Inclusive of timestamp. Example: 2019-10-12T07:20:50.52Z"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "See the AccountStatus model for values"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "entities",
            "description": "Comma-delimited entity names to include in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "The response is a list of Account model up to 1000 items\nper query order by created_at. To scroll the result,\nplease use the created_after parameter.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents high level account info. Used when returning entire account information would not be useful like the getAllAccounts operation",
                    "x-examples": {
                      "example-1": {
                        "id": "0d18ae51-3c94-4511-b209-101e1666416b",
                        "account_number": "9034005019",
                        "status": "APPROVED",
                        "currency": "USD",
                        "created_at": "2019-09-30T23:55:31.185998Z",
                        "last_equity": "1500.65"
                      }
                    },
                    "x-stoplight": {
                      "id": "mg5a9g65p0k72"
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID that identifies the account for later reference"
                      },
                      "account_number": {
                        "type": "string",
                        "description": "A human-readable account number that can be shown to the end user",
                        "nullable": true
                      },
                      "account_type": {
                        "type": "string",
                        "title": "AccountType",
                        "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
                        "enum": [
                          "trading",
                          "custodial",
                          "donor_advised"
                        ],
                        "example": "trading",
                        "x-stoplight": {
                          "id": "l6z0ingxys2ei"
                        }
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE",
                        "enum": [
                          "INACTIVE",
                          "ONBOARDING",
                          "SUBMITTED",
                          "SUBMISSION_FAILED",
                          "ACTION_REQUIRED",
                          "ACCOUNT_UPDATED",
                          "APPROVAL_PENDING",
                          "APPROVED",
                          "REJECTED",
                          "ACTIVE",
                          "ACCOUNT_CLOSED"
                        ],
                        "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                        "x-stoplight": {
                          "id": "zxsbg55ojatc8"
                        }
                      },
                      "crypto_status": {
                        "type": "string",
                        "example": "ACTIVE",
                        "enum": [
                          "INACTIVE",
                          "ONBOARDING",
                          "SUBMITTED",
                          "SUBMISSION_FAILED",
                          "ACTION_REQUIRED",
                          "ACCOUNT_UPDATED",
                          "APPROVAL_PENDING",
                          "APPROVED",
                          "REJECTED",
                          "ACTIVE",
                          "ACCOUNT_CLOSED"
                        ],
                        "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                        "x-stoplight": {
                          "id": "zxsbg55ojatc8"
                        }
                      },
                      "currency": {
                        "title": "Currency",
                        "x-stoplight": {
                          "id": "go8dbrpz277wf"
                        },
                        "type": "string",
                        "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp (RFC3339) of account creation."
                      },
                      "last_equity": {
                        "type": "string",
                        "format": "decimal",
                        "description": "EOD equity calculation (cash + long market value + short market value)"
                      },
                      "enabled_assets": {
                        "x-stoplight": {
                          "id": "44f1cfyta748h"
                        },
                        "type": "array",
                        "description": "Assets the user has enabled and is able to trade once status and/or crypto_status are ACTIVE",
                        "items": {
                          "type": "string",
                          "enum": [
                            "us_equity",
                            "crypto"
                          ],
                          "x-stoplight": {
                            "id": "0stvwzkbv2e0u"
                          }
                        }
                      },
                      "contact": {
                        "type": "object",
                        "description": "Contact is the model for the account owner contact information.\n",
                        "x-stoplight": {
                          "id": "qcig9irpj9334"
                        },
                        "properties": {
                          "email_address": {
                            "type": "string",
                            "format": "email",
                            "example": "john.doe@example.com"
                          },
                          "phone_number": {
                            "type": "string",
                            "example": "+15556667788",
                            "description": "Phone number should include the country code, format: “+15555555555”"
                          },
                          "street_address": {
                            "type": "array",
                            "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                            "items": {
                              "type": "string",
                              "example": "20 N San Mateo Dr",
                              "x-stoplight": {
                                "id": "10wajx98hc79a"
                              }
                            }
                          },
                          "unit": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yybrq2o2nb5gy"
                            },
                            "description": "The specific apartment number if applicable"
                          },
                          "city": {
                            "type": "string",
                            "example": "San Mateo"
                          },
                          "state": {
                            "type": "string",
                            "example": "CA",
                            "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "94401"
                          }
                        },
                        "required": [
                          "email_address",
                          "phone_number",
                          "street_address"
                        ]
                      },
                      "identity": {
                        "type": "object",
                        "description": "Identity is the model to provide account owner’s identity information.\n",
                        "example": {
                          "given_name": "John",
                          "family_name": "Doe",
                          "date_of_birth": "1990-01-01",
                          "tax_id": "666-55-4321",
                          "tax_id_type": "USA_SSN",
                          "country_of_citizenship": "AUS",
                          "country_of_birth": "AUS",
                          "country_of_tax_residence": "USA",
                          "funding_source": [
                            "employment_income"
                          ]
                        },
                        "x-stoplight": {
                          "id": "oi43k8rpw570e"
                        },
                        "properties": {
                          "given_name": {
                            "type": "string",
                            "example": "John",
                            "description": "The first/given name of the user."
                          },
                          "family_name": {
                            "type": "string",
                            "example": "Doe",
                            "description": "The last name (surname) of the user."
                          },
                          "middle_name": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "p03brcsyyjbcq"
                            },
                            "description": "The middle name of the user."
                          },
                          "date_of_birth": {
                            "type": "string",
                            "format": "date",
                            "example": "1990-01-01",
                            "description": "The date of birth in \"YYYY-MM-DD\" format."
                          },
                          "tax_id": {
                            "type": "string",
                            "example": "666-55-4321",
                            "description": "Required if tax_id_type is set."
                          },
                          "tax_id_type": {
                            "type": "string",
                            "title": "TaxIdType",
                            "enum": [
                              "USA_SSN",
                              "ARG_AG_CUIT",
                              "AUS_TFN",
                              "AUS_ABN",
                              "BOL_NIT",
                              "BRA_CPF",
                              "CHL_RUT",
                              "COL_NIT",
                              "CRI_NITE",
                              "DEU_TAX_ID",
                              "DOM_RNC",
                              "ECU_RUC",
                              "FRA_SPI",
                              "GBR_UTR",
                              "GBR_NINO",
                              "GTM_NIT",
                              "HND_RTN",
                              "HUN_TIN",
                              "IDN_KTP",
                              "IND_PAN",
                              "ISR_TAX_ID",
                              "ITA_TAX_ID",
                              "JPN_TAX_ID",
                              "MEX_RFC",
                              "NIC_RUC",
                              "NLD_TIN",
                              "PAN_RUC",
                              "PER_RUC",
                              "PRY_RUC",
                              "SGP_NRIC",
                              "SGP_FIN",
                              "SGP_ASGD",
                              "SGP_ITR",
                              "SLV_NIT",
                              "SWE_TAX_ID",
                              "URY_RUT",
                              "VEN_RIF",
                              "NATIONAL_ID",
                              "PASSPORT",
                              "PERMANENT_RESIDENT",
                              "DRIVER_LICENSE",
                              "OTHER_GOV_ID",
                              "NOT_SPECIFIED"
                            ],
                            "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                            "example": "USA_SSN",
                            "x-stoplight": {
                              "id": "ulm45kpr2peox"
                            }
                          },
                          "country_of_citizenship": {
                            "type": "string",
                            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                            "example": "USA"
                          },
                          "country_of_birth": {
                            "type": "string",
                            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                            "example": "USA"
                          },
                          "country_of_tax_residence": {
                            "type": "string",
                            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                            "example": "USA"
                          },
                          "funding_source": {
                            "type": "array",
                            "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                            "items": {
                              "type": "string",
                              "enum": [
                                "employment_income",
                                "investments",
                                "inheritance",
                                "business_income",
                                "savings",
                                "family"
                              ]
                            }
                          },
                          "annual_income_min": {
                            "type": "number",
                            "description": "The lower bound of the user's annual income."
                          },
                          "annual_income_max": {
                            "type": "number",
                            "description": "The upper bound of the user's annual income."
                          },
                          "liquid_net_worth_min": {
                            "type": "number",
                            "description": "The lower bound of the user's liquid net worth."
                          },
                          "liquid_net_worth_max": {
                            "type": "number",
                            "description": "The upper bound of the user's liquid net worth."
                          },
                          "total_net_worth_min": {
                            "type": "number",
                            "description": "The lower bound of the user's total net worth."
                          },
                          "total_net_worth_max": {
                            "type": "number",
                            "description": "The upper bound of the user's total net worth."
                          },
                          "visa_type": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "y5a5r7inu02w8"
                            },
                            "description": "Only used to collect visa types for users residing in the USA."
                          },
                          "visa_expiration_date": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "q7b33k53b5alk"
                            },
                            "description": "Required if `visa_type` is set.",
                            "format": "date"
                          },
                          "date_of_departure_from_usa": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yasik2wcmshea"
                            },
                            "format": "date",
                            "description": "Required if `visa_type` = B1 or B2"
                          },
                          "permanent_resident": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "jlvzbu3cevmju"
                            },
                            "description": "Only used to collect permanent residence status in the USA."
                          },
                          "extra": {
                            "type": "object",
                            "description": "Any additional information used for KYC purposes\n"
                          }
                        },
                        "required": [
                          "given_name",
                          "family_name",
                          "date_of_birth",
                          "tax_id_type",
                          "country_of_tax_residence",
                          "funding_source"
                        ]
                      },
                      "disclosures": {
                        "type": "object",
                        "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                        "example": {
                          "is_control_person": false,
                          "is_affiliated_exchange_or_finra": false,
                          "is_politically_exposed": false,
                          "immediate_family_exposed": false
                        },
                        "x-stoplight": {
                          "id": "h3ui3575tdh6q"
                        },
                        "properties": {
                          "employment_status": {
                            "type": "string",
                            "enum": [
                              "unemployed",
                              "employed",
                              "student",
                              "retired"
                            ],
                            "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                          },
                          "employer_name": {
                            "type": "string",
                            "description": "The name of the employer if the user is employed."
                          },
                          "employer_address": {
                            "type": "string",
                            "description": "The employer's address if the user is employed."
                          },
                          "employment_position": {
                            "type": "string",
                            "description": "The user's position if they are employed."
                          },
                          "is_control_person": {
                            "type": "boolean",
                            "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                          },
                          "is_affiliated_exchange_or_finra": {
                            "type": "boolean",
                            "description": "Whether user is affiliated with any exchanges or FINRA."
                          },
                          "is_politically_exposed": {
                            "type": "boolean",
                            "description": "Whether the user is politically exposed."
                          },
                          "immediate_family_exposed": {
                            "type": "boolean",
                            "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                          },
                          "context": {
                            "type": "array",
                            "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                            "nullable": true,
                            "items": {
                              "title": "DisclosureContextAnnotation",
                              "type": "object",
                              "properties": {
                                "context_type": {
                                  "type": "string",
                                  "enum": [
                                    "CONTROLLED_FIRM",
                                    "IMMEDIATE_FAMILY_EXPOSED",
                                    "AFFILIATE_FIRM"
                                  ],
                                  "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                                },
                                "company_name": {
                                  "type": "string",
                                  "description": "Required for FINRA affiliations and controlled firms."
                                },
                                "company_street_address": {
                                  "type": "string",
                                  "description": "Required for FINRA affiliations and controlled firms."
                                },
                                "company_city": {
                                  "type": "string",
                                  "description": "Required for FINRA affiliations and controlled firms."
                                },
                                "company_state": {
                                  "type": "string",
                                  "description": "Required if and only if `company_country` is `USA`."
                                },
                                "company_country": {
                                  "type": "string",
                                  "description": "Required for FINRA affiliations and controlled firms."
                                },
                                "company_compliance_email": {
                                  "type": "string",
                                  "description": "Required for FINRA affiliations and controlled firms."
                                },
                                "given_name": {
                                  "type": "string",
                                  "description": "Required for immediate family members of politically exposed persons."
                                },
                                "family_name": {
                                  "type": "string",
                                  "description": "Required for immediate family members of politically exposed persons."
                                }
                              },
                              "required": [
                                "context_type"
                              ],
                              "x-stoplight": {
                                "id": "rf62uwbtfdfpk"
                              }
                            }
                          }
                        },
                        "required": [
                          "is_control_person",
                          "is_affiliated_exchange_or_finra",
                          "is_politically_exposed",
                          "immediate_family_exposed"
                        ]
                      },
                      "documents": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "w22zyoy6wxhbd"
                        },
                        "items": {
                          "type": "array",
                          "minItems": 1,
                          "uniqueItems": true,
                          "x-examples": {
                            "example": [
                              {
                                "document_id": "b792e8ae-2cb4-4209-85b9-32be4c2fcdd6",
                                "document_type": "account_statement",
                                "document_date": "2019-08-24"
                              }
                            ]
                          },
                          "x-stoplight": {
                            "id": "qlhjbktu0o14c"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "document_id": {
                                "type": "string",
                                "minLength": 1,
                                "format": "uuid",
                                "description": "ID of the Document"
                              },
                              "document_type": {
                                "type": "string",
                                "enum": [
                                  "identity_verification",
                                  "address_verification",
                                  "date_of_birth_verification",
                                  "tax_id_verification",
                                  "account_approval_letter",
                                  "cip_result",
                                  "w8ben",
                                  "w9",
                                  "limited_trading_authorization"
                                ],
                                "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                                "example": "identity_verification",
                                "x-stoplight": {
                                  "id": "8u8j8gn6uuzk8"
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "2dxllw6r8po62"
                                },
                                "format": "date-time"
                              },
                              "mime_type": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "38y7l8mk02mtt"
                                },
                                "description": "The format of content encoded by the string"
                              },
                              "content": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "o696aus9wb91b"
                                },
                                "description": "Base64 string representing the document"
                              },
                              "document_sub_type": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "xzxw5qb7hnt3r"
                                },
                                "description": "The specific type of document, e.g. passport"
                              }
                            },
                            "required": [
                              "document_id",
                              "document_type"
                            ]
                          }
                        }
                      },
                      "agreements": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "6igg6t87mkteb"
                        },
                        "items": {
                          "type": "object",
                          "x-stoplight": {
                            "id": "ucn8nh8ei4mag"
                          },
                          "properties": {
                            "agreement": {
                              "type": "string",
                              "title": "AgreementType",
                              "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                              "enum": [
                                "margin_agreement",
                                "account_agreement",
                                "customer_agreement",
                                "crypto_agreement"
                              ],
                              "example": "customer_agreement",
                              "x-stoplight": {
                                "id": "pw9nog92a1hgz"
                              }
                            },
                            "signed_at": {
                              "type": "string",
                              "example": "2019-09-11T18:09:33Z",
                              "format": "date-time",
                              "description": "The timestamp the agreement was signed."
                            },
                            "ip_address": {
                              "type": "string",
                              "format": "ipv4",
                              "example": "185.13.21.99",
                              "description": "The ip_address the signed agreements were sent from by the user."
                            },
                            "revision": {
                              "type": "string",
                              "description": "The revision date if agreement is a revision."
                            }
                          },
                          "required": [
                            "agreement",
                            "signed_at",
                            "ip_address"
                          ]
                        }
                      },
                      "trusted_contact": {
                        "type": "object",
                        "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                        "properties": {
                          "given_name": {
                            "type": "string",
                            "example": "Jane"
                          },
                          "family_name": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "email_address": {
                            "type": "string",
                            "format": "email",
                            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                            "example": "jane.doe@example.com"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                          },
                          "street_address": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                          },
                          "city": {
                            "type": "string",
                            "description": "required if `street_address` is set\n"
                          },
                          "state": {
                            "type": "string",
                            "description": "required if `street_address` is set\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "description": "required if `street_address` is set\n"
                          },
                          "country": {
                            "type": "string",
                            "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                          }
                        },
                        "required": [
                          "given_name",
                          "family_name"
                        ],
                        "example": {
                          "given_name": "Jane",
                          "family_name": "Doe",
                          "email_address": "jane.doe@example.com"
                        },
                        "x-stoplight": {
                          "id": "fyme2rvoeickd"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "account_number",
                      "status",
                      "currency",
                      "created_at",
                      "last_equity"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getAllAccounts",
        "description": "Retrieves all accounts found by the query'"
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create an Account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "AccountCreationRequest",
                "description": "Represents the fields required to create a new account",
                "x-stoplight": {
                  "id": "p68vho6vi55ul"
                },
                "properties": {
                  "contact": {
                    "type": "object",
                    "description": "Contact is the model for the account owner contact information.\n",
                    "x-stoplight": {
                      "id": "qcig9irpj9334"
                    },
                    "properties": {
                      "email_address": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "+15556667788",
                        "description": "Phone number should include the country code, format: “+15555555555”"
                      },
                      "street_address": {
                        "type": "array",
                        "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                        "items": {
                          "type": "string",
                          "example": "20 N San Mateo Dr",
                          "x-stoplight": {
                            "id": "10wajx98hc79a"
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "yybrq2o2nb5gy"
                        },
                        "description": "The specific apartment number if applicable"
                      },
                      "city": {
                        "type": "string",
                        "example": "San Mateo"
                      },
                      "state": {
                        "type": "string",
                        "example": "CA",
                        "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                      },
                      "postal_code": {
                        "type": "string",
                        "example": "94401"
                      }
                    },
                    "required": [
                      "email_address",
                      "phone_number",
                      "street_address"
                    ]
                  },
                  "identity": {
                    "type": "object",
                    "description": "Identity is the model to provide account owner’s identity information.\n",
                    "example": {
                      "given_name": "John",
                      "family_name": "Doe",
                      "date_of_birth": "1990-01-01",
                      "tax_id": "666-55-4321",
                      "tax_id_type": "USA_SSN",
                      "country_of_citizenship": "AUS",
                      "country_of_birth": "AUS",
                      "country_of_tax_residence": "USA",
                      "funding_source": [
                        "employment_income"
                      ]
                    },
                    "x-stoplight": {
                      "id": "oi43k8rpw570e"
                    },
                    "properties": {
                      "given_name": {
                        "type": "string",
                        "example": "John",
                        "description": "The first/given name of the user."
                      },
                      "family_name": {
                        "type": "string",
                        "example": "Doe",
                        "description": "The last name (surname) of the user."
                      },
                      "middle_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "p03brcsyyjbcq"
                        },
                        "description": "The middle name of the user."
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01",
                        "description": "The date of birth in \"YYYY-MM-DD\" format."
                      },
                      "tax_id": {
                        "type": "string",
                        "example": "666-55-4321",
                        "description": "Required if tax_id_type is set."
                      },
                      "tax_id_type": {
                        "type": "string",
                        "title": "TaxIdType",
                        "enum": [
                          "USA_SSN",
                          "ARG_AG_CUIT",
                          "AUS_TFN",
                          "AUS_ABN",
                          "BOL_NIT",
                          "BRA_CPF",
                          "CHL_RUT",
                          "COL_NIT",
                          "CRI_NITE",
                          "DEU_TAX_ID",
                          "DOM_RNC",
                          "ECU_RUC",
                          "FRA_SPI",
                          "GBR_UTR",
                          "GBR_NINO",
                          "GTM_NIT",
                          "HND_RTN",
                          "HUN_TIN",
                          "IDN_KTP",
                          "IND_PAN",
                          "ISR_TAX_ID",
                          "ITA_TAX_ID",
                          "JPN_TAX_ID",
                          "MEX_RFC",
                          "NIC_RUC",
                          "NLD_TIN",
                          "PAN_RUC",
                          "PER_RUC",
                          "PRY_RUC",
                          "SGP_NRIC",
                          "SGP_FIN",
                          "SGP_ASGD",
                          "SGP_ITR",
                          "SLV_NIT",
                          "SWE_TAX_ID",
                          "URY_RUT",
                          "VEN_RIF",
                          "NATIONAL_ID",
                          "PASSPORT",
                          "PERMANENT_RESIDENT",
                          "DRIVER_LICENSE",
                          "OTHER_GOV_ID",
                          "NOT_SPECIFIED"
                        ],
                        "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                        "example": "USA_SSN",
                        "x-stoplight": {
                          "id": "ulm45kpr2peox"
                        }
                      },
                      "country_of_citizenship": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "country_of_birth": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "country_of_tax_residence": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "funding_source": {
                        "type": "array",
                        "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                        "items": {
                          "type": "string",
                          "enum": [
                            "employment_income",
                            "investments",
                            "inheritance",
                            "business_income",
                            "savings",
                            "family"
                          ]
                        }
                      },
                      "annual_income_min": {
                        "type": "number",
                        "description": "The lower bound of the user's annual income."
                      },
                      "annual_income_max": {
                        "type": "number",
                        "description": "The upper bound of the user's annual income."
                      },
                      "liquid_net_worth_min": {
                        "type": "number",
                        "description": "The lower bound of the user's liquid net worth."
                      },
                      "liquid_net_worth_max": {
                        "type": "number",
                        "description": "The upper bound of the user's liquid net worth."
                      },
                      "total_net_worth_min": {
                        "type": "number",
                        "description": "The lower bound of the user's total net worth."
                      },
                      "total_net_worth_max": {
                        "type": "number",
                        "description": "The upper bound of the user's total net worth."
                      },
                      "visa_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "y5a5r7inu02w8"
                        },
                        "description": "Only used to collect visa types for users residing in the USA."
                      },
                      "visa_expiration_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "q7b33k53b5alk"
                        },
                        "description": "Required if `visa_type` is set.",
                        "format": "date"
                      },
                      "date_of_departure_from_usa": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "yasik2wcmshea"
                        },
                        "format": "date",
                        "description": "Required if `visa_type` = B1 or B2"
                      },
                      "permanent_resident": {
                        "type": "boolean",
                        "x-stoplight": {
                          "id": "jlvzbu3cevmju"
                        },
                        "description": "Only used to collect permanent residence status in the USA."
                      },
                      "extra": {
                        "type": "object",
                        "description": "Any additional information used for KYC purposes\n"
                      }
                    },
                    "required": [
                      "given_name",
                      "family_name",
                      "date_of_birth",
                      "tax_id_type",
                      "country_of_tax_residence",
                      "funding_source"
                    ]
                  },
                  "disclosures": {
                    "type": "object",
                    "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                    "example": {
                      "is_control_person": false,
                      "is_affiliated_exchange_or_finra": false,
                      "is_politically_exposed": false,
                      "immediate_family_exposed": false
                    },
                    "x-stoplight": {
                      "id": "h3ui3575tdh6q"
                    },
                    "properties": {
                      "employment_status": {
                        "type": "string",
                        "enum": [
                          "unemployed",
                          "employed",
                          "student",
                          "retired"
                        ],
                        "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                      },
                      "employer_name": {
                        "type": "string",
                        "description": "The name of the employer if the user is employed."
                      },
                      "employer_address": {
                        "type": "string",
                        "description": "The employer's address if the user is employed."
                      },
                      "employment_position": {
                        "type": "string",
                        "description": "The user's position if they are employed."
                      },
                      "is_control_person": {
                        "type": "boolean",
                        "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                      },
                      "is_affiliated_exchange_or_finra": {
                        "type": "boolean",
                        "description": "Whether user is affiliated with any exchanges or FINRA."
                      },
                      "is_politically_exposed": {
                        "type": "boolean",
                        "description": "Whether the user is politically exposed."
                      },
                      "immediate_family_exposed": {
                        "type": "boolean",
                        "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                      },
                      "context": {
                        "type": "array",
                        "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                        "nullable": true,
                        "items": {
                          "title": "DisclosureContextAnnotation",
                          "type": "object",
                          "properties": {
                            "context_type": {
                              "type": "string",
                              "enum": [
                                "CONTROLLED_FIRM",
                                "IMMEDIATE_FAMILY_EXPOSED",
                                "AFFILIATE_FIRM"
                              ],
                              "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                            },
                            "company_name": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_street_address": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_city": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_state": {
                              "type": "string",
                              "description": "Required if and only if `company_country` is `USA`."
                            },
                            "company_country": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_compliance_email": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "given_name": {
                              "type": "string",
                              "description": "Required for immediate family members of politically exposed persons."
                            },
                            "family_name": {
                              "type": "string",
                              "description": "Required for immediate family members of politically exposed persons."
                            }
                          },
                          "required": [
                            "context_type"
                          ],
                          "x-stoplight": {
                            "id": "rf62uwbtfdfpk"
                          }
                        }
                      }
                    },
                    "required": [
                      "is_control_person",
                      "is_affiliated_exchange_or_finra",
                      "is_politically_exposed",
                      "immediate_family_exposed"
                    ]
                  },
                  "agreements": {
                    "type": "array",
                    "description": "The client has to present the Alpaca Account and Margin Agreements to the end user, and have them read full sentences.",
                    "items": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "ucn8nh8ei4mag"
                      },
                      "properties": {
                        "agreement": {
                          "type": "string",
                          "title": "AgreementType",
                          "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                          "enum": [
                            "margin_agreement",
                            "account_agreement",
                            "customer_agreement",
                            "crypto_agreement"
                          ],
                          "example": "customer_agreement",
                          "x-stoplight": {
                            "id": "pw9nog92a1hgz"
                          }
                        },
                        "signed_at": {
                          "type": "string",
                          "example": "2019-09-11T18:09:33Z",
                          "format": "date-time",
                          "description": "The timestamp the agreement was signed."
                        },
                        "ip_address": {
                          "type": "string",
                          "format": "ipv4",
                          "example": "185.13.21.99",
                          "description": "The ip_address the signed agreements were sent from by the user."
                        },
                        "revision": {
                          "type": "string",
                          "description": "The revision date if agreement is a revision."
                        }
                      },
                      "required": [
                        "agreement",
                        "signed_at",
                        "ip_address"
                      ]
                    }
                  },
                  "documents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "If an account has to replace documents after the submission, it has to use\nthe Document model instead of DocumentUploadRequest.\n",
                      "example": {
                        "document_type": "identity_verification",
                        "document_sub_type": "passport",
                        "content": "/9j/Cg==",
                        "mime_type": "image/jpeg"
                      },
                      "title": "DocumentUploadRequest",
                      "x-examples": {
                        "example-1": {
                          "document_type": "identity_verification",
                          "document_sub_type": "passport",
                          "content": "/9j/Cg==",
                          "mime_type": "image/jpeg"
                        }
                      },
                      "x-stoplight": {
                        "id": "s4kbyizjyxroo"
                      },
                      "properties": {
                        "document_type": {
                          "type": "string",
                          "enum": [
                            "identity_verification",
                            "address_verification",
                            "date_of_birth_verification",
                            "tax_id_verification",
                            "account_approval_letter",
                            "cip_result",
                            "w8ben",
                            "w9",
                            "limited_trading_authorization"
                          ],
                          "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                          "example": "identity_verification",
                          "x-stoplight": {
                            "id": "8u8j8gn6uuzk8"
                          }
                        },
                        "document_sub_type": {
                          "type": "string",
                          "example": "passport",
                          "description": "The specific type of document, e.g. passport"
                        },
                        "content": {
                          "type": "string",
                          "format": "base64",
                          "example": "/9j/Cg==",
                          "description": "Base64 string representing the document"
                        },
                        "content_data": {
                          "type": "object",
                          "x-examples": {
                            "Example 1": {
                              "additional_conditions": "None",
                              "country_citizen": "Australia",
                              "date": "2021-06-14",
                              "date_of_birth": "1970-01-01",
                              "foreign_tax_id": "123 456 789",
                              "ftin_not_required": false,
                              "full_name": "John Doe",
                              "ip_address": "127.0.0.1",
                              "mailing_address_city_state": "Adelaide, South Australia",
                              "mailing_address_country": "Australia",
                              "mailing_address_street": "51 Main St",
                              "paragraph_number": "15",
                              "percent_rate_withholding": 5,
                              "permanent_address_city_state": "Adelaide, South Australia",
                              "permanent_address_country": "Australia",
                              "permanent_address_street": "20 Main St",
                              "reference_number": "abc123",
                              "residency": "Australia",
                              "revision": "10-2021",
                              "tax_id_ssn": "123-00-456",
                              "timestamp": "2021-06-14T09:31:05Z",
                              "income_type": "interest",
                              "signer_full_name": "Mr. Signing User"
                            }
                          },
                          "description": "W-8BEN documents model.",
                          "properties": {
                            "additional_conditions": {
                              "type": "string",
                              "description": "Any additional conditions to specify"
                            },
                            "country_citizen": {
                              "type": "string",
                              "description": "The country that the applicant is a citizen of"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "date signed"
                            },
                            "date_of_birth": {
                              "type": "string",
                              "format": "date",
                              "description": "date of birth of applicant"
                            },
                            "foreign_tax_id": {
                              "type": "string",
                              "description": "Applicant's tax id in their home country"
                            },
                            "ftin_not_required": {
                              "type": "boolean",
                              "description": "Required if foreign_tax_id and tax_id_ssn are empty."
                            },
                            "full_name": {
                              "type": "string",
                              "description": "Full name of applicant"
                            },
                            "ip_address": {
                              "type": "string",
                              "description": "IP address of applicant when signed"
                            },
                            "mailing_address_city_state": {
                              "type": "string",
                              "description": "Mailing city/state of applicant"
                            },
                            "mailing_address_country": {
                              "type": "string",
                              "description": "Mailing country for applicant"
                            },
                            "mailing_address_street": {
                              "type": "string",
                              "description": "Mailing street address for applicant"
                            },
                            "paragraph_number": {
                              "type": "string"
                            },
                            "percent_rate_withholding": {
                              "type": "integer"
                            },
                            "permanent_address_city_state": {
                              "type": "string",
                              "description": "Permanent city/state of applicant"
                            },
                            "permanent_address_country": {
                              "type": "string",
                              "description": "Permanent country of residence of applicant"
                            },
                            "permanent_address_street": {
                              "type": "string",
                              "description": "Permanent street address of applicant"
                            },
                            "reference_number": {
                              "type": "string"
                            },
                            "residency": {
                              "type": "string",
                              "description": "Country of residency of applicant"
                            },
                            "revision": {
                              "type": "string",
                              "description": "Revision of the W8BEN form"
                            },
                            "tax_id_ssn": {
                              "type": "string",
                              "description": "TaxID/SSN of applicant"
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "time",
                              "description": "Timestamp when form data was gathered"
                            },
                            "income_type": {
                              "type": "string",
                              "description": "Income type of applicant"
                            },
                            "signer_full_name": {
                              "type": "string",
                              "description": "Full name of signing user"
                            }
                          },
                          "required": [
                            "country_citizen",
                            "date",
                            "date_of_birth",
                            "full_name",
                            "ip_address",
                            "permanent_address_city_state",
                            "permanent_address_country",
                            "permanent_address_street",
                            "revision",
                            "timestamp",
                            "signer_full_name"
                          ],
                          "x-stoplight": {
                            "id": "8cjul4ni6pe66"
                          }
                        },
                        "mime_type": {
                          "type": "string",
                          "example": "image/jpeg",
                          "description": "This field is Required if content is specified. ENUM: application/pdf, image/png, or image/jpeg. If document_type is w8ben then application/json is also accepted"
                        }
                      },
                      "required": [
                        "document_type",
                        "content"
                      ]
                    }
                  },
                  "trusted_contact": {
                    "type": "object",
                    "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                    "properties": {
                      "given_name": {
                        "type": "string",
                        "example": "Jane"
                      },
                      "family_name": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "email_address": {
                        "type": "string",
                        "format": "email",
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                        "example": "jane.doe@example.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                      },
                      "street_address": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                      },
                      "city": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "state": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "country": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                      }
                    },
                    "required": [
                      "given_name",
                      "family_name"
                    ],
                    "example": {
                      "given_name": "Jane",
                      "family_name": "Doe",
                      "email_address": "jane.doe@example.com"
                    },
                    "x-stoplight": {
                      "id": "fyme2rvoeickd"
                    }
                  },
                  "enabled_assets": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "1hhandeyv69or"
                    },
                    "description": "Will default to `us_equity`. Alpaca has the ability to update the default value upon request.",
                    "items": {
                      "type": "string",
                      "enum": [
                        "us_equity",
                        "crypto"
                      ],
                      "x-stoplight": {
                        "id": "0stvwzkbv2e0u"
                      }
                    }
                  }
                },
                "required": [
                  "contact",
                  "identity",
                  "disclosures",
                  "agreements"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Represents high level account info. Used when returning entire account information would not be useful like the getAllAccounts operation",
                  "x-examples": {
                    "example-1": {
                      "id": "0d18ae51-3c94-4511-b209-101e1666416b",
                      "account_number": "9034005019",
                      "status": "APPROVED",
                      "currency": "USD",
                      "created_at": "2019-09-30T23:55:31.185998Z",
                      "last_equity": "1500.65"
                    }
                  },
                  "x-stoplight": {
                    "id": "mg5a9g65p0k72"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID that identifies the account for later reference"
                    },
                    "account_number": {
                      "type": "string",
                      "description": "A human-readable account number that can be shown to the end user",
                      "nullable": true
                    },
                    "account_type": {
                      "type": "string",
                      "title": "AccountType",
                      "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
                      "enum": [
                        "trading",
                        "custodial",
                        "donor_advised"
                      ],
                      "example": "trading",
                      "x-stoplight": {
                        "id": "l6z0ingxys2ei"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "crypto_status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "currency": {
                      "title": "Currency",
                      "x-stoplight": {
                        "id": "go8dbrpz277wf"
                      },
                      "type": "string",
                      "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp (RFC3339) of account creation."
                    },
                    "last_equity": {
                      "type": "string",
                      "format": "decimal",
                      "description": "EOD equity calculation (cash + long market value + short market value)"
                    },
                    "enabled_assets": {
                      "x-stoplight": {
                        "id": "44f1cfyta748h"
                      },
                      "type": "array",
                      "description": "Assets the user has enabled and is able to trade once status and/or crypto_status are ACTIVE",
                      "items": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      }
                    },
                    "contact": {
                      "type": "object",
                      "description": "Contact is the model for the account owner contact information.\n",
                      "x-stoplight": {
                        "id": "qcig9irpj9334"
                      },
                      "properties": {
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "example": "john.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "example": "+15556667788",
                          "description": "Phone number should include the country code, format: “+15555555555”"
                        },
                        "street_address": {
                          "type": "array",
                          "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                          "items": {
                            "type": "string",
                            "example": "20 N San Mateo Dr",
                            "x-stoplight": {
                              "id": "10wajx98hc79a"
                            }
                          }
                        },
                        "unit": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yybrq2o2nb5gy"
                          },
                          "description": "The specific apartment number if applicable"
                        },
                        "city": {
                          "type": "string",
                          "example": "San Mateo"
                        },
                        "state": {
                          "type": "string",
                          "example": "CA",
                          "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "94401"
                        }
                      },
                      "required": [
                        "email_address",
                        "phone_number",
                        "street_address"
                      ]
                    },
                    "identity": {
                      "type": "object",
                      "description": "Identity is the model to provide account owner’s identity information.\n",
                      "example": {
                        "given_name": "John",
                        "family_name": "Doe",
                        "date_of_birth": "1990-01-01",
                        "tax_id": "666-55-4321",
                        "tax_id_type": "USA_SSN",
                        "country_of_citizenship": "AUS",
                        "country_of_birth": "AUS",
                        "country_of_tax_residence": "USA",
                        "funding_source": [
                          "employment_income"
                        ]
                      },
                      "x-stoplight": {
                        "id": "oi43k8rpw570e"
                      },
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "John",
                          "description": "The first/given name of the user."
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe",
                          "description": "The last name (surname) of the user."
                        },
                        "middle_name": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "p03brcsyyjbcq"
                          },
                          "description": "The middle name of the user."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01",
                          "description": "The date of birth in \"YYYY-MM-DD\" format."
                        },
                        "tax_id": {
                          "type": "string",
                          "example": "666-55-4321",
                          "description": "Required if tax_id_type is set."
                        },
                        "tax_id_type": {
                          "type": "string",
                          "title": "TaxIdType",
                          "enum": [
                            "USA_SSN",
                            "ARG_AG_CUIT",
                            "AUS_TFN",
                            "AUS_ABN",
                            "BOL_NIT",
                            "BRA_CPF",
                            "CHL_RUT",
                            "COL_NIT",
                            "CRI_NITE",
                            "DEU_TAX_ID",
                            "DOM_RNC",
                            "ECU_RUC",
                            "FRA_SPI",
                            "GBR_UTR",
                            "GBR_NINO",
                            "GTM_NIT",
                            "HND_RTN",
                            "HUN_TIN",
                            "IDN_KTP",
                            "IND_PAN",
                            "ISR_TAX_ID",
                            "ITA_TAX_ID",
                            "JPN_TAX_ID",
                            "MEX_RFC",
                            "NIC_RUC",
                            "NLD_TIN",
                            "PAN_RUC",
                            "PER_RUC",
                            "PRY_RUC",
                            "SGP_NRIC",
                            "SGP_FIN",
                            "SGP_ASGD",
                            "SGP_ITR",
                            "SLV_NIT",
                            "SWE_TAX_ID",
                            "URY_RUT",
                            "VEN_RIF",
                            "NATIONAL_ID",
                            "PASSPORT",
                            "PERMANENT_RESIDENT",
                            "DRIVER_LICENSE",
                            "OTHER_GOV_ID",
                            "NOT_SPECIFIED"
                          ],
                          "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                          "example": "USA_SSN",
                          "x-stoplight": {
                            "id": "ulm45kpr2peox"
                          }
                        },
                        "country_of_citizenship": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_birth": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_tax_residence": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "funding_source": {
                          "type": "array",
                          "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                          "items": {
                            "type": "string",
                            "enum": [
                              "employment_income",
                              "investments",
                              "inheritance",
                              "business_income",
                              "savings",
                              "family"
                            ]
                          }
                        },
                        "annual_income_min": {
                          "type": "number",
                          "description": "The lower bound of the user's annual income."
                        },
                        "annual_income_max": {
                          "type": "number",
                          "description": "The upper bound of the user's annual income."
                        },
                        "liquid_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's liquid net worth."
                        },
                        "liquid_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's liquid net worth."
                        },
                        "total_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's total net worth."
                        },
                        "total_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's total net worth."
                        },
                        "visa_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "y5a5r7inu02w8"
                          },
                          "description": "Only used to collect visa types for users residing in the USA."
                        },
                        "visa_expiration_date": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "q7b33k53b5alk"
                          },
                          "description": "Required if `visa_type` is set.",
                          "format": "date"
                        },
                        "date_of_departure_from_usa": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yasik2wcmshea"
                          },
                          "format": "date",
                          "description": "Required if `visa_type` = B1 or B2"
                        },
                        "permanent_resident": {
                          "type": "boolean",
                          "x-stoplight": {
                            "id": "jlvzbu3cevmju"
                          },
                          "description": "Only used to collect permanent residence status in the USA."
                        },
                        "extra": {
                          "type": "object",
                          "description": "Any additional information used for KYC purposes\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name",
                        "date_of_birth",
                        "tax_id_type",
                        "country_of_tax_residence",
                        "funding_source"
                      ]
                    },
                    "disclosures": {
                      "type": "object",
                      "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                      "example": {
                        "is_control_person": false,
                        "is_affiliated_exchange_or_finra": false,
                        "is_politically_exposed": false,
                        "immediate_family_exposed": false
                      },
                      "x-stoplight": {
                        "id": "h3ui3575tdh6q"
                      },
                      "properties": {
                        "employment_status": {
                          "type": "string",
                          "enum": [
                            "unemployed",
                            "employed",
                            "student",
                            "retired"
                          ],
                          "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                        },
                        "employer_name": {
                          "type": "string",
                          "description": "The name of the employer if the user is employed."
                        },
                        "employer_address": {
                          "type": "string",
                          "description": "The employer's address if the user is employed."
                        },
                        "employment_position": {
                          "type": "string",
                          "description": "The user's position if they are employed."
                        },
                        "is_control_person": {
                          "type": "boolean",
                          "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                        },
                        "is_affiliated_exchange_or_finra": {
                          "type": "boolean",
                          "description": "Whether user is affiliated with any exchanges or FINRA."
                        },
                        "is_politically_exposed": {
                          "type": "boolean",
                          "description": "Whether the user is politically exposed."
                        },
                        "immediate_family_exposed": {
                          "type": "boolean",
                          "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                        },
                        "context": {
                          "type": "array",
                          "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                          "nullable": true,
                          "items": {
                            "title": "DisclosureContextAnnotation",
                            "type": "object",
                            "properties": {
                              "context_type": {
                                "type": "string",
                                "enum": [
                                  "CONTROLLED_FIRM",
                                  "IMMEDIATE_FAMILY_EXPOSED",
                                  "AFFILIATE_FIRM"
                                ],
                                "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                              },
                              "company_name": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_street_address": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_city": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_state": {
                                "type": "string",
                                "description": "Required if and only if `company_country` is `USA`."
                              },
                              "company_country": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_compliance_email": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "given_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              },
                              "family_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              }
                            },
                            "required": [
                              "context_type"
                            ],
                            "x-stoplight": {
                              "id": "rf62uwbtfdfpk"
                            }
                          }
                        }
                      },
                      "required": [
                        "is_control_person",
                        "is_affiliated_exchange_or_finra",
                        "is_politically_exposed",
                        "immediate_family_exposed"
                      ]
                    },
                    "documents": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "w22zyoy6wxhbd"
                      },
                      "items": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "x-examples": {
                          "example": [
                            {
                              "document_id": "b792e8ae-2cb4-4209-85b9-32be4c2fcdd6",
                              "document_type": "account_statement",
                              "document_date": "2019-08-24"
                            }
                          ]
                        },
                        "x-stoplight": {
                          "id": "qlhjbktu0o14c"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "string",
                              "minLength": 1,
                              "format": "uuid",
                              "description": "ID of the Document"
                            },
                            "document_type": {
                              "type": "string",
                              "enum": [
                                "identity_verification",
                                "address_verification",
                                "date_of_birth_verification",
                                "tax_id_verification",
                                "account_approval_letter",
                                "cip_result",
                                "w8ben",
                                "w9",
                                "limited_trading_authorization"
                              ],
                              "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                              "example": "identity_verification",
                              "x-stoplight": {
                                "id": "8u8j8gn6uuzk8"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "2dxllw6r8po62"
                              },
                              "format": "date-time"
                            },
                            "mime_type": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "38y7l8mk02mtt"
                              },
                              "description": "The format of content encoded by the string"
                            },
                            "content": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "o696aus9wb91b"
                              },
                              "description": "Base64 string representing the document"
                            },
                            "document_sub_type": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "xzxw5qb7hnt3r"
                              },
                              "description": "The specific type of document, e.g. passport"
                            }
                          },
                          "required": [
                            "document_id",
                            "document_type"
                          ]
                        }
                      }
                    },
                    "agreements": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "6igg6t87mkteb"
                      },
                      "items": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "ucn8nh8ei4mag"
                        },
                        "properties": {
                          "agreement": {
                            "type": "string",
                            "title": "AgreementType",
                            "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                            "enum": [
                              "margin_agreement",
                              "account_agreement",
                              "customer_agreement",
                              "crypto_agreement"
                            ],
                            "example": "customer_agreement",
                            "x-stoplight": {
                              "id": "pw9nog92a1hgz"
                            }
                          },
                          "signed_at": {
                            "type": "string",
                            "example": "2019-09-11T18:09:33Z",
                            "format": "date-time",
                            "description": "The timestamp the agreement was signed."
                          },
                          "ip_address": {
                            "type": "string",
                            "format": "ipv4",
                            "example": "185.13.21.99",
                            "description": "The ip_address the signed agreements were sent from by the user."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The revision date if agreement is a revision."
                          }
                        },
                        "required": [
                          "agreement",
                          "signed_at",
                          "ip_address"
                        ]
                      }
                    },
                    "trusted_contact": {
                      "type": "object",
                      "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "Jane"
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                          "example": "jane.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "street_address": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "city": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "state": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "country": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name"
                      ],
                      "example": {
                        "given_name": "Jane",
                        "family_name": "Doe",
                        "email_address": "jane.doe@example.com"
                      },
                      "x-stoplight": {
                        "id": "fyme2rvoeickd"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "account_number",
                    "status",
                    "currency",
                    "created_at",
                    "last_equity"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The post body is not well formed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "There is already an existing account registered with the same email address."
          },
          "422": {
            "description": "One of the input values is not a valid value.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "createAccount",
        "description": "Submit an account application with KYC information. This will create a trading account for the end user. The account status may or may not be ACTIVE immediately and you will receive account status updates on the event API. "
      }
    },
    "/v1/accounts/{account_id}": {
      "get": {
        "summary": "Get An Account by ID",
        "tags": [
          "Accounts"
        ],
        "description": "You can query a specific account that you submitted to Alpaca by passing into the query the account_id associated with the account you’re retrieving.\n",
        "responses": {
          "200": {
            "description": "Will return an AccountExtended if an account with account_id exists, otherwise will throw an error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Represents an account with all data available. If your api response is missing some of these fields, there is a good chance you are using a route that returns `Account` instances instead of these.",
                  "x-examples": {
                    "example-1": {
                      "id": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "account_number": "601842165",
                      "status": "ACTIVE",
                      "crypto_status": "INACTIVE",
                      "currency": "USD",
                      "last_equity": "40645.13",
                      "created_at": "2022-01-21T21:25:26.583576Z",
                      "contact": {
                        "email_address": "strange_elbakyan_97324509@example.com",
                        "phone_number": "614-555-0697",
                        "street_address": [
                          "20 N San Mateo Dr"
                        ],
                        "city": "San Mateo",
                        "state": "CA",
                        "postal_code": "94401"
                      },
                      "identity": {
                        "given_name": "Strange",
                        "family_name": "Elbakyan",
                        "date_of_birth": "1970-01-01",
                        "tax_id_type": "USA_SNN",
                        "country_of_citizenship": "USA",
                        "country_of_birth": "USA",
                        "country_of_tax_residence": "USA",
                        "funding_source": [
                          "employment_income"
                        ],
                        "visa_type": null,
                        "visa_expiration_date": null,
                        "date_of_departure_from_usa": null,
                        "permanent_resident": null
                      },
                      "disclosures": {
                        "is_control_person": false,
                        "is_affiliated_exchange_or_finra": false,
                        "is_politically_exposed": false,
                        "immediate_family_exposed": false,
                        "is_discretionary": false
                      },
                      "agreements": [
                        {
                          "agreement": "margin_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        },
                        {
                          "agreement": "customer_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        },
                        {
                          "agreement": "account_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        }
                      ],
                      "documents": [
                        {
                          "document_type": "identity_verification",
                          "document_sub_type": "passport",
                          "id": "d5af1585-6c60-494d-9ea5-c5df62704229",
                          "content": "https://s3.amazonaws.com/stg.alpaca.markets/documents/accounts/3dcb795c-3ccc-402a-abb9-07e26a1b1326/2490f5d9-8988-4405-a3e0-d76e65de13c2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJLDF4SCWSL6HUQKA%2F20220210%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220210T162205Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=bc6cc0f541d569623f3973fb83734d7960a69886e8b175a9d472f666b87419f1",
                          "created_at": "2022-01-21T21:25:28.184231Z"
                        }
                      ],
                      "trusted_contact": {
                        "given_name": "Jane",
                        "family_name": "Doe",
                        "email_address": "strange_elbakyan_97324509@example.com"
                      },
                      "account_type": "trading",
                      "trading_configurations": null
                    }
                  },
                  "x-stoplight": {
                    "id": "oqrvgmjlw9nuj"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "account_number": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "crypto_status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "kyc_result": {
                      "type": "object",
                      "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
                      "x-stoplight": {
                        "id": "m6so9tt7secvm"
                      },
                      "properties": {
                        "reject": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "accept": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "indeterminate": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "addidional_information": {
                          "type": "string",
                          "description": "Used to display a custom message."
                        },
                        "summary": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "dfz7vejxhvxyk"
                          },
                          "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
                        }
                      }
                    },
                    "currency": {
                      "title": "Currency",
                      "x-stoplight": {
                        "id": "go8dbrpz277wf"
                      },
                      "type": "string",
                      "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                    },
                    "last_equity": {
                      "type": "string",
                      "format": "decimal"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "contact": {
                      "type": "object",
                      "description": "Contact is the model for the account owner contact information.\n",
                      "x-stoplight": {
                        "id": "qcig9irpj9334"
                      },
                      "properties": {
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "example": "john.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "example": "+15556667788",
                          "description": "Phone number should include the country code, format: “+15555555555”"
                        },
                        "street_address": {
                          "type": "array",
                          "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                          "items": {
                            "type": "string",
                            "example": "20 N San Mateo Dr",
                            "x-stoplight": {
                              "id": "10wajx98hc79a"
                            }
                          }
                        },
                        "unit": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yybrq2o2nb5gy"
                          },
                          "description": "The specific apartment number if applicable"
                        },
                        "city": {
                          "type": "string",
                          "example": "San Mateo"
                        },
                        "state": {
                          "type": "string",
                          "example": "CA",
                          "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "94401"
                        }
                      },
                      "required": [
                        "email_address",
                        "phone_number",
                        "street_address"
                      ]
                    },
                    "identity": {
                      "type": "object",
                      "description": "Identity is the model to provide account owner’s identity information.\n",
                      "example": {
                        "given_name": "John",
                        "family_name": "Doe",
                        "date_of_birth": "1990-01-01",
                        "tax_id": "666-55-4321",
                        "tax_id_type": "USA_SSN",
                        "country_of_citizenship": "AUS",
                        "country_of_birth": "AUS",
                        "country_of_tax_residence": "USA",
                        "funding_source": [
                          "employment_income"
                        ]
                      },
                      "x-stoplight": {
                        "id": "oi43k8rpw570e"
                      },
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "John",
                          "description": "The first/given name of the user."
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe",
                          "description": "The last name (surname) of the user."
                        },
                        "middle_name": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "p03brcsyyjbcq"
                          },
                          "description": "The middle name of the user."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01",
                          "description": "The date of birth in \"YYYY-MM-DD\" format."
                        },
                        "tax_id": {
                          "type": "string",
                          "example": "666-55-4321",
                          "description": "Required if tax_id_type is set."
                        },
                        "tax_id_type": {
                          "type": "string",
                          "title": "TaxIdType",
                          "enum": [
                            "USA_SSN",
                            "ARG_AG_CUIT",
                            "AUS_TFN",
                            "AUS_ABN",
                            "BOL_NIT",
                            "BRA_CPF",
                            "CHL_RUT",
                            "COL_NIT",
                            "CRI_NITE",
                            "DEU_TAX_ID",
                            "DOM_RNC",
                            "ECU_RUC",
                            "FRA_SPI",
                            "GBR_UTR",
                            "GBR_NINO",
                            "GTM_NIT",
                            "HND_RTN",
                            "HUN_TIN",
                            "IDN_KTP",
                            "IND_PAN",
                            "ISR_TAX_ID",
                            "ITA_TAX_ID",
                            "JPN_TAX_ID",
                            "MEX_RFC",
                            "NIC_RUC",
                            "NLD_TIN",
                            "PAN_RUC",
                            "PER_RUC",
                            "PRY_RUC",
                            "SGP_NRIC",
                            "SGP_FIN",
                            "SGP_ASGD",
                            "SGP_ITR",
                            "SLV_NIT",
                            "SWE_TAX_ID",
                            "URY_RUT",
                            "VEN_RIF",
                            "NATIONAL_ID",
                            "PASSPORT",
                            "PERMANENT_RESIDENT",
                            "DRIVER_LICENSE",
                            "OTHER_GOV_ID",
                            "NOT_SPECIFIED"
                          ],
                          "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                          "example": "USA_SSN",
                          "x-stoplight": {
                            "id": "ulm45kpr2peox"
                          }
                        },
                        "country_of_citizenship": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_birth": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_tax_residence": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "funding_source": {
                          "type": "array",
                          "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                          "items": {
                            "type": "string",
                            "enum": [
                              "employment_income",
                              "investments",
                              "inheritance",
                              "business_income",
                              "savings",
                              "family"
                            ]
                          }
                        },
                        "annual_income_min": {
                          "type": "number",
                          "description": "The lower bound of the user's annual income."
                        },
                        "annual_income_max": {
                          "type": "number",
                          "description": "The upper bound of the user's annual income."
                        },
                        "liquid_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's liquid net worth."
                        },
                        "liquid_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's liquid net worth."
                        },
                        "total_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's total net worth."
                        },
                        "total_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's total net worth."
                        },
                        "visa_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "y5a5r7inu02w8"
                          },
                          "description": "Only used to collect visa types for users residing in the USA."
                        },
                        "visa_expiration_date": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "q7b33k53b5alk"
                          },
                          "description": "Required if `visa_type` is set.",
                          "format": "date"
                        },
                        "date_of_departure_from_usa": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yasik2wcmshea"
                          },
                          "format": "date",
                          "description": "Required if `visa_type` = B1 or B2"
                        },
                        "permanent_resident": {
                          "type": "boolean",
                          "x-stoplight": {
                            "id": "jlvzbu3cevmju"
                          },
                          "description": "Only used to collect permanent residence status in the USA."
                        },
                        "extra": {
                          "type": "object",
                          "description": "Any additional information used for KYC purposes\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name",
                        "date_of_birth",
                        "tax_id_type",
                        "country_of_tax_residence",
                        "funding_source"
                      ]
                    },
                    "disclosures": {
                      "type": "object",
                      "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                      "example": {
                        "is_control_person": false,
                        "is_affiliated_exchange_or_finra": false,
                        "is_politically_exposed": false,
                        "immediate_family_exposed": false
                      },
                      "x-stoplight": {
                        "id": "h3ui3575tdh6q"
                      },
                      "properties": {
                        "employment_status": {
                          "type": "string",
                          "enum": [
                            "unemployed",
                            "employed",
                            "student",
                            "retired"
                          ],
                          "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                        },
                        "employer_name": {
                          "type": "string",
                          "description": "The name of the employer if the user is employed."
                        },
                        "employer_address": {
                          "type": "string",
                          "description": "The employer's address if the user is employed."
                        },
                        "employment_position": {
                          "type": "string",
                          "description": "The user's position if they are employed."
                        },
                        "is_control_person": {
                          "type": "boolean",
                          "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                        },
                        "is_affiliated_exchange_or_finra": {
                          "type": "boolean",
                          "description": "Whether user is affiliated with any exchanges or FINRA."
                        },
                        "is_politically_exposed": {
                          "type": "boolean",
                          "description": "Whether the user is politically exposed."
                        },
                        "immediate_family_exposed": {
                          "type": "boolean",
                          "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                        },
                        "context": {
                          "type": "array",
                          "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                          "nullable": true,
                          "items": {
                            "title": "DisclosureContextAnnotation",
                            "type": "object",
                            "properties": {
                              "context_type": {
                                "type": "string",
                                "enum": [
                                  "CONTROLLED_FIRM",
                                  "IMMEDIATE_FAMILY_EXPOSED",
                                  "AFFILIATE_FIRM"
                                ],
                                "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                              },
                              "company_name": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_street_address": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_city": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_state": {
                                "type": "string",
                                "description": "Required if and only if `company_country` is `USA`."
                              },
                              "company_country": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_compliance_email": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "given_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              },
                              "family_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              }
                            },
                            "required": [
                              "context_type"
                            ],
                            "x-stoplight": {
                              "id": "rf62uwbtfdfpk"
                            }
                          }
                        }
                      },
                      "required": [
                        "is_control_person",
                        "is_affiliated_exchange_or_finra",
                        "is_politically_exposed",
                        "immediate_family_exposed"
                      ]
                    },
                    "agreements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "ucn8nh8ei4mag"
                        },
                        "properties": {
                          "agreement": {
                            "type": "string",
                            "title": "AgreementType",
                            "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                            "enum": [
                              "margin_agreement",
                              "account_agreement",
                              "customer_agreement",
                              "crypto_agreement"
                            ],
                            "example": "customer_agreement",
                            "x-stoplight": {
                              "id": "pw9nog92a1hgz"
                            }
                          },
                          "signed_at": {
                            "type": "string",
                            "example": "2019-09-11T18:09:33Z",
                            "format": "date-time",
                            "description": "The timestamp the agreement was signed."
                          },
                          "ip_address": {
                            "type": "string",
                            "format": "ipv4",
                            "example": "185.13.21.99",
                            "description": "The ip_address the signed agreements were sent from by the user."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The revision date if agreement is a revision."
                          }
                        },
                        "required": [
                          "agreement",
                          "signed_at",
                          "ip_address"
                        ]
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "If an account has documents on the application submission,\nit has the ApplicationDocument model in exchange with\nDocumentUpload.\n",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "document_type": {
                            "type": "string",
                            "enum": [
                              "identity_verification",
                              "address_verification",
                              "date_of_birth_verification",
                              "tax_id_verification",
                              "account_approval_letter",
                              "cip_result",
                              "w8ben",
                              "w9",
                              "limited_trading_authorization"
                            ],
                            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                            "example": "identity_verification",
                            "x-stoplight": {
                              "id": "8u8j8gn6uuzk8"
                            }
                          },
                          "document_sub_type": {
                            "type": "string"
                          },
                          "mime_type": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "document_type",
                          "created_at"
                        ],
                        "example": {
                          "id": "0d18ae51-3c94-4511-b209-101e1666416b",
                          "document_type": "identity_verification",
                          "document_sub_type": "passport",
                          "mime_type": "image/jpeg",
                          "created_at": "2019-09-30T23:55:31.185998Z"
                        },
                        "x-stoplight": {
                          "id": "8coz8owpbclc8"
                        }
                      }
                    },
                    "trusted_contact": {
                      "type": "object",
                      "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "Jane"
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                          "example": "jane.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "street_address": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "city": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "state": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "country": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name"
                      ],
                      "example": {
                        "given_name": "Jane",
                        "family_name": "Doe",
                        "email_address": "jane.doe@example.com"
                      },
                      "x-stoplight": {
                        "id": "fyme2rvoeickd"
                      }
                    },
                    "account_name": {
                      "type": "string"
                    },
                    "account_type": {
                      "type": "string",
                      "title": "AccountType",
                      "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
                      "enum": [
                        "trading",
                        "custodial",
                        "donor_advised"
                      ],
                      "example": "trading",
                      "x-stoplight": {
                        "id": "l6z0ingxys2ei"
                      }
                    },
                    "custodial_account_type": {
                      "title": "CustodialAccountType",
                      "x-stoplight": {
                        "id": "jltxs43lpjolf"
                      },
                      "type": "string",
                      "description": "**UTMA**\nCustodianTypeUTMA\n\n**UGMA**\nCustodianTypeUGMA"
                    },
                    "minor_identity": {
                      "description": "Represents Identity information for a minor that an account of type \"custodial\" is for",
                      "type": "object",
                      "x-examples": {},
                      "properties": {
                        "given_name": {
                          "type": "string"
                        },
                        "family_name": {
                          "type": "string"
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date"
                        },
                        "tax_id": {
                          "type": "string"
                        },
                        "tax_id_type": {
                          "type": "string",
                          "title": "TaxIdType",
                          "enum": [
                            "USA_SSN",
                            "ARG_AG_CUIT",
                            "AUS_TFN",
                            "AUS_ABN",
                            "BOL_NIT",
                            "BRA_CPF",
                            "CHL_RUT",
                            "COL_NIT",
                            "CRI_NITE",
                            "DEU_TAX_ID",
                            "DOM_RNC",
                            "ECU_RUC",
                            "FRA_SPI",
                            "GBR_UTR",
                            "GBR_NINO",
                            "GTM_NIT",
                            "HND_RTN",
                            "HUN_TIN",
                            "IDN_KTP",
                            "IND_PAN",
                            "ISR_TAX_ID",
                            "ITA_TAX_ID",
                            "JPN_TAX_ID",
                            "MEX_RFC",
                            "NIC_RUC",
                            "NLD_TIN",
                            "PAN_RUC",
                            "PER_RUC",
                            "PRY_RUC",
                            "SGP_NRIC",
                            "SGP_FIN",
                            "SGP_ASGD",
                            "SGP_ITR",
                            "SLV_NIT",
                            "SWE_TAX_ID",
                            "URY_RUT",
                            "VEN_RIF",
                            "NATIONAL_ID",
                            "PASSPORT",
                            "PERMANENT_RESIDENT",
                            "DRIVER_LICENSE",
                            "OTHER_GOV_ID",
                            "NOT_SPECIFIED"
                          ],
                          "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                          "example": "USA_SSN",
                          "x-stoplight": {
                            "id": "ulm45kpr2peox"
                          }
                        },
                        "country_of_citizenship": {
                          "type": "string"
                        },
                        "country_of_birth": {
                          "type": "string"
                        },
                        "country_of_tax_residence": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name",
                        "date_of_birth",
                        "country_of_tax_residence",
                        "state",
                        "email"
                      ],
                      "x-stoplight": {
                        "id": "0kzlygfs1ac1c"
                      }
                    },
                    "trading_configurations": {
                      "title": "AccountConfigurations",
                      "type": "object",
                      "description": "Represents additional configuration settings for an account",
                      "x-stoplight": {
                        "id": "rs80h7z1vg3or"
                      },
                      "properties": {
                        "dtbp_check": {
                          "type": "string",
                          "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
                          "example": "both",
                          "enum": [
                            "both",
                            "entry",
                            "exit"
                          ]
                        },
                        "trade_confirm_email": {
                          "type": "string",
                          "description": "all or none. If none, emails for order fills are not sent.",
                          "enum": [
                            "all",
                            "none"
                          ]
                        },
                        "suspend_trade": {
                          "type": "boolean",
                          "description": "If true, new orders are blocked."
                        },
                        "no_shorting": {
                          "type": "boolean",
                          "description": "If true, account becomes long-only mode."
                        },
                        "fractional_trading": {
                          "type": "boolean",
                          "description": "If true, account is able to participate in fractional trading"
                        },
                        "max_margin_multiplier": {
                          "type": "string",
                          "description": "Can be \"1\" or \"2\""
                        },
                        "pdt_check": {
                          "type": "string",
                          "example": "entry"
                        },
                        "ptp_no_exception_entry": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "b2q93748qni2e"
                          },
                          "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
                        }
                      },
                      "required": [
                        "dtbp_check",
                        "trade_confirm_email",
                        "suspend_trade",
                        "no_shorting",
                        "fractional_trading",
                        "max_margin_multiplier",
                        "pdt_check",
                        "ptp_no_exception_entry"
                      ]
                    },
                    "usd": {
                      "title": "USDBalances",
                      "x-stoplight": {
                        "id": "cqvonohea6r8x"
                      },
                      "type": "object",
                      "properties": {
                        "buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "regt_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "daytrading_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash_withdrawable": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash_transferable": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "pending_transfer_out": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "portfolio_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "equity": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "long_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "short_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "initial_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "maintenance_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_maintenance_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "sma": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_equity": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_long_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_short_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_cash": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_regt_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_daytrading_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "f178oif7i5e4d"
                          }
                        }
                      },
                      "description": "Account balances in USD."
                    },
                    "enabled_assets": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "2gxryctx56dih"
                      },
                      "items": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "account_number",
                    "status",
                    "currency",
                    "last_equity",
                    "created_at",
                    "account_type"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getAccount"
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "contact": {
                      "email_address": "john.doe@example.com",
                      "phone_number": "+15556667788",
                      "street_address": [
                        "20 N San Mateo Dr"
                      ],
                      "city": "San Mateo",
                      "state": "CA",
                      "postal_code": "94401"
                    },
                    "identity": {
                      "given_name": "John",
                      "family_name": "Doe",
                      "date_of_birth": "1990-01-01",
                      "tax_id": "666-55-4321",
                      "tax_id_type": "USA_SSN",
                      "country_of_citizenship": "AUS",
                      "country_of_birth": "AUS",
                      "country_of_tax_residence": "USA",
                      "funding_source": [
                        "employment_income"
                      ]
                    },
                    "disclosures": {
                      "is_control_person": false,
                      "is_affiliated_exchange_or_finra": false,
                      "is_politically_exposed": false,
                      "immediate_family_exposed": false
                    },
                    "trusted_contact": {
                      "given_name": "Jane",
                      "family_name": "Doe",
                      "email_address": "jane.doe@example.com"
                    }
                  }
                },
                "properties": {
                  "contact": {
                    "type": "object",
                    "description": "Contact is the model for the account owner contact information.\n",
                    "x-stoplight": {
                      "id": "qcig9irpj9334"
                    },
                    "properties": {
                      "email_address": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "+15556667788",
                        "description": "Phone number should include the country code, format: “+15555555555”"
                      },
                      "street_address": {
                        "type": "array",
                        "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                        "items": {
                          "type": "string",
                          "example": "20 N San Mateo Dr",
                          "x-stoplight": {
                            "id": "10wajx98hc79a"
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "yybrq2o2nb5gy"
                        },
                        "description": "The specific apartment number if applicable"
                      },
                      "city": {
                        "type": "string",
                        "example": "San Mateo"
                      },
                      "state": {
                        "type": "string",
                        "example": "CA",
                        "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                      },
                      "postal_code": {
                        "type": "string",
                        "example": "94401"
                      }
                    },
                    "required": [
                      "email_address",
                      "phone_number",
                      "street_address"
                    ]
                  },
                  "identity": {
                    "type": "object",
                    "description": "Identity is the model to provide account owner’s identity information.\n",
                    "example": {
                      "given_name": "John",
                      "family_name": "Doe",
                      "date_of_birth": "1990-01-01",
                      "tax_id": "666-55-4321",
                      "tax_id_type": "USA_SSN",
                      "country_of_citizenship": "AUS",
                      "country_of_birth": "AUS",
                      "country_of_tax_residence": "USA",
                      "funding_source": [
                        "employment_income"
                      ]
                    },
                    "x-stoplight": {
                      "id": "oi43k8rpw570e"
                    },
                    "properties": {
                      "given_name": {
                        "type": "string",
                        "example": "John",
                        "description": "The first/given name of the user."
                      },
                      "family_name": {
                        "type": "string",
                        "example": "Doe",
                        "description": "The last name (surname) of the user."
                      },
                      "middle_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "p03brcsyyjbcq"
                        },
                        "description": "The middle name of the user."
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01",
                        "description": "The date of birth in \"YYYY-MM-DD\" format."
                      },
                      "tax_id": {
                        "type": "string",
                        "example": "666-55-4321",
                        "description": "Required if tax_id_type is set."
                      },
                      "tax_id_type": {
                        "type": "string",
                        "title": "TaxIdType",
                        "enum": [
                          "USA_SSN",
                          "ARG_AG_CUIT",
                          "AUS_TFN",
                          "AUS_ABN",
                          "BOL_NIT",
                          "BRA_CPF",
                          "CHL_RUT",
                          "COL_NIT",
                          "CRI_NITE",
                          "DEU_TAX_ID",
                          "DOM_RNC",
                          "ECU_RUC",
                          "FRA_SPI",
                          "GBR_UTR",
                          "GBR_NINO",
                          "GTM_NIT",
                          "HND_RTN",
                          "HUN_TIN",
                          "IDN_KTP",
                          "IND_PAN",
                          "ISR_TAX_ID",
                          "ITA_TAX_ID",
                          "JPN_TAX_ID",
                          "MEX_RFC",
                          "NIC_RUC",
                          "NLD_TIN",
                          "PAN_RUC",
                          "PER_RUC",
                          "PRY_RUC",
                          "SGP_NRIC",
                          "SGP_FIN",
                          "SGP_ASGD",
                          "SGP_ITR",
                          "SLV_NIT",
                          "SWE_TAX_ID",
                          "URY_RUT",
                          "VEN_RIF",
                          "NATIONAL_ID",
                          "PASSPORT",
                          "PERMANENT_RESIDENT",
                          "DRIVER_LICENSE",
                          "OTHER_GOV_ID",
                          "NOT_SPECIFIED"
                        ],
                        "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                        "example": "USA_SSN",
                        "x-stoplight": {
                          "id": "ulm45kpr2peox"
                        }
                      },
                      "country_of_citizenship": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "country_of_birth": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "country_of_tax_residence": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                        "example": "USA"
                      },
                      "funding_source": {
                        "type": "array",
                        "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                        "items": {
                          "type": "string",
                          "enum": [
                            "employment_income",
                            "investments",
                            "inheritance",
                            "business_income",
                            "savings",
                            "family"
                          ]
                        }
                      },
                      "annual_income_min": {
                        "type": "number",
                        "description": "The lower bound of the user's annual income."
                      },
                      "annual_income_max": {
                        "type": "number",
                        "description": "The upper bound of the user's annual income."
                      },
                      "liquid_net_worth_min": {
                        "type": "number",
                        "description": "The lower bound of the user's liquid net worth."
                      },
                      "liquid_net_worth_max": {
                        "type": "number",
                        "description": "The upper bound of the user's liquid net worth."
                      },
                      "total_net_worth_min": {
                        "type": "number",
                        "description": "The lower bound of the user's total net worth."
                      },
                      "total_net_worth_max": {
                        "type": "number",
                        "description": "The upper bound of the user's total net worth."
                      },
                      "visa_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "y5a5r7inu02w8"
                        },
                        "description": "Only used to collect visa types for users residing in the USA."
                      },
                      "visa_expiration_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "q7b33k53b5alk"
                        },
                        "description": "Required if `visa_type` is set.",
                        "format": "date"
                      },
                      "date_of_departure_from_usa": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "yasik2wcmshea"
                        },
                        "format": "date",
                        "description": "Required if `visa_type` = B1 or B2"
                      },
                      "permanent_resident": {
                        "type": "boolean",
                        "x-stoplight": {
                          "id": "jlvzbu3cevmju"
                        },
                        "description": "Only used to collect permanent residence status in the USA."
                      },
                      "extra": {
                        "type": "object",
                        "description": "Any additional information used for KYC purposes\n"
                      }
                    },
                    "required": [
                      "given_name",
                      "family_name",
                      "date_of_birth",
                      "tax_id_type",
                      "country_of_tax_residence",
                      "funding_source"
                    ]
                  },
                  "disclosures": {
                    "type": "object",
                    "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                    "example": {
                      "is_control_person": false,
                      "is_affiliated_exchange_or_finra": false,
                      "is_politically_exposed": false,
                      "immediate_family_exposed": false
                    },
                    "x-stoplight": {
                      "id": "h3ui3575tdh6q"
                    },
                    "properties": {
                      "employment_status": {
                        "type": "string",
                        "enum": [
                          "unemployed",
                          "employed",
                          "student",
                          "retired"
                        ],
                        "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                      },
                      "employer_name": {
                        "type": "string",
                        "description": "The name of the employer if the user is employed."
                      },
                      "employer_address": {
                        "type": "string",
                        "description": "The employer's address if the user is employed."
                      },
                      "employment_position": {
                        "type": "string",
                        "description": "The user's position if they are employed."
                      },
                      "is_control_person": {
                        "type": "boolean",
                        "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                      },
                      "is_affiliated_exchange_or_finra": {
                        "type": "boolean",
                        "description": "Whether user is affiliated with any exchanges or FINRA."
                      },
                      "is_politically_exposed": {
                        "type": "boolean",
                        "description": "Whether the user is politically exposed."
                      },
                      "immediate_family_exposed": {
                        "type": "boolean",
                        "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                      },
                      "context": {
                        "type": "array",
                        "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                        "nullable": true,
                        "items": {
                          "title": "DisclosureContextAnnotation",
                          "type": "object",
                          "properties": {
                            "context_type": {
                              "type": "string",
                              "enum": [
                                "CONTROLLED_FIRM",
                                "IMMEDIATE_FAMILY_EXPOSED",
                                "AFFILIATE_FIRM"
                              ],
                              "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                            },
                            "company_name": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_street_address": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_city": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_state": {
                              "type": "string",
                              "description": "Required if and only if `company_country` is `USA`."
                            },
                            "company_country": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "company_compliance_email": {
                              "type": "string",
                              "description": "Required for FINRA affiliations and controlled firms."
                            },
                            "given_name": {
                              "type": "string",
                              "description": "Required for immediate family members of politically exposed persons."
                            },
                            "family_name": {
                              "type": "string",
                              "description": "Required for immediate family members of politically exposed persons."
                            }
                          },
                          "required": [
                            "context_type"
                          ],
                          "x-stoplight": {
                            "id": "rf62uwbtfdfpk"
                          }
                        }
                      }
                    },
                    "required": [
                      "is_control_person",
                      "is_affiliated_exchange_or_finra",
                      "is_politically_exposed",
                      "immediate_family_exposed"
                    ]
                  },
                  "trusted_contact": {
                    "type": "object",
                    "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                    "properties": {
                      "given_name": {
                        "type": "string",
                        "example": "Jane"
                      },
                      "family_name": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "email_address": {
                        "type": "string",
                        "format": "email",
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                        "example": "jane.doe@example.com"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                      },
                      "street_address": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                      },
                      "city": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "state": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "required if `street_address` is set\n"
                      },
                      "country": {
                        "type": "string",
                        "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                      }
                    },
                    "required": [
                      "given_name",
                      "family_name"
                    ],
                    "example": {
                      "given_name": "Jane",
                      "family_name": "Doe",
                      "email_address": "jane.doe@example.com"
                    },
                    "x-stoplight": {
                      "id": "fyme2rvoeickd"
                    }
                  }
                },
                "x-stoplight": {
                  "id": "xrw055ds4ti4h"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If all parameters are valid and updates have been made, it returns with status code 200. The response is the account model.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Represents an account with all data available. If your api response is missing some of these fields, there is a good chance you are using a route that returns `Account` instances instead of these.",
                  "x-examples": {
                    "example-1": {
                      "id": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "account_number": "601842165",
                      "status": "ACTIVE",
                      "crypto_status": "INACTIVE",
                      "currency": "USD",
                      "last_equity": "40645.13",
                      "created_at": "2022-01-21T21:25:26.583576Z",
                      "contact": {
                        "email_address": "strange_elbakyan_97324509@example.com",
                        "phone_number": "614-555-0697",
                        "street_address": [
                          "20 N San Mateo Dr"
                        ],
                        "city": "San Mateo",
                        "state": "CA",
                        "postal_code": "94401"
                      },
                      "identity": {
                        "given_name": "Strange",
                        "family_name": "Elbakyan",
                        "date_of_birth": "1970-01-01",
                        "tax_id_type": "USA_SNN",
                        "country_of_citizenship": "USA",
                        "country_of_birth": "USA",
                        "country_of_tax_residence": "USA",
                        "funding_source": [
                          "employment_income"
                        ],
                        "visa_type": null,
                        "visa_expiration_date": null,
                        "date_of_departure_from_usa": null,
                        "permanent_resident": null
                      },
                      "disclosures": {
                        "is_control_person": false,
                        "is_affiliated_exchange_or_finra": false,
                        "is_politically_exposed": false,
                        "immediate_family_exposed": false,
                        "is_discretionary": false
                      },
                      "agreements": [
                        {
                          "agreement": "margin_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        },
                        {
                          "agreement": "customer_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        },
                        {
                          "agreement": "account_agreement",
                          "signed_at": "2022-01-21T21:25:26.579487214Z",
                          "ip_address": "127.0.0.1",
                          "revision": null
                        }
                      ],
                      "documents": [
                        {
                          "document_type": "identity_verification",
                          "document_sub_type": "passport",
                          "id": "d5af1585-6c60-494d-9ea5-c5df62704229",
                          "content": "https://s3.amazonaws.com/stg.alpaca.markets/documents/accounts/3dcb795c-3ccc-402a-abb9-07e26a1b1326/2490f5d9-8988-4405-a3e0-d76e65de13c2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJLDF4SCWSL6HUQKA%2F20220210%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220210T162205Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=bc6cc0f541d569623f3973fb83734d7960a69886e8b175a9d472f666b87419f1",
                          "created_at": "2022-01-21T21:25:28.184231Z"
                        }
                      ],
                      "trusted_contact": {
                        "given_name": "Jane",
                        "family_name": "Doe",
                        "email_address": "strange_elbakyan_97324509@example.com"
                      },
                      "account_type": "trading",
                      "trading_configurations": null
                    }
                  },
                  "x-stoplight": {
                    "id": "oqrvgmjlw9nuj"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "account_number": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "crypto_status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "kyc_result": {
                      "type": "object",
                      "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
                      "x-stoplight": {
                        "id": "m6so9tt7secvm"
                      },
                      "properties": {
                        "reject": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "accept": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "indeterminate": {
                          "title": "KYCResultType",
                          "x-stoplight": {
                            "id": "mkpd1y7i0tihh"
                          },
                          "type": "string",
                          "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                        },
                        "addidional_information": {
                          "type": "string",
                          "description": "Used to display a custom message."
                        },
                        "summary": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "dfz7vejxhvxyk"
                          },
                          "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
                        }
                      }
                    },
                    "currency": {
                      "title": "Currency",
                      "x-stoplight": {
                        "id": "go8dbrpz277wf"
                      },
                      "type": "string",
                      "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                    },
                    "last_equity": {
                      "type": "string",
                      "format": "decimal"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "contact": {
                      "type": "object",
                      "description": "Contact is the model for the account owner contact information.\n",
                      "x-stoplight": {
                        "id": "qcig9irpj9334"
                      },
                      "properties": {
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "example": "john.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "example": "+15556667788",
                          "description": "Phone number should include the country code, format: “+15555555555”"
                        },
                        "street_address": {
                          "type": "array",
                          "description": "The user's street address. If multiple lines in address, pass in as additional array elements. Maximum of 3 objects in array",
                          "items": {
                            "type": "string",
                            "example": "20 N San Mateo Dr",
                            "x-stoplight": {
                              "id": "10wajx98hc79a"
                            }
                          }
                        },
                        "unit": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yybrq2o2nb5gy"
                          },
                          "description": "The specific apartment number if applicable"
                        },
                        "city": {
                          "type": "string",
                          "example": "San Mateo"
                        },
                        "state": {
                          "type": "string",
                          "example": "CA",
                          "description": "required if country_of_tax_residence in identity model (below) is ‘USA’"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "94401"
                        }
                      },
                      "required": [
                        "email_address",
                        "phone_number",
                        "street_address"
                      ]
                    },
                    "identity": {
                      "type": "object",
                      "description": "Identity is the model to provide account owner’s identity information.\n",
                      "example": {
                        "given_name": "John",
                        "family_name": "Doe",
                        "date_of_birth": "1990-01-01",
                        "tax_id": "666-55-4321",
                        "tax_id_type": "USA_SSN",
                        "country_of_citizenship": "AUS",
                        "country_of_birth": "AUS",
                        "country_of_tax_residence": "USA",
                        "funding_source": [
                          "employment_income"
                        ]
                      },
                      "x-stoplight": {
                        "id": "oi43k8rpw570e"
                      },
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "John",
                          "description": "The first/given name of the user."
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe",
                          "description": "The last name (surname) of the user."
                        },
                        "middle_name": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "p03brcsyyjbcq"
                          },
                          "description": "The middle name of the user."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "example": "1990-01-01",
                          "description": "The date of birth in \"YYYY-MM-DD\" format."
                        },
                        "tax_id": {
                          "type": "string",
                          "example": "666-55-4321",
                          "description": "Required if tax_id_type is set."
                        },
                        "tax_id_type": {
                          "type": "string",
                          "title": "TaxIdType",
                          "enum": [
                            "USA_SSN",
                            "ARG_AG_CUIT",
                            "AUS_TFN",
                            "AUS_ABN",
                            "BOL_NIT",
                            "BRA_CPF",
                            "CHL_RUT",
                            "COL_NIT",
                            "CRI_NITE",
                            "DEU_TAX_ID",
                            "DOM_RNC",
                            "ECU_RUC",
                            "FRA_SPI",
                            "GBR_UTR",
                            "GBR_NINO",
                            "GTM_NIT",
                            "HND_RTN",
                            "HUN_TIN",
                            "IDN_KTP",
                            "IND_PAN",
                            "ISR_TAX_ID",
                            "ITA_TAX_ID",
                            "JPN_TAX_ID",
                            "MEX_RFC",
                            "NIC_RUC",
                            "NLD_TIN",
                            "PAN_RUC",
                            "PER_RUC",
                            "PRY_RUC",
                            "SGP_NRIC",
                            "SGP_FIN",
                            "SGP_ASGD",
                            "SGP_ITR",
                            "SLV_NIT",
                            "SWE_TAX_ID",
                            "URY_RUT",
                            "VEN_RIF",
                            "NATIONAL_ID",
                            "PASSPORT",
                            "PERMANENT_RESIDENT",
                            "DRIVER_LICENSE",
                            "OTHER_GOV_ID",
                            "NOT_SPECIFIED"
                          ],
                          "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                          "example": "USA_SSN",
                          "x-stoplight": {
                            "id": "ulm45kpr2peox"
                          }
                        },
                        "country_of_citizenship": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_birth": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "country_of_tax_residence": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n",
                          "example": "USA"
                        },
                        "funding_source": {
                          "type": "array",
                          "description": "Can be one or more of the following: `employment_income`, `investments`, `inheritance`, `business_income`, `savings`, `family`.",
                          "items": {
                            "type": "string",
                            "enum": [
                              "employment_income",
                              "investments",
                              "inheritance",
                              "business_income",
                              "savings",
                              "family"
                            ]
                          }
                        },
                        "annual_income_min": {
                          "type": "number",
                          "description": "The lower bound of the user's annual income."
                        },
                        "annual_income_max": {
                          "type": "number",
                          "description": "The upper bound of the user's annual income."
                        },
                        "liquid_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's liquid net worth."
                        },
                        "liquid_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's liquid net worth."
                        },
                        "total_net_worth_min": {
                          "type": "number",
                          "description": "The lower bound of the user's total net worth."
                        },
                        "total_net_worth_max": {
                          "type": "number",
                          "description": "The upper bound of the user's total net worth."
                        },
                        "visa_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "y5a5r7inu02w8"
                          },
                          "description": "Only used to collect visa types for users residing in the USA."
                        },
                        "visa_expiration_date": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "q7b33k53b5alk"
                          },
                          "description": "Required if `visa_type` is set.",
                          "format": "date"
                        },
                        "date_of_departure_from_usa": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yasik2wcmshea"
                          },
                          "format": "date",
                          "description": "Required if `visa_type` = B1 or B2"
                        },
                        "permanent_resident": {
                          "type": "boolean",
                          "x-stoplight": {
                            "id": "jlvzbu3cevmju"
                          },
                          "description": "Only used to collect permanent residence status in the USA."
                        },
                        "extra": {
                          "type": "object",
                          "description": "Any additional information used for KYC purposes\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name",
                        "date_of_birth",
                        "tax_id_type",
                        "country_of_tax_residence",
                        "funding_source"
                      ]
                    },
                    "disclosures": {
                      "type": "object",
                      "description": "Disclosures fields denote if the account owner falls under\neach category defined by FINRA rule. The client has to ask\nquestions for the end user and the values should reflect\ntheir answers.\nIf one of the answers is true (yes), the account goes into\nACTION_REQUIRED status.\n",
                      "example": {
                        "is_control_person": false,
                        "is_affiliated_exchange_or_finra": false,
                        "is_politically_exposed": false,
                        "immediate_family_exposed": false
                      },
                      "x-stoplight": {
                        "id": "h3ui3575tdh6q"
                      },
                      "properties": {
                        "employment_status": {
                          "type": "string",
                          "enum": [
                            "unemployed",
                            "employed",
                            "student",
                            "retired"
                          ],
                          "description": "One of the following: `employed`, `unemployed`, `retired`, or `student`."
                        },
                        "employer_name": {
                          "type": "string",
                          "description": "The name of the employer if the user is employed."
                        },
                        "employer_address": {
                          "type": "string",
                          "description": "The employer's address if the user is employed."
                        },
                        "employment_position": {
                          "type": "string",
                          "description": "The user's position if they are employed."
                        },
                        "is_control_person": {
                          "type": "boolean",
                          "description": "Whether user holds a controlling position in a publicly traded company, member of the board of directors or has policy making abilities in a publicly traded company."
                        },
                        "is_affiliated_exchange_or_finra": {
                          "type": "boolean",
                          "description": "Whether user is affiliated with any exchanges or FINRA."
                        },
                        "is_politically_exposed": {
                          "type": "boolean",
                          "description": "Whether the user is politically exposed."
                        },
                        "immediate_family_exposed": {
                          "type": "boolean",
                          "description": "If your user’s immediate family member (sibling, husband/wife, child, parent) is either politically exposed or holds a control position."
                        },
                        "context": {
                          "type": "array",
                          "description": "Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true",
                          "nullable": true,
                          "items": {
                            "title": "DisclosureContextAnnotation",
                            "type": "object",
                            "properties": {
                              "context_type": {
                                "type": "string",
                                "enum": [
                                  "CONTROLLED_FIRM",
                                  "IMMEDIATE_FAMILY_EXPOSED",
                                  "AFFILIATE_FIRM"
                                ],
                                "description": "Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals."
                              },
                              "company_name": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_street_address": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_city": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_state": {
                                "type": "string",
                                "description": "Required if and only if `company_country` is `USA`."
                              },
                              "company_country": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "company_compliance_email": {
                                "type": "string",
                                "description": "Required for FINRA affiliations and controlled firms."
                              },
                              "given_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              },
                              "family_name": {
                                "type": "string",
                                "description": "Required for immediate family members of politically exposed persons."
                              }
                            },
                            "required": [
                              "context_type"
                            ],
                            "x-stoplight": {
                              "id": "rf62uwbtfdfpk"
                            }
                          }
                        }
                      },
                      "required": [
                        "is_control_person",
                        "is_affiliated_exchange_or_finra",
                        "is_politically_exposed",
                        "immediate_family_exposed"
                      ]
                    },
                    "agreements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "ucn8nh8ei4mag"
                        },
                        "properties": {
                          "agreement": {
                            "type": "string",
                            "title": "AgreementType",
                            "description": "- margin_agreement: Alpaca Margin Agreement\n- account_agreement: Alpaca Account Agreement\n- customer_agreement: Alpaca Customer Agreement\n- crypto_agreement: Alpaca Crypto agreement\n- custodial_customer_agreement: Alpaca Custodial Customer agreement\n",
                            "enum": [
                              "margin_agreement",
                              "account_agreement",
                              "customer_agreement",
                              "crypto_agreement"
                            ],
                            "example": "customer_agreement",
                            "x-stoplight": {
                              "id": "pw9nog92a1hgz"
                            }
                          },
                          "signed_at": {
                            "type": "string",
                            "example": "2019-09-11T18:09:33Z",
                            "format": "date-time",
                            "description": "The timestamp the agreement was signed."
                          },
                          "ip_address": {
                            "type": "string",
                            "format": "ipv4",
                            "example": "185.13.21.99",
                            "description": "The ip_address the signed agreements were sent from by the user."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The revision date if agreement is a revision."
                          }
                        },
                        "required": [
                          "agreement",
                          "signed_at",
                          "ip_address"
                        ]
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "If an account has documents on the application submission,\nit has the ApplicationDocument model in exchange with\nDocumentUpload.\n",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "document_type": {
                            "type": "string",
                            "enum": [
                              "identity_verification",
                              "address_verification",
                              "date_of_birth_verification",
                              "tax_id_verification",
                              "account_approval_letter",
                              "cip_result",
                              "w8ben",
                              "w9",
                              "limited_trading_authorization"
                            ],
                            "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                            "example": "identity_verification",
                            "x-stoplight": {
                              "id": "8u8j8gn6uuzk8"
                            }
                          },
                          "document_sub_type": {
                            "type": "string"
                          },
                          "mime_type": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "document_type",
                          "created_at"
                        ],
                        "example": {
                          "id": "0d18ae51-3c94-4511-b209-101e1666416b",
                          "document_type": "identity_verification",
                          "document_sub_type": "passport",
                          "mime_type": "image/jpeg",
                          "created_at": "2019-09-30T23:55:31.185998Z"
                        },
                        "x-stoplight": {
                          "id": "8coz8owpbclc8"
                        }
                      }
                    },
                    "trusted_contact": {
                      "type": "object",
                      "description": "This model input is optional. However, the client should\nmake reasonable effort to obtain the trusted contact information.\nSee more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n\nOnly one of the following is required:\n\n* email_address\t\n* phone_number\t\n* street_address\t\n",
                      "properties": {
                        "given_name": {
                          "type": "string",
                          "example": "Jane"
                        },
                        "family_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email_address": {
                          "type": "string",
                          "format": "email",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n",
                          "example": "jane.doe@example.com"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "street_address": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "at least one of `email_address`, `phone_number` or\n`street_address` is required\n"
                        },
                        "city": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "state": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "required if `street_address` is set\n"
                        },
                        "country": {
                          "type": "string",
                          "description": "[ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\nrequired if `street_address` is set\n"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name"
                      ],
                      "example": {
                        "given_name": "Jane",
                        "family_name": "Doe",
                        "email_address": "jane.doe@example.com"
                      },
                      "x-stoplight": {
                        "id": "fyme2rvoeickd"
                      }
                    },
                    "account_name": {
                      "type": "string"
                    },
                    "account_type": {
                      "type": "string",
                      "title": "AccountType",
                      "description": "Possible values are:\n\n- trading\n- custodial\n- donor_advised",
                      "enum": [
                        "trading",
                        "custodial",
                        "donor_advised"
                      ],
                      "example": "trading",
                      "x-stoplight": {
                        "id": "l6z0ingxys2ei"
                      }
                    },
                    "custodial_account_type": {
                      "title": "CustodialAccountType",
                      "x-stoplight": {
                        "id": "jltxs43lpjolf"
                      },
                      "type": "string",
                      "description": "**UTMA**\nCustodianTypeUTMA\n\n**UGMA**\nCustodianTypeUGMA"
                    },
                    "minor_identity": {
                      "description": "Represents Identity information for a minor that an account of type \"custodial\" is for",
                      "type": "object",
                      "x-examples": {},
                      "properties": {
                        "given_name": {
                          "type": "string"
                        },
                        "family_name": {
                          "type": "string"
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date"
                        },
                        "tax_id": {
                          "type": "string"
                        },
                        "tax_id_type": {
                          "type": "string",
                          "title": "TaxIdType",
                          "enum": [
                            "USA_SSN",
                            "ARG_AG_CUIT",
                            "AUS_TFN",
                            "AUS_ABN",
                            "BOL_NIT",
                            "BRA_CPF",
                            "CHL_RUT",
                            "COL_NIT",
                            "CRI_NITE",
                            "DEU_TAX_ID",
                            "DOM_RNC",
                            "ECU_RUC",
                            "FRA_SPI",
                            "GBR_UTR",
                            "GBR_NINO",
                            "GTM_NIT",
                            "HND_RTN",
                            "HUN_TIN",
                            "IDN_KTP",
                            "IND_PAN",
                            "ISR_TAX_ID",
                            "ITA_TAX_ID",
                            "JPN_TAX_ID",
                            "MEX_RFC",
                            "NIC_RUC",
                            "NLD_TIN",
                            "PAN_RUC",
                            "PER_RUC",
                            "PRY_RUC",
                            "SGP_NRIC",
                            "SGP_FIN",
                            "SGP_ASGD",
                            "SGP_ITR",
                            "SLV_NIT",
                            "SWE_TAX_ID",
                            "URY_RUT",
                            "VEN_RIF",
                            "NATIONAL_ID",
                            "PASSPORT",
                            "PERMANENT_RESIDENT",
                            "DRIVER_LICENSE",
                            "OTHER_GOV_ID",
                            "NOT_SPECIFIED"
                          ],
                          "description": "Required if `tax_id` is set.\n\nAn Enum of the various kinds of Tax ID formats Alpaca supports.\n\nPossible Values are:\n\n\n- **USA_SSN**\nUSA Social Security Number\n\n- **ARG_AR_CUIT**\nArgentina CUIT\n\n- **AUS_TFN**\nAustralian Tax File Number\n\n- **AUS_ABN**\nAustralian Business Number\n\n- **BOL_NIT**\nBolivia NIT\n\n- **BRA_CPF**\nBrazil CPF\n\n- **CHL_RUT**\nChile RUT\n\n- **COL_NIT**\nColombia NIT\n\n- **CRI_NITE**\nCosta Rica NITE\n\n- **DEU_TAX_ID**\nGermany Tax ID (Identifikationsnummer)\n\n- **DOM_RNC**\nDominican Republic RNC\n\n- **ECU_RUC**\nEcuador RUC\n\n- **FRA_SPI**\nFrance SPI (Reference Tax Number)\n\n- **GBR_UTR**\nUK UTR (Unique Taxpayer Reference)\n\n- **GBR_NINO**\nUK NINO (National Insurance Number)\n\n- **GTM_NIT**\nGuatemala NIT\n\n- **HND_RTN**\nHonduras RTN\n\n- **HUN_TIN**\nHungary TIN Number\n\n- **IDN_KTP**\nIndonesia KTP\n\n- **IND_PAN**\nIndia PAN Number\n\n- **ISR_TAX_ID**\nIsrael Tax ID (Teudat Zehut)\n\n- **ITA_TAX_ID**\nItaly Tax ID (Codice Fiscale)\n\n- **JPN_TAX_ID**\nJapan Tax ID (Koijin Bango)\n\n- **MEX_RFC**\nMexico RFC\n\n- **NIC_RUC**\nNicaragua RUC\n\n- **NLD_TIN**\nNetherlands TIN Number\n\n- **PAN_RUC**\nPanama RUC\n\n- **PER_RUC**\nPeru RUC\n\n- **PRY_RUC**\nParaguay RUC\n\n- **SGP_NRIC**\nSingapore NRIC\n\n- **SGP_FIN**\nSingapore FIN\n\n- **SGP_ASGD**\nSingapore ASGD\n\n- **SGP_ITR**\nSingapore ITR\n\n- **SLV_NIT**\nEl Salvador NIT\n\n- **SWE_TAX_ID**\nSweden Tax ID (Personnummer)\n\n- **URY_RUT**\nUruguay RUT\n\n- **VEN_RIF**\nVenezuela RIF\n\n- **NATIONAL_ID**\nNational ID number, if a tax ID number is not available\n\n- **PASSPORT**\nPassport number, if a tax ID number is not available\n\n- **PERMANENT_RESIDENT**\nPermanent resident number, if a tax ID number is not available\n\n- **DRIVER_LICENSE**\nDrivers license number, if a tax ID number is not available\n\n- **OTHER_GOV_ID**\nOther government issued identifier, if a tax ID number is not available\n\n- **NOT_SPECIFIED**\nOther Tax IDs",
                          "example": "USA_SSN",
                          "x-stoplight": {
                            "id": "ulm45kpr2peox"
                          }
                        },
                        "country_of_citizenship": {
                          "type": "string"
                        },
                        "country_of_birth": {
                          "type": "string"
                        },
                        "country_of_tax_residence": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": [
                        "given_name",
                        "family_name",
                        "date_of_birth",
                        "country_of_tax_residence",
                        "state",
                        "email"
                      ],
                      "x-stoplight": {
                        "id": "0kzlygfs1ac1c"
                      }
                    },
                    "trading_configurations": {
                      "title": "AccountConfigurations",
                      "type": "object",
                      "description": "Represents additional configuration settings for an account",
                      "x-stoplight": {
                        "id": "rs80h7z1vg3or"
                      },
                      "properties": {
                        "dtbp_check": {
                          "type": "string",
                          "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
                          "example": "both",
                          "enum": [
                            "both",
                            "entry",
                            "exit"
                          ]
                        },
                        "trade_confirm_email": {
                          "type": "string",
                          "description": "all or none. If none, emails for order fills are not sent.",
                          "enum": [
                            "all",
                            "none"
                          ]
                        },
                        "suspend_trade": {
                          "type": "boolean",
                          "description": "If true, new orders are blocked."
                        },
                        "no_shorting": {
                          "type": "boolean",
                          "description": "If true, account becomes long-only mode."
                        },
                        "fractional_trading": {
                          "type": "boolean",
                          "description": "If true, account is able to participate in fractional trading"
                        },
                        "max_margin_multiplier": {
                          "type": "string",
                          "description": "Can be \"1\" or \"2\""
                        },
                        "pdt_check": {
                          "type": "string",
                          "example": "entry"
                        },
                        "ptp_no_exception_entry": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "b2q93748qni2e"
                          },
                          "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
                        }
                      },
                      "required": [
                        "dtbp_check",
                        "trade_confirm_email",
                        "suspend_trade",
                        "no_shorting",
                        "fractional_trading",
                        "max_margin_multiplier",
                        "pdt_check",
                        "ptp_no_exception_entry"
                      ]
                    },
                    "usd": {
                      "title": "USDBalances",
                      "x-stoplight": {
                        "id": "cqvonohea6r8x"
                      },
                      "type": "object",
                      "properties": {
                        "buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "regt_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "daytrading_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash_withdrawable": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "cash_transferable": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "pending_transfer_out": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "portfolio_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "equity": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "long_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "short_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "initial_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "maintenance_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_maintenance_margin": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "sma": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_equity": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_long_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_short_market_value": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_cash": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_regt_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "06hyvz1658m2j"
                          },
                          "format": "decimal"
                        },
                        "last_daytrading_buying_power": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "f178oif7i5e4d"
                          }
                        }
                      },
                      "description": "Account balances in USD."
                    },
                    "enabled_assets": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "2gxryctx56dih"
                      },
                      "items": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "account_number",
                    "status",
                    "currency",
                    "last_equity",
                    "created_at",
                    "account_type"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The post body is not well formed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "​ The request body contains an attribute that is not permitted to be updated or you are attempting to set an invalid value.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "patchAccount",
        "description": "This operation updates account information.\n\nIf all parameters are valid and updates have been made, it returns with status code 200. The response is the account model."
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/v1/accounts/{account_id}/documents": {
      "get": {
        "summary": "Retrieve a List of Account Documents",
        "tags": [
          "Documents"
        ],
        "description": "This endpoint allows you to query all the documents that belong to a certain account. You can filter by date, or type of document.",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "optional date value to filter the list (inclusive).",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "optional date value to filter the list (inclusive).",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "See DocumentType model for reference and explanation of values",
            "schema": {
              "example": "identity_verification",
              "type": "string",
              "enum": [
                "identity_verification",
                "address_verification",
                "date_of_birth_verification",
                "tax_id_verification",
                "account_approval_letter",
                "cip_result"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "x-examples": {
                      "example": [
                        {
                          "document_id": "b792e8ae-2cb4-4209-85b9-32be4c2fcdd6",
                          "document_type": "account_statement",
                          "document_date": "2019-08-24"
                        }
                      ]
                    },
                    "x-stoplight": {
                      "id": "qlhjbktu0o14c"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "document_id": {
                          "type": "string",
                          "minLength": 1,
                          "format": "uuid",
                          "description": "ID of the Document"
                        },
                        "document_type": {
                          "type": "string",
                          "enum": [
                            "identity_verification",
                            "address_verification",
                            "date_of_birth_verification",
                            "tax_id_verification",
                            "account_approval_letter",
                            "cip_result",
                            "w8ben",
                            "w9",
                            "limited_trading_authorization"
                          ],
                          "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                          "example": "identity_verification",
                          "x-stoplight": {
                            "id": "8u8j8gn6uuzk8"
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "2dxllw6r8po62"
                          },
                          "format": "date-time"
                        },
                        "mime_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "38y7l8mk02mtt"
                          },
                          "description": "The format of content encoded by the string"
                        },
                        "content": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "o696aus9wb91b"
                          },
                          "description": "Base64 string representing the document"
                        },
                        "document_sub_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "xzxw5qb7hnt3r"
                          },
                          "description": "The specific type of document, e.g. passport"
                        }
                      },
                      "required": [
                        "document_id",
                        "document_type"
                      ]
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "getDocsForAccount"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/v1/accounts/{account_id}/documents/upload": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Upload a Document to Existing Account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "If an account has to replace documents after the submission, it has to use\nthe Document model instead of DocumentUploadRequest.\n",
                "example": {
                  "document_type": "identity_verification",
                  "document_sub_type": "passport",
                  "content": "/9j/Cg==",
                  "mime_type": "image/jpeg"
                },
                "title": "DocumentUploadRequest",
                "x-examples": {
                  "example-1": {
                    "document_type": "identity_verification",
                    "document_sub_type": "passport",
                    "content": "/9j/Cg==",
                    "mime_type": "image/jpeg"
                  }
                },
                "x-stoplight": {
                  "id": "s4kbyizjyxroo"
                },
                "properties": {
                  "document_type": {
                    "type": "string",
                    "enum": [
                      "identity_verification",
                      "address_verification",
                      "date_of_birth_verification",
                      "tax_id_verification",
                      "account_approval_letter",
                      "cip_result",
                      "w8ben",
                      "w9",
                      "limited_trading_authorization"
                    ],
                    "description": "- identity_verification:\n  identity verification document\n\n- address_verification:\n  address verification document\n\n- date_of_birth_verification:\n  date of birth verification document\n\n- tax_id_verification:\n  tax ID verification document\n\n- account_approval_letter:\n  407 approval letter\n\n- cip_result:\n  initial CIP result\n\n- w8ben:\n  W-8 BEN tax form\n\n- w9:\n  W9 tax form\n\n- limited_trading_authorization:",
                    "example": "identity_verification",
                    "x-stoplight": {
                      "id": "8u8j8gn6uuzk8"
                    }
                  },
                  "document_sub_type": {
                    "type": "string",
                    "example": "passport",
                    "description": "The specific type of document, e.g. passport"
                  },
                  "content": {
                    "type": "string",
                    "format": "base64",
                    "example": "/9j/Cg==",
                    "description": "Base64 string representing the document"
                  },
                  "content_data": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "additional_conditions": "None",
                        "country_citizen": "Australia",
                        "date": "2021-06-14",
                        "date_of_birth": "1970-01-01",
                        "foreign_tax_id": "123 456 789",
                        "ftin_not_required": false,
                        "full_name": "John Doe",
                        "ip_address": "127.0.0.1",
                        "mailing_address_city_state": "Adelaide, South Australia",
                        "mailing_address_country": "Australia",
                        "mailing_address_street": "51 Main St",
                        "paragraph_number": "15",
                        "percent_rate_withholding": 5,
                        "permanent_address_city_state": "Adelaide, South Australia",
                        "permanent_address_country": "Australia",
                        "permanent_address_street": "20 Main St",
                        "reference_number": "abc123",
                        "residency": "Australia",
                        "revision": "10-2021",
                        "tax_id_ssn": "123-00-456",
                        "timestamp": "2021-06-14T09:31:05Z",
                        "income_type": "interest",
                        "signer_full_name": "Mr. Signing User"
                      }
                    },
                    "description": "W-8BEN documents model.",
                    "properties": {
                      "additional_conditions": {
                        "type": "string",
                        "description": "Any additional conditions to specify"
                      },
                      "country_citizen": {
                        "type": "string",
                        "description": "The country that the applicant is a citizen of"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "date signed"
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "date of birth of applicant"
                      },
                      "foreign_tax_id": {
                        "type": "string",
                        "description": "Applicant's tax id in their home country"
                      },
                      "ftin_not_required": {
                        "type": "boolean",
                        "description": "Required if foreign_tax_id and tax_id_ssn are empty."
                      },
                      "full_name": {
                        "type": "string",
                        "description": "Full name of applicant"
                      },
                      "ip_address": {
                        "type": "string",
                        "description": "IP address of applicant when signed"
                      },
                      "mailing_address_city_state": {
                        "type": "string",
                        "description": "Mailing city/state of applicant"
                      },
                      "mailing_address_country": {
                        "type": "string",
                        "description": "Mailing country for applicant"
                      },
                      "mailing_address_street": {
                        "type": "string",
                        "description": "Mailing street address for applicant"
                      },
                      "paragraph_number": {
                        "type": "string"
                      },
                      "percent_rate_withholding": {
                        "type": "integer"
                      },
                      "permanent_address_city_state": {
                        "type": "string",
                        "description": "Permanent city/state of applicant"
                      },
                      "permanent_address_country": {
                        "type": "string",
                        "description": "Permanent country of residence of applicant"
                      },
                      "permanent_address_street": {
                        "type": "string",
                        "description": "Permanent street address of applicant"
                      },
                      "reference_number": {
                        "type": "string"
                      },
                      "residency": {
                        "type": "string",
                        "description": "Country of residency of applicant"
                      },
                      "revision": {
                        "type": "string",
                        "description": "Revision of the W8BEN form"
                      },
                      "tax_id_ssn": {
                        "type": "string",
                        "description": "TaxID/SSN of applicant"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "time",
                        "description": "Timestamp when form data was gathered"
                      },
                      "income_type": {
                        "type": "string",
                        "description": "Income type of applicant"
                      },
                      "signer_full_name": {
                        "type": "string",
                        "description": "Full name of signing user"
                      }
                    },
                    "required": [
                      "country_citizen",
                      "date",
                      "date_of_birth",
                      "full_name",
                      "ip_address",
                      "permanent_address_city_state",
                      "permanent_address_country",
                      "permanent_address_street",
                      "revision",
                      "timestamp",
                      "signer_full_name"
                    ],
                    "x-stoplight": {
                      "id": "8cjul4ni6pe66"
                    }
                  },
                  "mime_type": {
                    "type": "string",
                    "example": "image/jpeg",
                    "description": "This field is Required if content is specified. ENUM: application/pdf, image/png, or image/jpeg. If document_type is w8ben then application/json is also accepted"
                  }
                },
                "required": [
                  "document_type",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success (No Content)"
          },
          "400": {
            "description": "Bad Request. The body in the request is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. No account was found for this account_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "uploadDocToAccount",
        "description": "Upload a document to be attached to an account.\n\nDocuments are binary objects whose contents are encoded in base64. Each encoded content size is limited to 10MB if you use Alpaca for KYCaaS. If you perform your own KYC there are no document size limitations."
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/v1/accounts/{account_id}/documents/{document_id}/download": {
      "get": {
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "summary": "Download a Document File for an Account",
        "tags": [
          "Documents"
        ],
        "description": "This endpoint allows you to download a document identified by the document_id passed in the header. The returned document is in PDF format.\n\nThe operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.\n\nYou can retrieve a JSON version of a monthly statement by passing in the header accept: application/json header.\n",
        "responses": {
          "301": {
            "description": "Redirect to the pre-signed download link for the document PDF file.\n"
          },
          "404": {
            "description": "The document is not found."
          }
        },
        "operationId": "downloadDocFromAccount"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "Document identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/v1/documents/{document_id}": {
      "get": {
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "summary": "Download a Document File Directly",
        "tags": [
          "Documents"
        ],
        "description": "The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.\n",
        "responses": {
          "301": {
            "description": "Redirect to the pre-signed download link for the document PDF file.\n"
          },
          "404": {
            "description": "The document was not found."
          }
        },
        "operationId": "downloadDocumentById"
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "Document identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/v1/accounts/{account_id}/recipient_banks": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Funding",
          "Accounts"
        ],
        "summary": "Retrieve Bank Relationships for an Account",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE"
            }
          },
          {
            "name": "bank_name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Bank relationships attached to this Account.\n\nAn empty array will be returned if no Bank relationships have been attached to this account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "id": "8475c676-68e3-4cfc-a683-9ca2f47a6172",
                        "account_id": "56712986-9ff7-4d8f-8e52-077e099e533e",
                        "name": "Bank XYZ",
                        "status": "QUEUED",
                        "country": "",
                        "state_province": "",
                        "postal_code": "",
                        "city": "",
                        "street_address": "",
                        "account_number": "123456789abc",
                        "bank_code": "123456789",
                        "bank_code_type": "ABA",
                        "created_at": "2022-02-11T21:35:19.268681613Z",
                        "updated_at": "2022-02-11T21:35:19.268681613Z"
                      }
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-16T18:38:01.942282Z",
                        "description": "Format: 2020-01-01T01:01:01Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-16T18:38:01.942282Z",
                        "description": "Format: 2020-01-01T01:01:01Z"
                      },
                      "account_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "QUEUED",
                          "SENT_TO_CLEARING",
                          "APPROVED",
                          "CANCELED"
                        ],
                        "description": "QUEUED, SENT_TO_CLEARING, APPROVED, CANCELED"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of recipient bank"
                      },
                      "bank_code": {
                        "type": "string",
                        "description": "9-Digit ABA RTN (Routing Number) or BIC"
                      },
                      "bank_code_type": {
                        "type": "string",
                        "enum": [
                          "ABA",
                          "BIC"
                        ],
                        "description": "ABA (Domestic) or BIC (International)"
                      },
                      "country": {
                        "type": "string",
                        "description": "Only for international banks"
                      },
                      "state_province": {
                        "type": "string",
                        "description": "Only for international banks"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "Only for international banks"
                      },
                      "city": {
                        "type": "string",
                        "description": "Only for international banks"
                      },
                      "street_address": {
                        "type": "string",
                        "description": "Only for international banks"
                      },
                      "account_number": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "updated_at",
                      "name",
                      "bank_code",
                      "bank_code_type",
                      "account_number"
                    ],
                    "x-stoplight": {
                      "id": "zb27jqls868ez"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The body in the request is not valid."
          }
        },
        "operationId": "getRecipientBanks",
        "description": "Retrieves Bank Relationships for an account"
      },
      "post": {
        "tags": [
          "Funding",
          "Accounts"
        ],
        "summary": "Create a Bank Relationship for an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "description": "Account identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateBankRequest",
                "type": "object",
                "description": "Represents the possible fields to send when creating a new associated Bank resource for an account",
                "x-stoplight": {
                  "id": "dqsm6v1t25vuq"
                },
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of recipient bank"
                  },
                  "bank_code": {
                    "type": "string",
                    "description": "9-Digit ABA RTN (Routing Number) or BIC"
                  },
                  "bank_code_type": {
                    "type": "string",
                    "enum": [
                      "ABA",
                      "BIC"
                    ],
                    "description": "ABA (Domestic) or BIC (International)"
                  },
                  "account_number": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "Only for international banks, ie if bank_code_type = BIC"
                  },
                  "state_province": {
                    "type": "string",
                    "description": "Only for international banks, ie if bank_code_type = BIC"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "Only for international banks, ie if bank_code_type = BIC"
                  },
                  "city": {
                    "type": "string",
                    "description": "Only for international banks, ie if bank_code_type = BIC"
                  },
                  "street_address": {
                    "type": "string",
                    "description": "Only for international banks, ie if bank_code_type = BIC"
                  }
                },
                "required": [
                  "name",
                  "bank_code",
                  "bank_code_type",
                  "account_number"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created Bank relationship",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "8475c676-68e3-4cfc-a683-9ca2f47a6172",
                      "account_id": "56712986-9ff7-4d8f-8e52-077e099e533e",
                      "name": "Bank XYZ",
                      "status": "QUEUED",
                      "country": "",
                      "state_province": "",
                      "postal_code": "",
                      "city": "",
                      "street_address": "",
                      "account_number": "123456789abc",
                      "bank_code": "123456789",
                      "bank_code_type": "ABA",
                      "created_at": "2022-02-11T21:35:19.268681613Z",
                      "updated_at": "2022-02-11T21:35:19.268681613Z"
                    }
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-03-16T18:38:01.942282Z",
                      "description": "Format: 2020-01-01T01:01:01Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-03-16T18:38:01.942282Z",
                      "description": "Format: 2020-01-01T01:01:01Z"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "QUEUED",
                        "SENT_TO_CLEARING",
                        "APPROVED",
                        "CANCELED"
                      ],
                      "description": "QUEUED, SENT_TO_CLEARING, APPROVED, CANCELED"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of recipient bank"
                    },
                    "bank_code": {
                      "type": "string",
                      "description": "9-Digit ABA RTN (Routing Number) or BIC"
                    },
                    "bank_code_type": {
                      "type": "string",
                      "enum": [
                        "ABA",
                        "BIC"
                      ],
                      "description": "ABA (Domestic) or BIC (International)"
                    },
                    "country": {
                      "type": "string",
                      "description": "Only for international banks"
                    },
                    "state_province": {
                      "type": "string",
                      "description": "Only for international banks"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Only for international banks"
                    },
                    "city": {
                      "type": "string",
                      "description": "Only for international banks"
                    },
                    "street_address": {
                      "type": "string",
                      "description": "Only for international banks"
                    },
                    "account_number": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "name",
                    "bank_code",
                    "bank_code_type",
                    "account_number"
                  ],
                  "x-stoplight": {
                    "id": "zb27jqls868ez"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "A Bank relationship already exists for this account"
          }
        },
        "operationId": "createRecipientBank",
        "description": "If successful, retrieves Bank Relationships for an account"
      }
    },
    "/v1/accounts/{account_id}/recipient_banks/{bank_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "bank_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Funding"
        ],
        "summary": "Delete a Bank Relationship for an Account",
        "responses": {
          "204": {
            "description": "Success (No Content)"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "No Bank Relationship with the id specified by bank_id was found for this Account"
          }
        },
        "operationId": "deleteRecipientBank",
        "description": "If successful, deletes Bank Relationship for an account"
      }
    },
    "/v1beta/demo/banking/funding": {
      "post": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Create sandbox deposit transfer",
        "operationId": "demoDepositFunding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver_account_number": {
                    "type": "string"
                  },
                  "receiver_routing_code": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string",
                    "format": "decimal",
                    "x-go-type": "decimal.Decimal",
                    "x-go-type-import": {
                      "path": "github.com/shopspring/decimal"
                    }
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Demo deposit funding transfer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "receiver_account_number": {
                      "type": "string"
                    },
                    "receiver_routing_code": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "decimal",
                      "x-go-type": "decimal.Decimal",
                      "x-go-type-import": {
                        "path": "github.com/shopspring/decimal"
                      }
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/funding_wallet": {
      "post": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Batch create funding wallets",
        "operationId": "batchCreateFundingWallets",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_ids": {
                    "type": "array",
                    "description": "list of UUID account ids which will have funding wallets created",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funding wallets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "funding_wallets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "x-go-type": "uuid.UUID",
                            "x-go-type-import": {
                              "path": "github.com/gofrs/uuid"
                            }
                          },
                          "account_id": {
                            "type": "string",
                            "format": "uuid",
                            "x-go-type": "uuid.UUID",
                            "x-go-type-import": {
                              "path": "github.com/gofrs/uuid"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "pending",
                              "disabled"
                            ],
                            "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/{account_id}/funding_wallet": {
      "get": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Retrieve funding wallet",
        "operationId": "getFundingWallet",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "funding wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "pending",
                        "disabled"
                      ],
                      "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Creates a funding wallet",
        "operationId": "createFundingWallet",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "funding wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "pending",
                        "disabled"
                      ],
                      "description": "Status:\n * `active`: The funding wallet is ready\n * `pending`: The funding wallet is being processed\n * `disabled`: The funding wallet is disabled\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/{account_id}/funding_wallet/funding_details": {
      "get": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Retrieve funding details",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "The type of SSI to be returned, priority (SWIFT) or regular (local). A null value returns all payment types.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "swift_wire",
                "local_rails"
              ],
              "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Should be provided in ISO 4217 standard",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Returns a list of funding details if it exists. Query parameters must be passed to create a new funding details object if none exist.",
        "operationId": "listFundingDetails",
        "responses": {
          "200": {
            "description": "list of wallets",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "funding_details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Gets funding details that can be used to settle and collect funds in each available currency.\n",
                          "properties": {
                            "account_number": {
                              "type": "string"
                            },
                            "account_holder_name": {
                              "type": "string"
                            },
                            "account_number_type": {
                              "type": "string"
                            },
                            "bank_information": {
                              "type": "object",
                              "required": [
                                "name",
                                "address"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                }
                              }
                            },
                            "bank_name": {
                              "type": "string"
                            },
                            "bank_address": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "routing_code_type": {
                              "type": "string",
                              "enum": [
                                "BIC",
                                "ACH_ROUTING",
                                "ABA",
                                "ROUTING",
                                "SORT_CODE"
                              ],
                              "description": "Status:\n * `BIC`: bic_swift\n * `ACH`: ach_routing_code\n * `ABA`: aba\n * `ROUTING`: routing_code\n * `SORT_CODE`: sort_code\n"
                            },
                            "routing_code": {
                              "type": "string"
                            },
                            "payment_type": {
                              "type": "string",
                              "enum": [
                                "swift_wire",
                                "local_rails"
                              ],
                              "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
                            },
                            "bank_country": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/{account_id}/funding_wallet/transfers": {
      "get": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Retrieve funding wallet transfers",
        "operationId": "getFundingWalletTransfers",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transfers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "x-go-type": "uuid.UUID",
                            "x-go-type-import": {
                              "path": "github.com/gofrs/uuid"
                            }
                          },
                          "account_id": {
                            "type": "string",
                            "format": "uuid",
                            "x-go-type": "uuid.UUID",
                            "x-go-type-import": {
                              "path": "github.com/gofrs/uuid"
                            }
                          },
                          "fees": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "amount",
                                "currency",
                                "payment_type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "withdrawal_fee",
                                    "fx_fee",
                                    "network_fee",
                                    "deposit_fee",
                                    "ach_return_fee",
                                    "parnter_fee",
                                    "alpaca_fee"
                                  ],
                                  "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
                                },
                                "amount": {
                                  "type": "string",
                                  "nullable": false,
                                  "format": "decimal",
                                  "x-go-type": "decimal.Decimal",
                                  "x-go-type-import": {
                                    "path": "github.com/shopspring/decimal"
                                  }
                                },
                                "currency": {
                                  "title": "Currency",
                                  "x-stoplight": {
                                    "id": "go8dbrpz277wf"
                                  },
                                  "type": "string",
                                  "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                                },
                                "payment_type": {
                                  "type": "string",
                                  "enum": [
                                    "invoice"
                                  ],
                                  "description": "Status:\n * `invoice`\n"
                                }
                              }
                            }
                          },
                          "amount": {
                            "type": "string",
                            "format": "decimal",
                            "x-go-type": "decimal.Decimal",
                            "x-go-type-import": {
                              "path": "github.com/shopspring/decimal"
                            }
                          },
                          "currency": {
                            "type": "string"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "incoming",
                              "outgoing"
                            ],
                            "description": "Status:\n * `incoming`: incoming amount\n * `outgoing`: outgoing amount\n"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PENDING",
                              "CANCELED",
                              "EXECUTED",
                              "FAILED",
                              "COMPLETE"
                            ],
                            "description": "Status:\n * `PENDING`: Created and waiting to be processed\n * `CANCELED`: Canceled\n * `FAILED`: Failed mostly due to technical reasons\n * `COMPLETE`: Transfer has settled\n"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "usd": {
                            "type": "object",
                            "required": [
                              "amount"
                            ],
                            "properties": {
                              "amount": {
                                "type": "string",
                                "nullable": false,
                                "format": "decimal",
                                "x-go-type": "decimal.Decimal",
                                "x-go-type-import": {
                                  "path": "github.com/shopspring/decimal"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/{account_id}/funding_wallet/recipient_bank": {
      "get": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Retrieve recipient bank",
        "operationId": "getFundingWalletRecipientBank",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recipient bank"
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Create a recipient bank",
        "description": "Creates a new recipient bank. Returns the new recipient bank entity on success. entity.",
        "operationId": "createFundingWalletRecipientBank",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "bank_account_holder_name",
                  "bank_country",
                  "currency",
                  "name"
                ],
                "properties": {
                  "bank_name": {
                    "type": "string"
                  },
                  "bank_account_holder_name": {
                    "type": "string",
                    "description": "Bank account holder's name."
                  },
                  "bank_country": {
                    "type": "string",
                    "description": "Two-letter code for the country in which the beneficiary's bank account is held."
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency in which money is held in the beneficiary's bank account. ISO-3 currency code."
                  },
                  "street_address": {
                    "type": "string",
                    "description": "First line of address."
                  },
                  "account_number": {
                    "type": "string",
                    "description": "Bank account number."
                  },
                  "routing_code_type": {
                    "type": "string",
                    "description": "Local payment routing system. If supplied, routing_code should also be supplied.",
                    "enum": [
                      "sort_code",
                      "aba",
                      "bsb_code",
                      "institution_no",
                      "bank_code",
                      "branch_code",
                      "clabe",
                      "cnaps",
                      "ifsc"
                    ]
                  },
                  "routing_code": {
                    "type": "string",
                    "description": "Routing code for routing_code_type. If supplied, routing_code_type should also be supplied."
                  },
                  "bic_swift": {
                    "type": "string",
                    "description": "BIC/SWIFT code"
                  },
                  "iban": {
                    "type": "string",
                    "description": "IBAN code"
                  },
                  "account_type": {
                    "type": "string",
                    "description": "Bank account type.",
                    "enum": [
                      "checking",
                      "savings"
                    ]
                  },
                  "city": {
                    "type": "string",
                    "description": "City"
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "Postal code"
                  },
                  "state_or_province": {
                    "type": "string",
                    "description": "State or province."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "payment_types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "swift_wire",
                          "local_rails"
                        ],
                        "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
                      }
                    },
                    "street_address": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "Two-letter ISO country code."
                    },
                    "city": {
                      "type": "string",
                      "description": "City"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Postal code"
                    },
                    "state_or_province": {
                      "type": "string",
                      "description": "State or province."
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency in which money is held in the beneficiary's bank account. Three-digit currency code."
                    },
                    "account_number": {
                      "type": "string",
                      "description": "Bank account number."
                    },
                    "routing_code_type": {
                      "type": "string",
                      "description": "Local payment routing system."
                    },
                    "routing_code": {
                      "type": "string",
                      "description": "Value for \"routing_code_type\"."
                    },
                    "bic_swift": {
                      "type": "string",
                      "description": "BIC/SWIFT code"
                    },
                    "iban": {
                      "type": "string",
                      "description": "IBAN code"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date the beneficiary record was created.",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date the beneficiary record was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Delete a recipient bank",
        "description": "deletes a recipient bank.",
        "operationId": "deleteFundingWalletRecipientBank",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "recipient bank",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "payment_types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "swift_wire",
                          "local_rails"
                        ],
                        "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
                      }
                    },
                    "street_address": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "description": "Two-letter ISO country code."
                    },
                    "city": {
                      "type": "string",
                      "description": "City"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Postal code"
                    },
                    "state_or_province": {
                      "type": "string",
                      "description": "State or province."
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency in which money is held in the beneficiary's bank account. Three-digit currency code."
                    },
                    "account_number": {
                      "type": "string",
                      "description": "Bank account number."
                    },
                    "routing_code_type": {
                      "type": "string",
                      "description": "Local payment routing system."
                    },
                    "routing_code": {
                      "type": "string",
                      "description": "Value for \"routing_code_type\"."
                    },
                    "bic_swift": {
                      "type": "string",
                      "description": "BIC/SWIFT code"
                    },
                    "iban": {
                      "type": "string",
                      "description": "IBAN code"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Date the beneficiary record was created.",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Date the beneficiary record was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/accounts/{account_id}/funding_wallet/withdrawal": {
      "post": {
        "tags": [
          "Funding Wallets"
        ],
        "summary": "Create a withdrawal",
        "description": "Creates a withdrawal",
        "operationId": "createFundingWalletWithdrawal",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "UUID alpaca account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "usd_amount": {
                    "type": "string",
                    "format": "decimal",
                    "x-go-type": "decimal.Decimal",
                    "x-go-type-import": {
                      "path": "github.com/shopspring/decimal"
                    }
                  },
                  "desired_currency": {
                    "type": "string"
                  },
                  "payment_type": {
                    "type": "string",
                    "enum": [
                      "swift_wire",
                      "local_rails"
                    ],
                    "description": "Status:\n * `swift_wire`: SWIFT wire\n * `local_rails`: Local scheme\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "x-go-type": "uuid.UUID",
                      "x-go-type-import": {
                        "path": "github.com/gofrs/uuid"
                      }
                    },
                    "fees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "amount",
                          "currency",
                          "payment_type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "withdrawal_fee",
                              "fx_fee",
                              "network_fee",
                              "deposit_fee",
                              "ach_return_fee",
                              "parnter_fee",
                              "alpaca_fee"
                            ],
                            "description": "Status:\n  * `withdrawal_fee`: Withdrawal fee\n  * `fx_fee`: FX Fee\n  * `network_fee`\n  * `deposit_fee`\n  * `ach_return_fee`\n  * `parnter_fee`\n  * `alpaca_fee`\n"
                          },
                          "amount": {
                            "type": "string",
                            "nullable": false,
                            "format": "decimal",
                            "x-go-type": "decimal.Decimal",
                            "x-go-type-import": {
                              "path": "github.com/shopspring/decimal"
                            }
                          },
                          "currency": {
                            "title": "Currency",
                            "x-stoplight": {
                              "id": "go8dbrpz277wf"
                            },
                            "type": "string",
                            "description": "\"USD\" // US Dollar\n\"JPY\" // Japanese Yen\n\"EUR\" // Euro\n\"CAD\" // Canadian Dollar\n\"GBP\" // British Pound Sterling\n\"CHF\" // Swiss Franc\n\"TRY\" // Turkish Lira\n\"AUD\" // Australian Dollar\n\"CZK\" // Czech Koruna\n\"SEK\" // Swedish Krona\n\"DKK\" // Danish Krone\n\"SGD\" // Singapore Dollar\n\"HKD\" // Hong Kong Dollar\n\"HUF\" // Hungarian Forint\n\"NZD\" // New Zealand Dollar\n\"NOK\" // Norwegian Krone\n\"PLN\" // Poland Złoty"
                          },
                          "payment_type": {
                            "type": "string",
                            "enum": [
                              "invoice"
                            ],
                            "description": "Status:\n * `invoice`\n"
                          }
                        }
                      }
                    },
                    "amount": {
                      "type": "string",
                      "format": "decimal",
                      "x-go-type": "decimal.Decimal",
                      "x-go-type-import": {
                        "path": "github.com/shopspring/decimal"
                      }
                    },
                    "currency": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "incoming",
                        "outgoing"
                      ],
                      "description": "Status:\n * `incoming`: incoming amount\n * `outgoing`: outgoing amount\n"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "CANCELED",
                        "EXECUTED",
                        "FAILED",
                        "COMPLETE"
                      ],
                      "description": "Status:\n * `PENDING`: Created and waiting to be processed\n * `CANCELED`: Canceled\n * `FAILED`: Failed mostly due to technical reasons\n * `COMPLETE`: Transfer has settled\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "usd": {
                      "type": "object",
                      "required": [
                        "amount"
                      ],
                      "properties": {
                        "amount": {
                          "type": "string",
                          "nullable": false,
                          "format": "decimal",
                          "x-go-type": "decimal.Decimal",
                          "x-go-type-import": {
                            "path": "github.com/shopspring/decimal"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/{account_id}/transfers": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "summary": "Retrieve List of Transfers for an Account.",
        "tags": [
          "Funding"
        ],
        "description": "You can query a list of transfers for an account.\n\n\nYou can filter requested transfers by values such as direction and status.\n\nReturns a list of transfer entities ordered by created_at\n",
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "enum": [
                "INCOMING",
                "OUTGOING"
              ],
              "type": "string"
            },
            "description": "INCOMING or OUTGOING"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Transfer",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "relationship_id": "81412018-ffa2-43f9-a3eb-d39f1c5e0f87",
                        "bank_id": "f1ae96de-94c1-468e-93a3-6b7213930ca8",
                        "account_id": "449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65",
                        "type": "ach",
                        "status": "QUEUED",
                        "reason": "string",
                        "amount": "string",
                        "direction": "INCOMING",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "expires_at": "2019-08-24T14:15:22Z",
                        "additional_information": "string"
                      }
                    },
                    "description": "Transfers allow you to transfer money/balance into your end customers' account (deposits) or out (withdrawal).\n\n[Main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#the-transfer-object)",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The transfer ID"
                      },
                      "relationship_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ACH relationship ID only present if type = \"ach\""
                      },
                      "bank_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the Bank, only present if type = \"wire\""
                      },
                      "account_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The account ID"
                      },
                      "type": {
                        "type": "string",
                        "example": "ach",
                        "enum": [
                          "ach",
                          "instant_ach",
                          "wire"
                        ],
                        "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
                        "title": "TransferType",
                        "x-stoplight": {
                          "id": "bn365jqublfc6"
                        }
                      },
                      "status": {
                        "type": "string",
                        "example": "QUEUED",
                        "enum": [
                          "QUEUED",
                          "APPROVAL_PENDING",
                          "PENDING",
                          "SENT_TO_CLEARING",
                          "REJECTED",
                          "CANCELED",
                          "APPROVED",
                          "COMPLETE",
                          "RETURNED"
                        ],
                        "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
                        "x-stoplight": {
                          "id": "mqx0hpg6h25vt"
                        }
                      },
                      "reason": {
                        "type": "string",
                        "description": "Cause of the status",
                        "nullable": true
                      },
                      "amount": {
                        "type": "string",
                        "description": "Must be > 0.00",
                        "format": "decimal"
                      },
                      "direction": {
                        "type": "string",
                        "example": "INCOMING",
                        "enum": [
                          "INCOMING",
                          "OUTGOING"
                        ],
                        "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
                        "x-stoplight": {
                          "id": "mda3ylkcj1ceo"
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timedate when transfer was created"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timedate when transfer was updated"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timedate when transfer was expired"
                      },
                      "additional_information": {
                        "type": "string",
                        "description": "Additional information. Only applies when type = \"wire\".",
                        "nullable": true
                      },
                      "hold_until": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "instant_amount": {
                        "type": "string"
                      },
                      "requested_amount": {
                        "type": "string",
                        "description": "Must be > 0.00. Only applies when type = \"wire\".",
                        "format": "decimal",
                        "nullable": true
                      },
                      "fee": {
                        "type": "string",
                        "description": "Fee amount to be collected. Only applies when type = \"wire\".",
                        "format": "decimal",
                        "nullable": true
                      },
                      "fee_payment_method": {
                        "type": "string",
                        "description": "Either \"user\" or \"invoice\". Only applies when type = \"wire\".",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "account_id",
                      "type",
                      "status",
                      "amount",
                      "direction",
                      "created_at"
                    ],
                    "x-stoplight": {
                      "id": "f986mttnx5c4n"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "relationship_id": "81412018-ffa2-43f9-a3eb-d39f1c5e0f87",
                        "bank_id": "f1ae96de-94c1-468e-93a3-6b7213930ca8",
                        "account_id": "449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65",
                        "type": "ach",
                        "status": "QUEUED",
                        "reason": "string",
                        "amount": "string",
                        "direction": "INCOMING",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "expires_at": "2019-08-24T14:15:22Z",
                        "additional_information": "string"
                      }
                    ]
                  },
                  "example-2": {
                    "value": [
                      {
                        "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "relationship_id": "81412018-ffa2-43f9-a3eb-d39f1c5e0f87",
                        "bank_id": "f1ae96de-94c1-468e-93a3-6b7213930ca8",
                        "account_id": "449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65",
                        "type": "ach",
                        "status": "QUEUED",
                        "reason": "string",
                        "amount": "string",
                        "direction": "INCOMING",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "expires_at": "2019-08-24T14:15:22Z",
                        "additional_information": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getTransfersForAccount"
      },
      "post": {
        "summary": "Request a New Transfer",
        "tags": [
          "Funding",
          "Accounts"
        ],
        "description": "Create a new transfer to an account to fund it.\n\nIn the sandbox environment, you can instantly deposit to or withdraw from an account with a virtual money amount. In the production environment, this endpoint is used only for requesting an outgoing (withdrawal) wire transfer at this moment. For the wire transfer (in production), you need to create a bank resource first using the Bank API. For more on how to fund an account in sandbox please check out this tutorial [here](https://alpaca.markets/learn/fund-broker-api/).",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateTransferRequest",
                "type": "object",
                "description": "[See main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#creating-a-transfer-entity)",
                "x-stoplight": {
                  "id": "p5r8jvdp1gmvw"
                },
                "properties": {
                  "transfer_type": {
                    "type": "string",
                    "example": "ach",
                    "enum": [
                      "ach",
                      "instant_ach",
                      "wire"
                    ],
                    "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
                    "title": "TransferType",
                    "x-stoplight": {
                      "id": "bn365jqublfc6"
                    }
                  },
                  "relationship_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Required if type = `ach`\n\nThe ach_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#creating-an-ach-relationship)"
                  },
                  "bank_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Required if type = `wire`\n\nThe bank_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/bank/#creating-a-new-bank-relationship)"
                  },
                  "amount": {
                    "type": "string",
                    "format": "decimal",
                    "description": "Must be > 0.00"
                  },
                  "direction": {
                    "type": "string",
                    "example": "INCOMING",
                    "enum": [
                      "INCOMING",
                      "OUTGOING"
                    ],
                    "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
                    "x-stoplight": {
                      "id": "mda3ylkcj1ceo"
                    }
                  },
                  "timing": {
                    "type": "string",
                    "example": "immediate",
                    "enum": [
                      "immediate"
                    ],
                    "description": "Only `immediate` is currently supported.\n\nvalues:\n\n- **immediate**\n\n- **next_day**",
                    "x-stoplight": {
                      "id": "v6623fj1j3umc"
                    }
                  },
                  "additional_information": {
                    "type": "string",
                    "description": "Additional details for when type = `wire`",
                    "nullable": true
                  },
                  "fee_payment_method": {
                    "title": "FeePaymentMethod",
                    "x-stoplight": {
                      "id": "ycxjjvxcdifuc"
                    },
                    "type": "string",
                    "description": "Only outgoing wire fees are currently supported for automated processing.\n\n\n**user**\tThe end user will pay any applicable fees\n**invoice**\tAny applicable fees will be billed to the client in the following monthly invoice"
                  }
                },
                "required": [
                  "transfer_type",
                  "amount",
                  "direction",
                  "timing"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully requested a transfer.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Transfer",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "relationship_id": "81412018-ffa2-43f9-a3eb-d39f1c5e0f87",
                      "bank_id": "f1ae96de-94c1-468e-93a3-6b7213930ca8",
                      "account_id": "449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65",
                      "type": "ach",
                      "status": "QUEUED",
                      "reason": "string",
                      "amount": "string",
                      "direction": "INCOMING",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "expires_at": "2019-08-24T14:15:22Z",
                      "additional_information": "string"
                    }
                  },
                  "description": "Transfers allow you to transfer money/balance into your end customers' account (deposits) or out (withdrawal).\n\n[Main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#the-transfer-object)",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The transfer ID"
                    },
                    "relationship_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ACH relationship ID only present if type = \"ach\""
                    },
                    "bank_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID of the Bank, only present if type = \"wire\""
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The account ID"
                    },
                    "type": {
                      "type": "string",
                      "example": "ach",
                      "enum": [
                        "ach",
                        "instant_ach",
                        "wire"
                      ],
                      "description": "**NOTE:** The Sandbox environment currently only supports `ach`\n\n- **ach**\nTransfer via ACH (US Only).\n- **wire**\nTransfer via wire (international).\n",
                      "title": "TransferType",
                      "x-stoplight": {
                        "id": "bn365jqublfc6"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "QUEUED",
                      "enum": [
                        "QUEUED",
                        "APPROVAL_PENDING",
                        "PENDING",
                        "SENT_TO_CLEARING",
                        "REJECTED",
                        "CANCELED",
                        "APPROVED",
                        "COMPLETE",
                        "RETURNED"
                      ],
                      "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
                      "x-stoplight": {
                        "id": "mqx0hpg6h25vt"
                      }
                    },
                    "reason": {
                      "type": "string",
                      "description": "Cause of the status",
                      "nullable": true
                    },
                    "amount": {
                      "type": "string",
                      "description": "Must be > 0.00",
                      "format": "decimal"
                    },
                    "direction": {
                      "type": "string",
                      "example": "INCOMING",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "- **INCOMING**\nFunds incoming to user’s account (deposit).\n- **OUTGOING**\nFunds outgoing from user’s account (withdrawal).\n",
                      "x-stoplight": {
                        "id": "mda3ylkcj1ceo"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timedate when transfer was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timedate when transfer was updated"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timedate when transfer was expired"
                    },
                    "additional_information": {
                      "type": "string",
                      "description": "Additional information. Only applies when type = \"wire\".",
                      "nullable": true
                    },
                    "hold_until": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "instant_amount": {
                      "type": "string"
                    },
                    "requested_amount": {
                      "type": "string",
                      "description": "Must be > 0.00. Only applies when type = \"wire\".",
                      "format": "decimal",
                      "nullable": true
                    },
                    "fee": {
                      "type": "string",
                      "description": "Fee amount to be collected. Only applies when type = \"wire\".",
                      "format": "decimal",
                      "nullable": true
                    },
                    "fee_payment_method": {
                      "type": "string",
                      "description": "Either \"user\" or \"invoice\". Only applies when type = \"wire\".",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "account_id",
                    "type",
                    "status",
                    "amount",
                    "direction",
                    "created_at"
                  ],
                  "x-stoplight": {
                    "id": "f986mttnx5c4n"
                  }
                }
              }
            }
          }
        },
        "operationId": "createTransferForAccount"
      }
    },
    "/v1/accounts/{account_id}/transfers/{transfer_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "transfer_id",
          "in": "path",
          "required": true,
          "description": "Tranfer identifier"
        }
      ],
      "delete": {
        "summary": "Request to Close a Transfer",
        "operationId": "deleteTransfer",
        "responses": {
          "204": {
            "description": "Success (No Content)"
          },
          "404": {
            "description": " Transfer Not Found"
          }
        },
        "description": "Request to close a transfer",
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/accounts/activities": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Retrieve Account Activities",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "id of a single account to filter by"
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported."
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported."
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported. Cannot be used with date."
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "The maximum number of entries to return in the response"
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "The Activity ID of the end of your current page of results. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "description": "The main activity category to get. Can be one of `trade_activity` or `non_trade_activity`."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Activity",
                    "description": "Base for activity types",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "20220208125959696::88b5f678-fef5-447b-af15-f21e367e6d8c"
                          },
                          "account_id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4"
                          },
                          "activity_type": {
                            "title": "ActivityType",
                            "type": "string",
                            "enum": [
                              "FILL",
                              "ACATC",
                              "ACATS",
                              "CIL",
                              "CSD",
                              "CSW",
                              "DIV",
                              "DIVCGL",
                              "DIVCGS",
                              "DIVNRA",
                              "DIVROC",
                              "DIVTXEX",
                              "FEE",
                              "INT",
                              "JNLC",
                              "JNLS",
                              "MA",
                              "PTC",
                              "REORG",
                              "SPIN",
                              "SPLIT"
                            ],
                            "description": "Represents the various kinds of activity.\n\nTradeActivity's will always have the type `FILL`\n\n- **FILL**\n  Order Fills (Partial/Full)\n- **ACATC**\n  ACATS IN/OUT (Cash)\n- **ACATS**\n  ACATS IN/OUT (Securities)\n- **CIL**\n  Cash in Lieu of Stock\n- **CSD**\n  Cash Disbursement (+)\n- **CSW**\n  Cash Withdrawable\n- **DIV**\n  Dividend\n- **DIVCGL**\n  Dividend (Capital Gain Long Term)\n- **DIVCGS**\n  Dividend (Capital Gain Short Term)\n- **DIVNRA**\n  Dividend Adjusted (NRA Withheld)\n- **DIVROC**\n  Dividend Return of Capital\n- **DIVTXEX**\n  Dividend (Tax Exempt)\n- **FEE**\n  REG and TAF Fees\n- **INT**\n  Interest (Credit/Margin)\n- **JNLC**\n  Journal Entry (Cash)\n- **JNLS**\n  Journal Entry (Stock)\n- **MA**\n  Merger/Acquisition\n- **PTC**\n  Pass Thru Change\n- **REORG**\n  Reorg CA\n- **SPIN**\n  Stock Spinoff\n- **SPLIT**\n  Stock Split",
                            "x-stoplight": {
                              "id": "y6utewjrnwcgk"
                            }
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "title": "TradeActivity",
                            "type": "object",
                            "properties": {
                              "transaction_time": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2021-05-10T14:01:04.650275Z",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fill",
                                  "partial_fill"
                                ],
                                "example": "fill",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "price": {
                                "type": "string",
                                "format": "decimal",
                                "example": "3.1415",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell",
                                  "buy_minus",
                                  "sell_plus",
                                  "sell_short",
                                  "sell_short_exempt",
                                  "undisclosed",
                                  "cross",
                                  "cross_short"
                                ],
                                "example": "buy",
                                "description": "Represents what side of the transaction an order was on.",
                                "x-stoplight": {
                                  "id": "zrdcas15ugcl7"
                                }
                              },
                              "symbol": {
                                "type": "string",
                                "example": "AAPL",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "leaves_qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.5123",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "order_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "fe060a1b-5b45-4eba-ba46-c3a3345d8255",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "cum_qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.9723",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "order_status": {
                                "type": "string",
                                "enum": [
                                  "new",
                                  "partially_filled",
                                  "filled",
                                  "done_for_day",
                                  "canceled",
                                  "expired",
                                  "replaced",
                                  "pending_cancel",
                                  "pending_replace",
                                  "accepted",
                                  "pending_new",
                                  "accepted_for_bidding",
                                  "stopped",
                                  "rejected",
                                  "suspended",
                                  "calculated"
                                ],
                                "example": "filled",
                                "x-stoplight": {
                                  "id": "742rdkivas7us"
                                }
                              }
                            },
                            "x-stoplight": {
                              "id": "q0bbbxhqaumis"
                            }
                          },
                          {
                            "title": "NonTradeActivity",
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2021-05-21",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "net_amount": {
                                "type": "string",
                                "format": "decimal",
                                "example": "1234",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "description": {
                                "type": "string",
                                "example": "Example description",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "executed",
                                  "correct",
                                  "canceled"
                                ],
                                "example": "executed",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "symbol": {
                                "type": "string",
                                "example": "AAPL",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "per_share_amount": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              }
                            },
                            "x-stoplight": {
                              "id": "iycf52rzeqwkt"
                            }
                          }
                        ]
                      }
                    ],
                    "required": [
                      "id",
                      "activity_type"
                    ],
                    "x-stoplight": {
                      "id": "1cd58vzvymj1a"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAccountActivities",
        "description": "Returns an array of Activities\n\nNotes:\n* Pagination is handled using the `page_token` and `page_size` parameters.\n* `page_token` represents the ID of the end of your current page of results.\n  for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results\n\n* If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.\n* If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.\n* `page_size` is the maximum number of entries to return in the response.\n* If `date` is not specified, the default and maximum value is 100.\n* If `date` is specified, the default behavior is to return all results, and there is no maximum page size."
      }
    },
    "/v1/accounts/activities/{activity_type}": {
      "parameters": [
        {
          "in": "path",
          "name": "activity_type",
          "required": true,
          "schema": {
            "type": "string",
            "enum": [
              "FILL",
              "ACATC",
              "ACATS",
              "CIL",
              "CSD",
              "CSW",
              "DIV",
              "DIVCGL",
              "DIVCGS",
              "DIVNRA",
              "DIVROC",
              "DIVTXEX",
              "FEE",
              "INT",
              "JNLC",
              "JNLS",
              "MA",
              "PTC",
              "REORG",
              "SPIN",
              "SPLIT"
            ]
          },
          "description": "see ActivityType model for details about what the different types mean"
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "id of a single account to filter by"
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported."
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported."
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported."
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            },
            "description": "The maximum number of entries to return in the response"
          },
          {
            "name": "page_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the end of your current page of results"
          }
        ],
        "summary": "Retrieve Specific Account Activities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Activity",
                    "description": "Base for activity types",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "20220208125959696::88b5f678-fef5-447b-af15-f21e367e6d8c"
                          },
                          "account_id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4"
                          },
                          "activity_type": {
                            "title": "ActivityType",
                            "type": "string",
                            "enum": [
                              "FILL",
                              "ACATC",
                              "ACATS",
                              "CIL",
                              "CSD",
                              "CSW",
                              "DIV",
                              "DIVCGL",
                              "DIVCGS",
                              "DIVNRA",
                              "DIVROC",
                              "DIVTXEX",
                              "FEE",
                              "INT",
                              "JNLC",
                              "JNLS",
                              "MA",
                              "PTC",
                              "REORG",
                              "SPIN",
                              "SPLIT"
                            ],
                            "description": "Represents the various kinds of activity.\n\nTradeActivity's will always have the type `FILL`\n\n- **FILL**\n  Order Fills (Partial/Full)\n- **ACATC**\n  ACATS IN/OUT (Cash)\n- **ACATS**\n  ACATS IN/OUT (Securities)\n- **CIL**\n  Cash in Lieu of Stock\n- **CSD**\n  Cash Disbursement (+)\n- **CSW**\n  Cash Withdrawable\n- **DIV**\n  Dividend\n- **DIVCGL**\n  Dividend (Capital Gain Long Term)\n- **DIVCGS**\n  Dividend (Capital Gain Short Term)\n- **DIVNRA**\n  Dividend Adjusted (NRA Withheld)\n- **DIVROC**\n  Dividend Return of Capital\n- **DIVTXEX**\n  Dividend (Tax Exempt)\n- **FEE**\n  REG and TAF Fees\n- **INT**\n  Interest (Credit/Margin)\n- **JNLC**\n  Journal Entry (Cash)\n- **JNLS**\n  Journal Entry (Stock)\n- **MA**\n  Merger/Acquisition\n- **PTC**\n  Pass Thru Change\n- **REORG**\n  Reorg CA\n- **SPIN**\n  Stock Spinoff\n- **SPLIT**\n  Stock Split",
                            "x-stoplight": {
                              "id": "y6utewjrnwcgk"
                            }
                          }
                        }
                      },
                      {
                        "oneOf": [
                          {
                            "title": "TradeActivity",
                            "type": "object",
                            "properties": {
                              "transaction_time": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2021-05-10T14:01:04.650275Z",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fill",
                                  "partial_fill"
                                ],
                                "example": "fill",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "price": {
                                "type": "string",
                                "format": "decimal",
                                "example": "3.1415",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell",
                                  "buy_minus",
                                  "sell_plus",
                                  "sell_short",
                                  "sell_short_exempt",
                                  "undisclosed",
                                  "cross",
                                  "cross_short"
                                ],
                                "example": "buy",
                                "description": "Represents what side of the transaction an order was on.",
                                "x-stoplight": {
                                  "id": "zrdcas15ugcl7"
                                }
                              },
                              "symbol": {
                                "type": "string",
                                "example": "AAPL",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "leaves_qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.5123",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "order_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "fe060a1b-5b45-4eba-ba46-c3a3345d8255",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "cum_qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.9723",
                                "description": "Valid only for trading activity types. Null for non-trading activites."
                              },
                              "order_status": {
                                "type": "string",
                                "enum": [
                                  "new",
                                  "partially_filled",
                                  "filled",
                                  "done_for_day",
                                  "canceled",
                                  "expired",
                                  "replaced",
                                  "pending_cancel",
                                  "pending_replace",
                                  "accepted",
                                  "pending_new",
                                  "accepted_for_bidding",
                                  "stopped",
                                  "rejected",
                                  "suspended",
                                  "calculated"
                                ],
                                "example": "filled",
                                "x-stoplight": {
                                  "id": "742rdkivas7us"
                                }
                              }
                            },
                            "x-stoplight": {
                              "id": "q0bbbxhqaumis"
                            }
                          },
                          {
                            "title": "NonTradeActivity",
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2021-05-21",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "net_amount": {
                                "type": "string",
                                "format": "decimal",
                                "example": "1234",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "description": {
                                "type": "string",
                                "example": "Example description",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "executed",
                                  "correct",
                                  "canceled"
                                ],
                                "example": "executed",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "symbol": {
                                "type": "string",
                                "example": "AAPL",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "qty": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              },
                              "per_share_amount": {
                                "type": "string",
                                "format": "decimal",
                                "example": "0.38921",
                                "description": "Valid only for non-trading activity types. Null for trading activites."
                              }
                            },
                            "x-stoplight": {
                              "id": "iycf52rzeqwkt"
                            }
                          }
                        ]
                      }
                    ],
                    "required": [
                      "id",
                      "activity_type"
                    ],
                    "x-stoplight": {
                      "id": "1cd58vzvymj1a"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAccountActivitiesByType",
        "description": "Retrieves an Array of Activies by type\n\nIf {activity_type} is provided as part of the URL, category cannot be provided as query parameter. They are mutually exclusive.\n\nNotes:\n* Pagination is handled using the `page_token` and `page_size` parameters.\n* `page_token` represents the ID of the end of your current page of results.\n  for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results\n\n* If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.\n* If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.\n* `page_size` is the maximum number of entries to return in the response.\n* If `date` is not specified, the default and maximum value is 100.\n* If `date` is specified, the default behavior is to return all results, and there is no maximum page size."
      }
    },
    "/v1/accounts/{account_id}/ach_relationships": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "summary": "Retrieve ACH Relationships for an account",
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ACHRelationship",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-16T18:38:01.942282Z",
                        "description": "Format: 2020-01-01T01:01:01Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-16T18:38:01.942282Z",
                        "description": "Format: 2020-01-01T01:01:01Z"
                      },
                      "account_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "QUEUED",
                          "APPROVED",
                          "PENDING",
                          "CANCEL_REQUESTED"
                        ]
                      },
                      "account_owner_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the account owner"
                      },
                      "bank_account_type": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "CHECKING",
                          "SAVINGS"
                        ],
                        "description": "Must be CHECKING or SAVINGS"
                      },
                      "bank_account_number": {
                        "type": "string",
                        "minLength": 1
                      },
                      "bank_routing_number": {
                        "type": "string",
                        "minLength": 1
                      },
                      "nickname": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "updated_at",
                      "account_id",
                      "status",
                      "account_owner_name"
                    ],
                    "x-stoplight": {
                      "id": "013jdl3wk8c87"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAccountACHRelationships",
        "description": "Returns a list of ACH Relationships for an account",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "statuses",
            "description": "Comma-separated status values"
          }
        ]
      },
      "post": {
        "summary": "Create an ACH Relationship",
        "operationId": "createACHRelationshipForAccount",
        "responses": {
          "200": {
            "description": "returns the newly created ACH Relationship entity.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ACHRelationship",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-03-16T18:38:01.942282Z",
                      "description": "Format: 2020-01-01T01:01:01Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-03-16T18:38:01.942282Z",
                      "description": "Format: 2020-01-01T01:01:01Z"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "QUEUED",
                        "APPROVED",
                        "PENDING",
                        "CANCEL_REQUESTED"
                      ]
                    },
                    "account_owner_name": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Name of the account owner"
                    },
                    "bank_account_type": {
                      "type": "string",
                      "minLength": 1,
                      "enum": [
                        "CHECKING",
                        "SAVINGS"
                      ],
                      "description": "Must be CHECKING or SAVINGS"
                    },
                    "bank_account_number": {
                      "type": "string",
                      "minLength": 1
                    },
                    "bank_routing_number": {
                      "type": "string",
                      "minLength": 1
                    },
                    "nickname": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "account_id",
                    "status",
                    "account_owner_name"
                  ],
                  "x-stoplight": {
                    "id": "013jdl3wk8c87"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Client is not authorized for this operation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "409": {
            "description": "The account already has an active relationship.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "description": "Create a new ACHRelationship for an account\n\nIf successful, will return 200 code with a newly created ACH Relationship entity.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Represents the fields used in creation of a new ACHRelationship.\n\nYou can create an ACHRelationship by passing the required fields here or if you have an account with Plaid you can use our integration with Plaid to create a relationship.\n\nPlease see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#plaid-integration-for-bank-transfers) for more info on using Plaid with Alpaca",
                "type": "object",
                "title": "CreateACHRelationshipRequest",
                "x-stoplight": {
                  "id": "2vv9f2s2sc8om"
                },
                "properties": {
                  "account_owner_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "bank_account_type": {
                    "type": "string",
                    "minLength": 1,
                    "enum": [
                      "CHECKING",
                      "SAVINGS"
                    ],
                    "description": "Must be `CHECKING` or `SAVINGS`"
                  },
                  "bank_account_number": {
                    "type": "string",
                    "minLength": 1,
                    "description": "In sandbox, this still must be a valid format"
                  },
                  "bank_routing_number": {
                    "type": "string",
                    "minLength": 1,
                    "description": "In sandbox, this still must be a valid format"
                  },
                  "nickname": {
                    "type": "string",
                    "minLength": 1
                  },
                  "processor_token": {
                    "type": "string",
                    "description": "If using Plaid, you can specify a Plaid processor token here "
                  },
                  "instant": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "zs4ueaei5ins9"
                    }
                  }
                },
                "required": [
                  "account_owner_name",
                  "bank_account_type",
                  "bank_account_number",
                  "bank_routing_number"
                ]
              }
            }
          },
          "description": "Create ACH Relationship "
        },
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/accounts/{account_id}/ach_relationships/{ach_relationship_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ach_relationship_id",
          "in": "path",
          "description": "ACH relationship identifier",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete an existing ACH relationship",
        "operationId": "deleteACHRelationshipFromAccount",
        "responses": {
          "204": {
            "description": "Success (No Content)"
          },
          "400": {
            "description": "the passed in account_id or relationship_id were invalid"
          },
          "404": {
            "description": "Relationship Not Found"
          }
        },
        "description": "Delete an existing ACH relationship for an account",
        "tags": [
          "Funding"
        ]
      }
    },
    "/v1/trading/accounts/{account_id}/account": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "operationId": "getTradingAccount",
        "summary": "Retrieve Trading Details for an Account",
        "tags": [
          "Accounts"
        ],
        "description": "As a broker you can view more trading details about your users.\n\nThe response is a Trading Account model.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4",
                      "account_number": "927584925",
                      "status": "ACTIVE",
                      "currency": "USD",
                      "buying_power": "103556.8572572922",
                      "regt_buying_power": "52921.2982330664",
                      "daytrading_buying_power": "103556.8572572922",
                      "cash": "24861.91",
                      "cash_withdrawable": "17861.91",
                      "cash_transferable": "24861.91",
                      "accrued_fees": "0",
                      "pending_transfer_out": "0",
                      "portfolio_value": "28059.3882330664",
                      "pattern_day_trader": true,
                      "trading_blocked": false,
                      "transfers_blocked": false,
                      "account_blocked": false,
                      "created_at": "2021-03-01T13:28:49.270232Z",
                      "trade_suspended_by_user": false,
                      "multiplier": "2",
                      "shorting_enabled": true,
                      "equity": "28059.3882330664",
                      "last_equity": "26977.323677655",
                      "long_market_value": "3197.4782330664",
                      "short_market_value": "0",
                      "initial_margin": "1598.7391165332",
                      "maintenance_margin": "959.24346991992",
                      "last_maintenance_margin": "934.6241032965",
                      "sma": "26758.0590204615",
                      "daytrade_count": 0,
                      "previous_close": "2021-04-01T19:00:00-04:00",
                      "last_long_market_value": "3115.413677655",
                      "last_short_market_value": "0",
                      "last_cash": "23861.91",
                      "last_initial_margin": "1557.7068388275",
                      "last_regt_buying_power": "50839.233677655",
                      "last_daytrading_buying_power": "104433.9158860662",
                      "last_buying_power": "104433.9158860662",
                      "last_daytrade_count": 0,
                      "clearing_broker": "VELOX"
                    },
                    "example-2": {
                      "id": "56712986-9ff7-4d8f-8e52-077e099e533e",
                      "account_number": "601612064",
                      "status": "ACTIVE",
                      "crypto_status": "PAPER_ONLY",
                      "currency": "USD",
                      "buying_power": "83567.42",
                      "regt_buying_power": "83567.42",
                      "daytrading_buying_power": "0",
                      "non_marginable_buying_power": "41783.71",
                      "cash": "83567.42",
                      "cash_withdrawable": "0",
                      "cash_transferable": "41783.71",
                      "accrued_fees": "0",
                      "pending_transfer_out": "0",
                      "pending_transfer_in": "0",
                      "portfolio_value": "83567.42",
                      "pattern_day_trader": false,
                      "trading_blocked": false,
                      "transfers_blocked": false,
                      "account_blocked": false,
                      "created_at": "2022-01-21T21:25:26.713802Z",
                      "trade_suspended_by_user": false,
                      "multiplier": "1",
                      "shorting_enabled": false,
                      "equity": "83567.42",
                      "last_equity": "41783.71",
                      "long_market_value": "0",
                      "short_market_value": "0",
                      "initial_margin": "0",
                      "maintenance_margin": "0",
                      "last_maintenance_margin": "0",
                      "sma": "0",
                      "daytrade_count": 0,
                      "previous_close": "2022-02-08T19:00:00-05:00",
                      "last_long_market_value": "0",
                      "last_short_market_value": "0",
                      "last_cash": "41783.71",
                      "last_initial_margin": "0",
                      "last_regt_buying_power": "41783.71",
                      "last_daytrading_buying_power": "0",
                      "last_buying_power": "41783.71",
                      "last_daytrade_count": 0,
                      "clearing_broker": "VELOX"
                    }
                  },
                  "description": "This is an extended version of the Account model found [in the trading api](https://alpaca.markets/docs/api-references/trading-api/account/#account-entity).\n\nExtra data has been added that would be useful for brokers.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4",
                      "format": "uuid",
                      "description": "The account ID"
                    },
                    "account_number": {
                      "type": "string",
                      "example": "927584925",
                      "description": "The account number",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE",
                      "enum": [
                        "INACTIVE",
                        "ONBOARDING",
                        "SUBMITTED",
                        "SUBMISSION_FAILED",
                        "ACTION_REQUIRED",
                        "ACCOUNT_UPDATED",
                        "APPROVAL_PENDING",
                        "APPROVED",
                        "REJECTED",
                        "ACTIVE",
                        "ACCOUNT_CLOSED"
                      ],
                      "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                      "x-stoplight": {
                        "id": "zxsbg55ojatc8"
                      }
                    },
                    "currency": {
                      "type": "string",
                      "example": "USD",
                      "description": "Always USD"
                    },
                    "buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Current available cash buying power. If multiplier = 2 then buying_power = max(equity-initial_margin(0) * 2). If multiplier = 1 then buying_power = cash."
                    },
                    "regt_buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "User’s buying power under Regulation T (excess equity - (equity - margin value) - * margin multiplier)"
                    },
                    "daytrading_buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Your buying power for day trades (continuously updated value)"
                    },
                    "cash": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Cash balance"
                    },
                    "cash_withdrawable": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Cash available for withdrawl"
                    },
                    "cash_transferable": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Cash available for transfer (JNLC)"
                    },
                    "pending_transfer_out": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Cash pending transfer out"
                    },
                    "portfolio_value": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Total value of cash + holding positions. (This field is deprecated. It is equivalent to the equity field.)"
                    },
                    "pattern_day_trader": {
                      "type": "boolean",
                      "example": false,
                      "description": "Whether account is flagged as pattern day trader or not"
                    },
                    "trading_blocked": {
                      "type": "boolean",
                      "example": false,
                      "description": "If true, the account is not allowed to place orders."
                    },
                    "transfers_blocked": {
                      "type": "boolean",
                      "example": false,
                      "description": "If true, the account is not allowed to request money transfers."
                    },
                    "account_blocked": {
                      "type": "boolean",
                      "example": false,
                      "description": "If true, the account activity by user is prohibited."
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-03-01T13:28:49.270232Z",
                      "description": "Timestamp this account was created at"
                    },
                    "trade_suspended_by_user": {
                      "type": "boolean",
                      "example": false,
                      "description": "If true, the account is not allowed to place orders."
                    },
                    "multiplier": {
                      "type": "string",
                      "format": "decimal",
                      "example": "2",
                      "description": "“1”, “2”, \"3\", or \"4\""
                    },
                    "shorting_enabled": {
                      "type": "boolean",
                      "example": false,
                      "description": "Flag to denote whether or not the account is permitted to short"
                    },
                    "equity": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "cash + long_market_value + short_market_value"
                    },
                    "last_equity": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Equity as of previous trading day at 16:00:00 ET"
                    },
                    "long_market_value": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Real-time MtM value of all long positions held in the account"
                    },
                    "short_market_value": {
                      "type": "string",
                      "example": "0",
                      "format": "decimal",
                      "description": "Real-time MtM value of all short positions held in the account"
                    },
                    "initial_margin": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Reg T initial margin requirement (continuously updated value)"
                    },
                    "maintenance_margin": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Maintenance margin requirement (continuously updated value)"
                    },
                    "last_maintenance_margin": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Maintenance margin requirement on the previous trading day"
                    },
                    "sma": {
                      "type": "string",
                      "example": "12345.6789",
                      "format": "decimal",
                      "description": "Value of Special Memorandum Account (will be used at a later date to provide additional buying_power)"
                    },
                    "daytrade_count": {
                      "type": "integer",
                      "example": 0,
                      "description": "The current number of daytrades that have been made in the last 5 trading days (inclusive of today)"
                    },
                    "previous_close": {
                      "type": "string",
                      "example": "2021-04-01T19:00:00-04:00",
                      "description": "Previous sessions close time"
                    },
                    "last_long_market_value": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of all long positions as of previous trading day at 16:00:00 ET"
                    },
                    "last_short_market_value": {
                      "type": "string",
                      "example": "0",
                      "description": "Value of all short positions as of previous trading day at 16:00:00 ET"
                    },
                    "last_cash": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of all cash as of previous trading day at 16:00:00 ET"
                    },
                    "last_initial_margin": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of Reg T margin as of previous trading day at 16:00:00 ET"
                    },
                    "last_regt_buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of Reg T buying power as of previous trading day at 16:00:00 ET"
                    },
                    "last_daytrading_buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of daytrading buying power as of previous trading day at 16:00:00 ET"
                    },
                    "last_buying_power": {
                      "type": "string",
                      "example": "12345.6789",
                      "description": "Value of buying_power as of previous trading day at 16:00:00 ET"
                    },
                    "last_daytrade_count": {
                      "type": "integer",
                      "example": 0,
                      "description": "Value of daytrade count as of previous trading day at 16:00:00 ET"
                    },
                    "clearing_broker": {
                      "type": "string",
                      "example": "Velox",
                      "description": "Clearing broker"
                    }
                  },
                  "required": [
                    "id",
                    "account_number",
                    "status",
                    "currency",
                    "created_at",
                    "last_equity",
                    "equity",
                    "cash",
                    "buying_power"
                  ],
                  "x-stoplight": {
                    "id": "fib073ib25xrv"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/trading/accounts/{account_id}/positions": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "summary": "List Open Positions for an Account",
        "tags": [
          "Trading"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "asset_id": "93f58d0b-6c53-432d-b8ce-2bad264dbd94",
                        "symbol": "AAPL",
                        "exchange": "NASDAQ",
                        "asset_class": "us_equity",
                        "asset_marginable": false,
                        "qty": "4",
                        "avg_entry_price": "172.08",
                        "side": "long",
                        "market_value": "688.32",
                        "cost_basis": "688.32",
                        "unrealized_pl": "0",
                        "unrealized_plpc": "0",
                        "unrealized_intraday_pl": "0",
                        "unrealized_intraday_plpc": "0",
                        "current_price": "172.08",
                        "lastday_price": "168.88",
                        "change_today": "0.0189483657034581"
                      }
                    },
                    "x-stoplight": {
                      "id": "b2tmookzpqlzr"
                    },
                    "properties": {
                      "asset_id": {
                        "type": "string",
                        "example": "904837e3-3b76-47ec-b432-046db621571b",
                        "format": "uuid",
                        "description": "Asset ID"
                      },
                      "symbol": {
                        "type": "string",
                        "example": "AAPL",
                        "description": "Asset symbol"
                      },
                      "exchange": {
                        "type": "string",
                        "example": "NASDAQ",
                        "description": "Exchange name of the asset"
                      },
                      "asset_class": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      },
                      "asset_marginable": {
                        "type": "boolean",
                        "description": "Indicates if this asset is marginable"
                      },
                      "avg_entry_price": {
                        "type": "string",
                        "example": "100.0",
                        "description": "Average entry price of the position"
                      },
                      "qty": {
                        "type": "string",
                        "example": "5",
                        "description": "The number of shares"
                      },
                      "side": {
                        "type": "string",
                        "example": "long",
                        "enum": [
                          "long",
                          "short"
                        ]
                      },
                      "market_value": {
                        "type": "string",
                        "format": "decimal",
                        "example": "600.0",
                        "description": "Total market value of the position"
                      },
                      "cost_basis": {
                        "type": "string",
                        "format": "decimal",
                        "example": "500.0",
                        "description": "Total cost basis"
                      },
                      "unrealized_pl": {
                        "type": "string",
                        "format": "decimal",
                        "example": "100.0",
                        "description": "Unrealized profit/loss"
                      },
                      "unrealized_plpc": {
                        "type": "string",
                        "format": "decimal",
                        "example": "0.20",
                        "description": "Unrealized profit/loss percent (by a factor of 1)"
                      },
                      "unrealized_intraday_pl": {
                        "type": "string",
                        "format": "decimal",
                        "example": "10.0",
                        "description": "Unrealized profit/loss for the day"
                      },
                      "unrealized_intraday_plpc": {
                        "type": "string",
                        "format": "decimal",
                        "example": "0.0084",
                        "description": "Unrealized interday profit/loss percent (by a factor of 1)"
                      },
                      "current_price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "120.0",
                        "description": "Current asset price per share"
                      },
                      "lastday_price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "119.0",
                        "description": "Last day’s asset price per share based on the closing value of the last trading day"
                      },
                      "change_today": {
                        "type": "string",
                        "format": "decimal",
                        "example": "0.0084",
                        "description": "Percent change from last day price (by a factor of 1)"
                      },
                      "swap_rate": {
                        "type": "string",
                        "format": "decimal",
                        "description": "The latest swap rate. This is only returned for LCT accounts.",
                        "example": "1.50",
                        "x-stoplight": {
                          "id": "t02dt3rtisrkx"
                        }
                      },
                      "avg_entry_swap_rate": {
                        "type": "string",
                        "format": "decimal",
                        "description": "The average swap rate of the position. This is only returned for LCT accounts.",
                        "example": "1.40",
                        "x-stoplight": {
                          "id": "a0kh9eu3byvfp"
                        }
                      },
                      "usd": {
                        "title": "USDPosition",
                        "description": "Position values in USD. This is returned for LCT (non-USD) accounts only.",
                        "type": "object",
                        "properties": {
                          "avg_entry_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Average entry price of the position in USD",
                            "example": "71.43"
                          },
                          "market_value": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Total market value of the position in USD",
                            "example": "400.00"
                          },
                          "cost_basis": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Total cost basis in USD",
                            "example": "333.33"
                          },
                          "unrealized_pl": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Unrealized profit/loss in USD",
                            "example": "66.67"
                          },
                          "unrealized_plpc": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Unrealized profit/loss percent (by a factor of 1)",
                            "example": "0.2"
                          },
                          "unrealized_intraday_pl": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Unrealized profit/loss in USD for the day",
                            "example": "6.67"
                          },
                          "unrealized_intraday_plpc": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Unrealized interday profit/loss percent (by a factor of 1)",
                            "example": "0.0084"
                          },
                          "current_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Current asset price per share in USD",
                            "example": "80.0"
                          },
                          "lastday_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Last day’s asset price per share based on the closing value of the last trading day in USD",
                            "example": "79.33"
                          },
                          "change_today": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Percent change from last day price (by a factor of 1)",
                            "example": "0.67"
                          }
                        }
                      }
                    },
                    "required": [
                      "asset_id",
                      "symbol",
                      "exchange",
                      "asset_class",
                      "avg_entry_price",
                      "qty",
                      "side",
                      "market_value",
                      "cost_basis",
                      "unrealized_pl",
                      "unrealized_plpc",
                      "unrealized_intraday_pl",
                      "unrealized_intraday_plpc",
                      "current_price",
                      "lastday_price",
                      "change_today"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getPositionsForAccount",
        "description": "List open positions for an account"
      },
      "delete": {
        "summary": "Close All Positions for an Account",
        "operationId": "closeAllPositionsForAccount",
        "responses": {
          "207": {
            "description": "HTTP 207 Multi-Status with body; an array of objects that include the order id and http status code for each status request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionClosedResponse"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "symbol": "TSLA",
                        "status": 200,
                        "body": {
                          "id": "d1143025-89fc-4952-8936-db2409d899f3",
                          "client_order_id": "17dbfab4-cb86-4e0a-8fa6-f0606b0a9a4e",
                          "created_at": "2022-05-13T16:25:29.336330998Z",
                          "updated_at": "2022-05-13T16:25:29.336330998Z",
                          "submitted_at": "2022-05-13T16:25:29.335776073Z",
                          "filled_at": null,
                          "expired_at": null,
                          "canceled_at": null,
                          "failed_at": null,
                          "replaced_at": null,
                          "replaced_by": null,
                          "replaces": null,
                          "asset_id": "a4778bc8-fad1-47b7-87fe-d5cde10d43f4",
                          "symbol": "TSLA",
                          "asset_class": "us_equity",
                          "notional": null,
                          "qty": "4",
                          "filled_qty": "0",
                          "filled_avg_price": null,
                          "order_class": "",
                          "order_type": "market",
                          "type": "market",
                          "side": "sell",
                          "time_in_force": "day",
                          "limit_price": null,
                          "stop_price": null,
                          "status": "accepted",
                          "extended_hours": false,
                          "legs": null,
                          "trail_percent": null,
                          "trail_price": null,
                          "hwm": null,
                          "source": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to liquidate some positions"
          }
        },
        "description": "Closes (liquidates) all of the account’s open long and short positions. A response will be provided for each order that is attempted to be cancelled. If an order is no longer cancelable, the server will respond with status 500 and reject the request.",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "cancel_orders",
            "description": "If true is specified, cancel all open orders before liquidating all positions."
          }
        ],
        "tags": [
          "Trading"
        ]
      }
    },
    "/v1/trading/accounts/{account_id}/positions/{symbol_or_asset_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "symbol_or_asset_id",
          "in": "path",
          "required": true,
          "description": "The symbol or asset_id "
        }
      ],
      "get": {
        "summary": "Get an Open Position for account by Symbol or AssetId",
        "responses": {
          "200": {
            "description": "The requested Position object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "asset_id": "93f58d0b-6c53-432d-b8ce-2bad264dbd94",
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "asset_class": "us_equity",
                      "asset_marginable": false,
                      "qty": "4",
                      "avg_entry_price": "172.08",
                      "side": "long",
                      "market_value": "688.32",
                      "cost_basis": "688.32",
                      "unrealized_pl": "0",
                      "unrealized_plpc": "0",
                      "unrealized_intraday_pl": "0",
                      "unrealized_intraday_plpc": "0",
                      "current_price": "172.08",
                      "lastday_price": "168.88",
                      "change_today": "0.0189483657034581"
                    }
                  },
                  "x-stoplight": {
                    "id": "b2tmookzpqlzr"
                  },
                  "properties": {
                    "asset_id": {
                      "type": "string",
                      "example": "904837e3-3b76-47ec-b432-046db621571b",
                      "format": "uuid",
                      "description": "Asset ID"
                    },
                    "symbol": {
                      "type": "string",
                      "example": "AAPL",
                      "description": "Asset symbol"
                    },
                    "exchange": {
                      "type": "string",
                      "example": "NASDAQ",
                      "description": "Exchange name of the asset"
                    },
                    "asset_class": {
                      "type": "string",
                      "enum": [
                        "us_equity",
                        "crypto"
                      ],
                      "x-stoplight": {
                        "id": "0stvwzkbv2e0u"
                      }
                    },
                    "asset_marginable": {
                      "type": "boolean",
                      "description": "Indicates if this asset is marginable"
                    },
                    "avg_entry_price": {
                      "type": "string",
                      "example": "100.0",
                      "description": "Average entry price of the position"
                    },
                    "qty": {
                      "type": "string",
                      "example": "5",
                      "description": "The number of shares"
                    },
                    "side": {
                      "type": "string",
                      "example": "long",
                      "enum": [
                        "long",
                        "short"
                      ]
                    },
                    "market_value": {
                      "type": "string",
                      "format": "decimal",
                      "example": "600.0",
                      "description": "Total market value of the position"
                    },
                    "cost_basis": {
                      "type": "string",
                      "format": "decimal",
                      "example": "500.0",
                      "description": "Total cost basis"
                    },
                    "unrealized_pl": {
                      "type": "string",
                      "format": "decimal",
                      "example": "100.0",
                      "description": "Unrealized profit/loss"
                    },
                    "unrealized_plpc": {
                      "type": "string",
                      "format": "decimal",
                      "example": "0.20",
                      "description": "Unrealized profit/loss percent (by a factor of 1)"
                    },
                    "unrealized_intraday_pl": {
                      "type": "string",
                      "format": "decimal",
                      "example": "10.0",
                      "description": "Unrealized profit/loss for the day"
                    },
                    "unrealized_intraday_plpc": {
                      "type": "string",
                      "format": "decimal",
                      "example": "0.0084",
                      "description": "Unrealized interday profit/loss percent (by a factor of 1)"
                    },
                    "current_price": {
                      "type": "string",
                      "format": "decimal",
                      "example": "120.0",
                      "description": "Current asset price per share"
                    },
                    "lastday_price": {
                      "type": "string",
                      "format": "decimal",
                      "example": "119.0",
                      "description": "Last day’s asset price per share based on the closing value of the last trading day"
                    },
                    "change_today": {
                      "type": "string",
                      "format": "decimal",
                      "example": "0.0084",
                      "description": "Percent change from last day price (by a factor of 1)"
                    },
                    "swap_rate": {
                      "type": "string",
                      "format": "decimal",
                      "description": "The latest swap rate. This is only returned for LCT accounts.",
                      "example": "1.50",
                      "x-stoplight": {
                        "id": "t02dt3rtisrkx"
                      }
                    },
                    "avg_entry_swap_rate": {
                      "type": "string",
                      "format": "decimal",
                      "description": "The average swap rate of the position. This is only returned for LCT accounts.",
                      "example": "1.40",
                      "x-stoplight": {
                        "id": "a0kh9eu3byvfp"
                      }
                    },
                    "usd": {
                      "title": "USDPosition",
                      "description": "Position values in USD. This is returned for LCT (non-USD) accounts only.",
                      "type": "object",
                      "properties": {
                        "avg_entry_price": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Average entry price of the position in USD",
                          "example": "71.43"
                        },
                        "market_value": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Total market value of the position in USD",
                          "example": "400.00"
                        },
                        "cost_basis": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Total cost basis in USD",
                          "example": "333.33"
                        },
                        "unrealized_pl": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Unrealized profit/loss in USD",
                          "example": "66.67"
                        },
                        "unrealized_plpc": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Unrealized profit/loss percent (by a factor of 1)",
                          "example": "0.2"
                        },
                        "unrealized_intraday_pl": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Unrealized profit/loss in USD for the day",
                          "example": "6.67"
                        },
                        "unrealized_intraday_plpc": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Unrealized interday profit/loss percent (by a factor of 1)",
                          "example": "0.0084"
                        },
                        "current_price": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Current asset price per share in USD",
                          "example": "80.0"
                        },
                        "lastday_price": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Last day’s asset price per share based on the closing value of the last trading day in USD",
                          "example": "79.33"
                        },
                        "change_today": {
                          "type": "string",
                          "format": "decimal",
                          "description": "Percent change from last day price (by a factor of 1)",
                          "example": "0.67"
                        }
                      }
                    }
                  },
                  "required": [
                    "asset_id",
                    "symbol",
                    "exchange",
                    "asset_class",
                    "avg_entry_price",
                    "qty",
                    "side",
                    "market_value",
                    "cost_basis",
                    "unrealized_pl",
                    "unrealized_plpc",
                    "unrealized_intraday_pl",
                    "unrealized_intraday_plpc",
                    "current_price",
                    "lastday_price",
                    "change_today"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Account doesn't have a position for this symbol or asset_id "
          }
        },
        "operationId": "getPositionsForAccountBySymbol",
        "description": "Retrieves the account’s open position for the given symbol or asset_id.",
        "tags": [
          "Trading"
        ]
      },
      "delete": {
        "summary": "Close a Position for an Account",
        "operationId": "closePositionForAccountBySymbol",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "description": "Closes (liquidates) the account’s open position for the given symbol. Works for both long and short positions.",
        "tags": [
          "Trading"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "qty",
            "description": "Optional the number of shares to liquidate. Can accept up to 9 decimal points. Cannot work with percentage"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "percentage of position to liquidate. Must be between 0 and 100. Would only sell fractional if position is originally fractional. Can accept up to 9 decimal points. Cannot work with qty",
            "name": "percentage"
          }
        ]
      }
    },
    "/v1/trading/accounts/{account_id}/orders/{order_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "description": "Order identifier.",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve an Order by its ID.",
        "tags": [
          "Trading"
        ],
        "description": "Retrieves a single order for the given order_id.",
        "responses": {
          "200": {
            "description": "The requested Order object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "getOrderForAccount"
      },
      "patch": {
        "summary": "Replace an Order",
        "tags": [
          "Trading"
        ],
        "description": "Replaces a single order with updated parameters. Each parameter overrides the corresponding attribute of the existing order. The other attributes remain the same as the existing order.\n\nA success return code from a replaced order does NOT guarantee the existing open order has been replaced. If the existing open order is filled before the replacing (new) order reaches the execution venue, the replacing (new) order is rejected, and these events are sent in the trade_updates stream channel found [here in the market data api](https://alpaca.markets/docs/api-references/market-data-api/#order-updates).\n\nWhile an order is being replaced, the account's buying power is reduced by the larger of the two orders that have been placed (the old order being replaced, and the newly placed order to replace it). If you are replacing a buy entry order with a higher limit price than the original order, the buying power is calculated based on the newly placed order. If you are replacing it with a lower limit price, the buying power is calculated based on the old order.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "OrderUpdateRequest",
                "description": "Represents the fields that are editable in an order replace/update call.\n\nNote: client_order_id is currently not editable on its own, one of the other fields must be changed at the same time to effectively replace the order",
                "properties": {
                  "qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "4.2",
                    "description": "You can only patch full shares for now"
                  },
                  "time_in_force": {
                    "type": "string",
                    "enum": [
                      "day",
                      "gtc",
                      "opg",
                      "cls",
                      "ioc",
                      "fok"
                    ],
                    "example": "gtc",
                    "x-stoplight": {
                      "id": "fcff27bvys4gi"
                    }
                  },
                  "limit_price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "Required if original order's `type` field was limit or stop_limit"
                  },
                  "stop_price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "Required if original order's `type` field was stop or stop_limit"
                  },
                  "trail": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "The new value of the trail_price or trail_percent"
                  },
                  "client_order_id": {
                    "type": "string",
                    "example": "61e69015-8549-4bfd-b9c3-01e75843f47d"
                  }
                },
                "x-stoplight": {
                  "id": "iip4vylvgdefq"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A new Order object with a new order_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Buying power or shares are not sufficient"
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "replaceOrderForAccount"
      },
      "delete": {
        "summary": "Cancel an Open Order",
        "tags": [
          "Trading"
        ],
        "description": "Attempts to cancel an open order. If the order is no longer cancelable (for example if the status is \"filled\"), the server will respond with status 422, and reject the request.\n\nUpon acceptance of the cancel request, it returns status 204.",
        "responses": {
          "204": {
            "description": "Success (No Content)"
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteOrderForAccount"
      }
    },
    "/v1/trading/accounts/{account_id}/orders": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Order status to be queried. open, closed or all. Defaults to open.",
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "all"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of orders in response. Defaults to 50 and max is 500.",
            "schema": {
              "type": "integer",
              "example": 500
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The response will include only ones submitted after this timestamp (exclusive.)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-16T18:38:01.942282Z"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "The response will include only ones submitted until this timestamp (exclusive.)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-16T18:38:01.942282Z"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "nested",
            "description": "If true, the result will roll up multi-leg orders under the legs field of primary order."
          },
          {
            "name": "symbols",
            "in": "query",
            "description": "A comma-separated list of symbols to filter by.",
            "schema": {
              "type": "string",
              "example": "AAPL,TSLA,MSFT"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "qty_above"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "qty_below"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subtag"
          }
        ],
        "summary": "Retrieve a List of Orders",
        "tags": [
          "Trading"
        ],
        "description": "Retrieves a list of orders for the account, filtered by the supplied query parameters.\n\nEndpoint defaults to open orders if no parameters are provided.",
        "responses": {
          "200": {
            "description": "Retrieves a list of orders for the account, filtered by the supplied query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "getAllOrdersForAccount"
      },
      "post": {
        "summary": "Create an Order for an Account.",
        "tags": [
          "Trading"
        ],
        "description": "Creating an order for your end customer. Each trading request must pass in the account_id in the URL.\n\nNote that when submitting crypto orders, Market, Limit and Stop Limit orders are supported while the supported time_in_force values are gtc, and ioc. We accept fractional orders as well with either notional or qty provided.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-stoplight": {
                  "id": "d27prln6qqj0i"
                },
                "properties": {
                  "symbol": {
                    "type": "string",
                    "example": "AAPL",
                    "description": "Symbol or asset ID to identify the asset to trade"
                  },
                  "qty": {
                    "type": "string",
                    "format": "decimal",
                    "example": "4.124",
                    "description": "Number of shares to trade. Can be fractionable for only market and day order types."
                  },
                  "notional": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3",
                    "description": "Dollar amount to trade. Cannot work with qty. Can only work for market order types and time_in_force = day."
                  },
                  "side": {
                    "type": "string",
                    "enum": [
                      "buy",
                      "sell",
                      "buy_minus",
                      "sell_plus",
                      "sell_short",
                      "sell_short_exempt",
                      "undisclosed",
                      "cross",
                      "cross_short"
                    ],
                    "example": "buy",
                    "description": "Represents what side of the transaction an order was on.",
                    "x-stoplight": {
                      "id": "zrdcas15ugcl7"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "market",
                      "limit",
                      "stop",
                      "stop_limit",
                      "trailing_stop"
                    ],
                    "example": "stop"
                  },
                  "time_in_force": {
                    "type": "string",
                    "enum": [
                      "day",
                      "gtc",
                      "opg",
                      "cls",
                      "ioc",
                      "fok"
                    ],
                    "example": "gtc",
                    "x-stoplight": {
                      "id": "fcff27bvys4gi"
                    }
                  },
                  "limit_price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "Required if type is limit or stop_limit"
                  },
                  "stop_price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "Required if type is stop or stop_limit"
                  },
                  "trail_price": {
                    "type": "string",
                    "format": "decimal",
                    "example": "3.14",
                    "description": "If type is trailing_stop, then one of trail_price or trail_percent is required"
                  },
                  "trail_percent": {
                    "type": "string",
                    "format": "decimal",
                    "example": "5.0",
                    "description": "If type is trailing_stop, then one of trail_price or trail_percent is required"
                  },
                  "extended_hours": {
                    "type": "boolean",
                    "example": false,
                    "description": "Defaults to false. If true, order will be eligible to execute in premarket/afterhours. Only works with type limit and time_in_force = day."
                  },
                  "client_order_id": {
                    "type": "string",
                    "example": "eb9e2aaa-f71a-4f51-b5b4-52a6c565dad4",
                    "description": "A unique identifier for the order. Automatically generated if not sent. (<= 48 characters)",
                    "maxLength": 48
                  },
                  "order_class": {
                    "type": "string",
                    "enum": [
                      "simple",
                      "bracket",
                      "oco",
                      "oto"
                    ],
                    "example": "bracket",
                    "x-stoplight": {
                      "id": "5lrkevtge17ap"
                    }
                  },
                  "take_profit": {
                    "type": "object",
                    "description": "Takes in a string/number value for limit_price",
                    "properties": {
                      "limit_price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "3.14"
                      }
                    }
                  },
                  "stop_loss": {
                    "description": "Takes in a string/number values for stop_price and limit_price",
                    "type": "object",
                    "properties": {
                      "stop_price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "3.14"
                      },
                      "limit_price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "3.14"
                      }
                    }
                  },
                  "commission": {
                    "type": "string",
                    "format": "decimal",
                    "example": "1.0",
                    "description": "The commission you want to collect from the user."
                  },
                  "commission_bps": {
                    "type": "string",
                    "format": "decimal",
                    "example": "10",
                    "description": "The percent commission you want to charge the end user on the order (expressed in bps). Alpaca will convert the order to a notional amount for purposes of calculating commission"
                  },
                  "source": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "6lusmwaj5fmzf"
                    }
                  },
                  "instructions": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "8jlb3tz44l3tl"
                    }
                  },
                  "subtag": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "zajfuuduk4uss"
                    }
                  },
                  "swap_fee_bps": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "hs4bv5gu00jjh"
                    },
                    "format": "decimal"
                  }
                },
                "required": [
                  "symbol",
                  "side",
                  "type",
                  "time_in_force"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Request is forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Some parameters are not valid"
          }
        },
        "operationId": "createOrderForAccount"
      },
      "delete": {
        "summary": "Cancel all Open Orders For an Account",
        "tags": [
          "Trading"
        ],
        "description": "Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled.",
        "responses": {
          "207": {
            "description": "HTTP 207 Multi-Status with body, which is an array of objects that include the order id, http status code and an order object for each cancellation request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderClosedResponse"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": "872994c5-0620-40ad-8ae0-f224b9948df5",
                        "status": 200
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteAllOrdersForAccount"
      }
    },
    "/v1/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve All Assets",
        "description": "Returns all assets",
        "responses": {
          "200": {
            "description": "An array of asset objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Asset",
                    "type": "object",
                    "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                    "x-stoplight": {
                      "id": "2bnou9t588bau"
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "904837e3-3b76-47ec-b432-046db621571b",
                        "format": "uuid",
                        "description": "Asset ID"
                      },
                      "class": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      },
                      "exchange": {
                        "type": "string",
                        "title": "Exchange",
                        "example": "NASDAQ",
                        "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                        "enum": [
                          "AMEX",
                          "ARCA",
                          "BATS",
                          "NYSE",
                          "NASDAQ",
                          "NYSEARCA",
                          "OTC",
                          "ERSX",
                          "FTXU"
                        ],
                        "x-stoplight": {
                          "id": "og9z1j3oimssn"
                        }
                      },
                      "symbol": {
                        "type": "string",
                        "example": "AAPL",
                        "description": "The symbol of the asset"
                      },
                      "name": {
                        "type": "string",
                        "example": "Apple Inc. Common Stock",
                        "description": "The official name of the asset"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "inactive"
                        ],
                        "description": "active or inactive",
                        "example": "active"
                      },
                      "tradable": {
                        "type": "boolean",
                        "example": true,
                        "description": "Asset is tradable on Alpaca or not"
                      },
                      "marginable": {
                        "type": "boolean",
                        "example": true,
                        "description": "Asset is marginable or not"
                      },
                      "shortable": {
                        "type": "boolean",
                        "example": true,
                        "description": "Asset is shortable or not"
                      },
                      "easy_to_borrow": {
                        "type": "boolean",
                        "example": true,
                        "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                      },
                      "fractionable": {
                        "type": "boolean",
                        "example": true,
                        "description": "Asset is fractionable or not"
                      },
                      "last_close_pct_change": {
                        "type": "string",
                        "format": "decimal",
                        "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                      },
                      "last_price": {
                        "type": "string",
                        "format": "decimal",
                        "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                      },
                      "last_close": {
                        "type": "string",
                        "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                        "format": "decimal"
                      },
                      "min_order_size": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "8oxfe2lh08pa5"
                        },
                        "description": "Minimum order size.  Field available for crypto only."
                      },
                      "min_trade_increment": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "9x4innaekt0bo"
                        },
                        "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                      },
                      "price_increment": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "y3hwtbjswugep"
                        },
                        "description": "Amount the price can be incremented by. Field available for crypto only."
                      },
                      "maintenance_margin_requirement": {
                        "type": "number",
                        "x-stoplight": {
                          "id": "w0vp53j3weqge"
                        },
                        "description": "Shows the % margin requirement for the asset (equities only)."
                      },
                      "attributes": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "o1v8vair7lg7a"
                        },
                        "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                        "items": {
                          "x-stoplight": {
                            "id": "8q7bxjwl5evxu"
                          },
                          "type": "string",
                          "enum": [
                            "ptp_no_exception",
                            "ptp_with_exception",
                            "ipo"
                          ]
                        },
                        "example": [
                          "ptp_no_exception",
                          "ipo"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "class",
                      "symbol"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getAssets",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "all"
              ],
              "example": "all",
              "default": "all"
            },
            "in": "query",
            "name": "status",
            "description": "Asset status to filter by, will default to `all`"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "us_equity",
                "crypto"
              ],
              "example": "us_equity",
              "default": "us_equity"
            },
            "in": "query",
            "name": "asset_class",
            "description": "Asset class to filter by, `us_equity` or `crypto`. Defaults to `us_equity`"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ptp_no_exception",
                  "ptp_with_exception",
                  "ipo"
                ]
              },
              "example": [
                "ptp_no_exception",
                "ipo"
              ],
              "default": []
            },
            "in": "query",
            "name": "attributes",
            "description": "Comma separated values to query for more than one attribute. Assets which have any of the given attributes will be included.",
            "explode": false
          }
        ]
      }
    },
    "/v1/assets/{symbol_or_asset_id}": {
      "parameters": [
        {
          "name": "symbol_or_asset_id",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string"
          },
          "description": "you can use either the asset's Id or the symbol to search"
        }
      ],
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve an Asset by ID",
        "description": "Returns the requested asset, if found",
        "responses": {
          "200": {
            "description": "Returns asset",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Asset",
                  "type": "object",
                  "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                  "x-stoplight": {
                    "id": "2bnou9t588bau"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "904837e3-3b76-47ec-b432-046db621571b",
                      "format": "uuid",
                      "description": "Asset ID"
                    },
                    "class": {
                      "type": "string",
                      "enum": [
                        "us_equity",
                        "crypto"
                      ],
                      "x-stoplight": {
                        "id": "0stvwzkbv2e0u"
                      }
                    },
                    "exchange": {
                      "type": "string",
                      "title": "Exchange",
                      "example": "NASDAQ",
                      "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                      "enum": [
                        "AMEX",
                        "ARCA",
                        "BATS",
                        "NYSE",
                        "NASDAQ",
                        "NYSEARCA",
                        "OTC",
                        "ERSX",
                        "FTXU"
                      ],
                      "x-stoplight": {
                        "id": "og9z1j3oimssn"
                      }
                    },
                    "symbol": {
                      "type": "string",
                      "example": "AAPL",
                      "description": "The symbol of the asset"
                    },
                    "name": {
                      "type": "string",
                      "example": "Apple Inc. Common Stock",
                      "description": "The official name of the asset"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "active or inactive",
                      "example": "active"
                    },
                    "tradable": {
                      "type": "boolean",
                      "example": true,
                      "description": "Asset is tradable on Alpaca or not"
                    },
                    "marginable": {
                      "type": "boolean",
                      "example": true,
                      "description": "Asset is marginable or not"
                    },
                    "shortable": {
                      "type": "boolean",
                      "example": true,
                      "description": "Asset is shortable or not"
                    },
                    "easy_to_borrow": {
                      "type": "boolean",
                      "example": true,
                      "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                    },
                    "fractionable": {
                      "type": "boolean",
                      "example": true,
                      "description": "Asset is fractionable or not"
                    },
                    "last_close_pct_change": {
                      "type": "string",
                      "format": "decimal",
                      "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                    },
                    "last_price": {
                      "type": "string",
                      "format": "decimal",
                      "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                    },
                    "last_close": {
                      "type": "string",
                      "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                      "format": "decimal"
                    },
                    "min_order_size": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "8oxfe2lh08pa5"
                      },
                      "description": "Minimum order size.  Field available for crypto only."
                    },
                    "min_trade_increment": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "9x4innaekt0bo"
                      },
                      "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                    },
                    "price_increment": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "y3hwtbjswugep"
                      },
                      "description": "Amount the price can be incremented by. Field available for crypto only."
                    },
                    "maintenance_margin_requirement": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "w0vp53j3weqge"
                      },
                      "description": "Shows the % margin requirement for the asset (equities only)."
                    },
                    "attributes": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "o1v8vair7lg7a"
                      },
                      "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                      "items": {
                        "x-stoplight": {
                          "id": "8q7bxjwl5evxu"
                        },
                        "type": "string",
                        "enum": [
                          "ptp_no_exception",
                          "ptp_with_exception",
                          "ipo"
                        ]
                      },
                      "example": [
                        "ptp_no_exception",
                        "ipo"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "class",
                    "symbol"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          }
        },
        "operationId": "getAssetBySymbolOrId"
      }
    },
    "/v1/calendar": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Retrieve the Market Calendar",
        "parameters": [
          {
            "name": "start",
            "description": "The first date to retrieve data for. (Inclusive) in YYYY-MM-DD format",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "end",
            "description": "The last date to retrieve data for. (Inclusive) in YYYY-MM-DD format",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "date_type",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "‘trading’ or ‘settlement’. Default value is ‘trading’. Indicates to filter by trade date or settlement date if start or end are specified."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the calendar object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Calendar",
                    "type": "object",
                    "description": "The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.",
                    "x-stoplight": {
                      "id": "6w3glz9nvzann"
                    },
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": "2021-04-06",
                        "format": "date",
                        "description": "Date string in YYYY-MM-DD format"
                      },
                      "open": {
                        "type": "string",
                        "example": "09:30",
                        "description": "The time the market opens at on this date in HH:MM format"
                      },
                      "close": {
                        "type": "string",
                        "example": "16:00",
                        "description": "The time the market closes at on this date in HH:MM format"
                      },
                      "session_open": {
                        "type": "string",
                        "example": "0700",
                        "deprecated": true,
                        "description": "this field has been deprecated please ignore"
                      },
                      "session_close": {
                        "type": "string",
                        "example": "1900",
                        "deprecated": true,
                        "description": "this field has been deprecated please ignore"
                      },
                      "settlement_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "6lmmqwon4mjk0"
                        },
                        "description": "Date string in “%Y-%m-%d” format. representing the settlement date for the trade date"
                      }
                    },
                    "required": [
                      "date",
                      "open",
                      "close"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "queryMarketCalendar",
        "description": "The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures."
      }
    },
    "/v1/clock": {
      "get": {
        "tags": [
          "Clock"
        ],
        "summary": "Retrieve the Market Clock",
        "responses": {
          "200": {
            "description": "The current market's timestamp",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Represents the current market time and open/close events.",
                  "type": "object",
                  "x-examples": {
                    "example": {
                      "timestamp": "2018-04-01T12:00:00.000Z",
                      "is_open": true,
                      "next_open": "2018-04-01T12:00:00.000Z",
                      "next_close": "2018-04-01T12:00:00.000Z"
                    },
                    "example-1": {
                      "timestamp": "2022-02-16T13:06:05.210563128-05:00",
                      "is_open": true,
                      "next_open": "2022-02-17T09:30:00-05:00",
                      "next_close": "2022-02-16T16:00:00-05:00"
                    }
                  },
                  "title": "Clock",
                  "x-stoplight": {
                    "id": "rfhpxij3x0o6m"
                  },
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time",
                      "description": "Current timestamp",
                      "example": "2022-02-16T13:06:05.210563128-05:00"
                    },
                    "is_open": {
                      "type": "boolean",
                      "description": "Whether the market is open or not"
                    },
                    "next_open": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time",
                      "description": "Next market open timestamp - inclusive of timestamp"
                    },
                    "next_close": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time",
                      "description": "Next market close timestamp - inclusive of timestamp"
                    }
                  },
                  "required": [
                    "timestamp",
                    "is_open",
                    "next_open",
                    "next_close"
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "queryMarketClock",
        "description": "The Clock API serves the current market timestamp, whether or not the market is currently open, as well as the times of the next market open and close."
      }
    },
    "/v1/country-info": {
      "get": {
        "tags": [
          "Country Info"
        ],
        "summary": "Retrieve countries information",
        "responses": {
          "200": {
            "description": "Returns the countries information as a map",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Represents the info for countries as a map where the keys are the ISO 3166 country codes.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Represents the info for a country.",
                    "type": "object",
                    "x-examples": {
                      "example": "\"ZAF\": {\n    \"full_name\": \"South Africa\",\n    \"crypto_risk_rating\": \"high\",\n    \"securities_risk_rating\": \"high\"\n}\n",
                      "example-1": "\"USA\": {\n  \"full_name\": \"United States of America\",\n  \"crypto_risk_rating\": \"medium\",\n  \"securities_risk_rating\": \"medium\",\n  \"crypto_supported_states\": [\n      \"CA\",\n      \"CT\",\n      \"GA\",\n      \"IA\",\n      \"ID\",\n      \"IL\",\n      \"IN\",\n      \"KS\",\n      \"KY\",\n      \"MA\",\n      \"MD\",\n      \"ME\",\n      \"MI\",\n      \"MS\",\n      \"MO\",\n      \"MT\",\n      \"NC\",\n      \"ND\",\n      \"NE\",\n      \"OH\",\n      \"RI\",\n      \"SD\",\n      \"UT\",\n      \"VT\",\n      \"WA\"\n  ]\n}\n"
                    },
                    "title": "CountryInfo",
                    "x-stoplight": {
                      "id": "k7nxrton4myk1"
                    },
                    "properties": {
                      "full_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The full name of the country definded by ISO 3166-1",
                        "example": "Åland Islands"
                      },
                      "crypto_risk_rating": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high",
                          "prohibited"
                        ],
                        "description": "crypto risk rating of the country"
                      },
                      "securities_risk_rating": {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high",
                          "prohibited"
                        ],
                        "description": "the securities risk rating of the country"
                      },
                      "crypto_supported_states": {
                        "type": "array",
                        "description": "states where Alpaca supports crypto trading",
                        "items": {
                          "type": "string",
                          "description": "the state code defined by ISO 3166-2"
                        }
                      }
                    },
                    "required": [
                      "full_name",
                      "securities_risk_rating",
                      "crypto_risk_rating"
                    ]
                  },
                  "title": "CountryInfos",
                  "x-stoplight": {
                    "id": "5lnmrwon3mjk0"
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "queryCountryInfos",
        "description": "The Country Info API serves country information for every supported countries including risk ratings and supported crypto states where applicable."
      }
    },
    "/v1/events/accounts/status": {
      "get": {
        "summary": "Subscribe to Account Status Events (SSE)",
        "tags": [
          "Events"
        ],
        "description": "Events API provide event push as well as historical queries via SSE (server sent events).\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since_ulid` required if `until_ulid` specified\n- `since`, `since_id` or `since_ulid`  can’t be used at the same time\nBehavior:\n- if `since`, `since_id` or `since_ulid` not specified this will not return any historic data\n- if `until`, `until_id` or `until_ulid` reached stream will end (status 200)\n\n---\n\nNote for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "since_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Represents a change in an Account's status, sent over the events streaming api.\n\nFor partners who utilize Alpaca’s KYC service for opening brokerage accounts an additional `kyc_results` object is represented in the account status update events.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "account_id": "4db36989-6565-4011-9126-39fe6b3d9bf6",
                        "account_number": "",
                        "at": "2021-06-14T09:59:15.232782Z",
                        "event_id": 122039,
                        "event_ulid": "01F84ZC0H0Q1QN7XPNWX44HF5J",
                        "kyc_results": null,
                        "status_from": "",
                        "status_to": "APPROVED"
                      }
                    },
                    "title": "AccountStatusEvent",
                    "x-stoplight": {
                      "id": "u28ukdg1k63c1"
                    },
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "account_number": {
                        "type": "string",
                        "minLength": 1
                      },
                      "status_from": {
                        "type": "string",
                        "example": "ACTIVE",
                        "enum": [
                          "INACTIVE",
                          "ONBOARDING",
                          "SUBMITTED",
                          "SUBMISSION_FAILED",
                          "ACTION_REQUIRED",
                          "ACCOUNT_UPDATED",
                          "APPROVAL_PENDING",
                          "APPROVED",
                          "REJECTED",
                          "ACTIVE",
                          "ACCOUNT_CLOSED"
                        ],
                        "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                        "x-stoplight": {
                          "id": "zxsbg55ojatc8"
                        }
                      },
                      "status_to": {
                        "type": "string",
                        "example": "ACTIVE",
                        "enum": [
                          "INACTIVE",
                          "ONBOARDING",
                          "SUBMITTED",
                          "SUBMISSION_FAILED",
                          "ACTION_REQUIRED",
                          "ACCOUNT_UPDATED",
                          "APPROVAL_PENDING",
                          "APPROVED",
                          "REJECTED",
                          "ACTIVE",
                          "ACCOUNT_CLOSED"
                        ],
                        "description": "Designates the current status of this account\n\nPossible Values:\n- **INACTIVE**\nAccount not set to trade given asset.\n- **ONBOARDING**\nAn application is expected for this user, but has not been submitted yet.\n- **SUBMITTED**\nThe application has been submitted and in process.\n- **SUBMISSION_FAILED**\nUsed to display if failure on submission\n- **ACTION_REQUIRED**\nThe application requires manual action.\n- **ACCOUNT_UPDATED**\nUsed to display when Account has been modified by user\n- **APPROVAL_PENDING**\nInitial value. The application approval process is in process.\n- **APPROVED**\nThe account application has been approved, and waiting to be ACTIVE\n- **REJECTED**\nThe account application is rejected for some reason\n- **ACTIVE**\nThe account is fully active. Trading and funding are processed under this status.\n- **ACCOUNT_CLOSED**\nThe account is closed.\n",
                        "x-stoplight": {
                          "id": "zxsbg55ojatc8"
                        }
                      },
                      "reason": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Optional"
                      },
                      "at": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Timestamp of event"
                      },
                      "kyc_result": {
                        "type": "object",
                        "description": "Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details",
                        "x-stoplight": {
                          "id": "m6so9tt7secvm"
                        },
                        "properties": {
                          "reject": {
                            "title": "KYCResultType",
                            "x-stoplight": {
                              "id": "mkpd1y7i0tihh"
                            },
                            "type": "string",
                            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                          },
                          "accept": {
                            "title": "KYCResultType",
                            "x-stoplight": {
                              "id": "mkpd1y7i0tihh"
                            },
                            "type": "string",
                            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                          },
                          "indeterminate": {
                            "title": "KYCResultType",
                            "x-stoplight": {
                              "id": "mkpd1y7i0tihh"
                            },
                            "type": "string",
                            "description": "IDENTITY_VERIFICATION\tIdentity needs to be verified\n\nTAX_IDENTIFICATION\tTax ID number needs to be verified\n\nADDRESS_VERIFICATION\tAddress needs to be verified\n\nDATE_OF_BIRTH\tDate of birth needs to be verified\n\nINVALID_IDENTITY_PASSPORT\tIdentity needs to be verified via a \ngovernment issued ID. This is commonly used in conjuction with OTHER to describe the exact document needed.\n\nSELFIE_VERIFICATION\tIdentity needs to be verified via a live selfie of the account owner\n\nPEP\tFurther information needs to be submitted if account owner is politically exposed person\n\nFAMILY_MEMBER_PEP\tFurther information needs to be submitted if family member is a politically exposed person\n\nCONTROL_PERSON\tFurther information needs to be submitted if account owner is a control person\n\nAFFILIATED\tFurther information needs to be submitted if account owner is affiliated to finra or an exchange\n\nVISA_TYPE_OTHER\tFurther information needs to be submitted about account owner’s visa\n\nW8BEN_CORRECTION\tIdenfitying information submitted by the user was incorrect so a new, corrected, W8BEN needs to be submitted\nCOUNTRY_NOT_SUPPORTED\tThe account owner’s country of tax residence is not supported by our KYC providers. In this case, we’ll manully perform KYC on the user\n\nWATCHLIST_HIT\tResults from the watchlist screening need further investigation before account opening. No action is needed from the user\n\nOTHER\tA custom message will be sent to describe exactly what is needed from the account owner. The message will be displayed in the additional_information attribute.\n\nOTHER_PARTNER\tA custom message will be sent to relay information relevant only to the partner. The message will be displayed in the additional_information attribute."
                          },
                          "addidional_information": {
                            "type": "string",
                            "description": "Used to display a custom message."
                          },
                          "summary": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "dfz7vejxhvxyk"
                            },
                            "description": "Either `pass` or `fail`. Used to indicate if KYC has completed and passed or not. This field is used for internal purposes only."
                          }
                        }
                      },
                      "event_id": {
                        "type": "integer",
                        "description": "monotonically increasing 64bit integer"
                      },
                      "event_ulid": {
                        "type": "string",
                        "format": "ulid",
                        "description": "lexically sortable, monotonically increasing character array"
                      },
                      "crypto_status_from": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "7fgoyvh2ttwzz"
                        },
                        "description": "Account crypto_status changed from"
                      },
                      "crypto_status_to": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "g15q2jn26klem"
                        },
                        "description": "Account crypto_status changed to"
                      },
                      "admin_configurations": {
                        "title": "AdminConfigurations",
                        "x-stoplight": {
                          "id": "qsosbl2ojvpy5"
                        },
                        "type": "object",
                        "description": "These configurations show account properties that are overriden either by Alpaca Broker Operations or an automated process.\n\nThese values cannot be modified by the Broker Partners.\n\n\nFor the **events** interface we are only broadcasting changes to admin configurations. In case nothing changed for a flag that will not be included in unrelated update events.\n\nDepending on the type of the Admin Configurations the sent event will behave differently. For bool flags we are only sending the new value.\n\nFor example the following payload means, that the disable_shorting flag was set to true from false:\n\n```\n{\n  \"disable_shorting\": false\n}\n```\n\nFor other data types, we are embeding the old and new values into the payload. For example changing the max_margin_multiplier from 4 to 1 will yield this payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": 4,\n    \"new\": 1,\n  }\n}\n```\n\nIntroducing an override value from the default will yield a null value as old. For example restricting the max_margin_multipler to 1 from default will yield the following payload:\n\n```\n{\n  \"max_margin_multiplier\": {\n    \"old\": null,\n    \"new\": 1,\n  }\n}\n```",
                        "properties": {
                          "restrict_to_liquidation_reasons": {
                            "title": "RestrictToLiquidationReasons",
                            "x-stoplight": {
                              "id": "8ve05o357xumy"
                            },
                            "type": "object",
                            "description": "Reasons why the liquidation only flag was set",
                            "properties": {
                              "pattern_day_trading": {
                                "type": "boolean",
                                "x-stoplight": {
                                  "id": "jie5waxje186p"
                                },
                                "description": "Set when the trading account is marked as a PDT, but its equity falls below the $25k treshold"
                              },
                              "ach_return": {
                                "type": "boolean",
                                "x-stoplight": {
                                  "id": "rdalpird93yqd"
                                },
                                "description": "Set when an incoming ACH transfer gets rejected"
                              },
                              "position_to_equity_ratio": {
                                "type": "boolean",
                                "x-stoplight": {
                                  "id": "w38ngiibz57ih"
                                },
                                "description": "Set when the position to equity ration exceeds the maximum limit"
                              },
                              "unspecified": {
                                "type": "boolean",
                                "x-stoplight": {
                                  "id": "8t9456c8yt2u8"
                                },
                                "description": "Default value for unknown reason"
                              }
                            }
                          },
                          "outgoing_transfers_blocked": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "6asgwwc5og5vt"
                            },
                            "description": "Wire-out transfers blocked for the account if false"
                          },
                          "incoming_transfers_blocked": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "9h6kxbeu7892i"
                            },
                            "description": "Deposits are blocked for the account if false"
                          },
                          "disable_shorting": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "xpj079uvkjlln"
                            },
                            "description": "If true the account is not allowed to create short position orders"
                          },
                          "disable_fractional": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "67vm959kuferk"
                            },
                            "description": "If true, the account cannot create orders for fractional share positions"
                          },
                          "disable_crypto": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "h027r16ybjq26"
                            },
                            "description": "If true, the account is not allowed to trade cryptos"
                          },
                          "disable_day_trading": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "ypcv5e39wabjv"
                            },
                            "description": "If true, the account is not allowed to day trade (e.g. buy and sell the same security on the same day)"
                          },
                          "max_margin_multiplier": {
                            "type": "integer",
                            "x-stoplight": {
                              "id": "z5ufwctnvy3fy"
                            },
                            "description": "Max margin multipler is set by admin to this value"
                          },
                          "acct_daily_transfer_limit": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "7m2ved3asodk3"
                            },
                            "description": "Override the correspondent level daily transfer limits",
                            "format": "decimal"
                          }
                        }
                      },
                      "pattern_day_trader": {
                        "type": "boolean",
                        "x-stoplight": {
                          "id": "05mrhvc4aaeyy"
                        },
                        "description": "If true the pattern_day_trader flag was set for the account, if false, the flag was reset."
                      },
                      "account_blocked": {
                        "type": "boolean",
                        "x-stoplight": {
                          "id": "ubzoqqxv9p34z"
                        },
                        "description": "If true the account was blocked, if false, the account got unblocked"
                      },
                      "trading_blocked": {
                        "type": "boolean",
                        "x-stoplight": {
                          "id": "tb42kskazg9zr"
                        },
                        "description": "If true the account cannot trade going forward, if false, the ban has been lifed"
                      }
                    },
                    "required": [
                      "account_id",
                      "account_number",
                      "status_from",
                      "status_to",
                      "reason",
                      "at",
                      "event_id",
                      "event_ulid"
                    ]
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "suscribeToAccountStatusSSE"
      }
    },
    "/v1/events/journals/status": {
      "get": {
        "summary": "Subscribe to Journal Events (SSE)",
        "tags": [
          "Events"
        ],
        "description": "The Events API provides event push as well as historical queries via SSE (server sent events).\n\nYou can listen to journal status updates as they get processed by our backoffice.\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since_ulid` required if `until_ulid` specified\n- `since`, `since_id` or `since_ulid`  can’t be used at the same time\nBehavior:\n- if `since`, `since_id` or `since_ulid` not specified this will not return any historic data\n- if `until`, `until_id` or `until_ulid` reached stream will end (status 200)\n\n---\n\nNote for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "since_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Represents a change in a Journal's status, sent over the events streaming api.\n",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "at": "2021-05-07T10:28:23.163857Z",
                        "entry_type": "JNLC",
                        "event_id": 1406,
                        "event_ulid": "01F535Y1FVY8WZHE763HCNS8SZ",
                        "journal_id": "2f144d2a-91e6-46ff-8e37-959a701cc58d",
                        "status_from": "",
                        "status_to": "queued"
                      }
                    },
                    "title": "JournalStatusEvent",
                    "properties": {
                      "at": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Timestamp of event",
                        "format": "date-time"
                      },
                      "entry_type": {
                        "type": "string",
                        "title": "",
                        "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                        "enum": [
                          "JNLC",
                          "JNLS"
                        ],
                        "x-stoplight": {
                          "id": "itme4epinxsnk"
                        }
                      },
                      "event_id": {
                        "type": "integer",
                        "description": "Monotonically increasing 64bit integer"
                      },
                      "event_ulid": {
                        "type": "string",
                        "format": "ulid",
                        "description": "lexically sortable, monotonically increasing character array"
                      },
                      "journal_id": {
                        "type": "string",
                        "description": "The UUID of the related Journal",
                        "format": "uuid"
                      },
                      "status_from": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "canceled",
                          "executed",
                          "queued",
                          "rejected",
                          "deleted"
                        ],
                        "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                        "x-stoplight": {
                          "id": "ay4nu4z1j11cu"
                        }
                      },
                      "status_to": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "canceled",
                          "executed",
                          "queued",
                          "rejected",
                          "deleted"
                        ],
                        "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                        "x-stoplight": {
                          "id": "ay4nu4z1j11cu"
                        }
                      }
                    },
                    "required": [
                      "at",
                      "entry_type",
                      "event_id",
                      "event_ulid",
                      "journal_id",
                      "status_from",
                      "status_to"
                    ],
                    "x-stoplight": {
                      "id": "0pbdls2h4h8za"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "subscribeToJournalStatusSSE"
      }
    },
    "/v1/events/transfers/status": {
      "get": {
        "summary": "Subscribe to Transfer Events (SSE)",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Represents a change in a Transfer's status, sent over the events streaming api.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "account_id": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
                        "at": "2021-06-10T19:52:24.066998Z",
                        "event_id": 15961,
                        "event_ulid": "01F7VQQ782DM57SJNWAYMD14J9",
                        "status_from": "QUEUED",
                        "status_to": "SENT_TO_CLEARING",
                        "transfer_id": "c4ed4206-697b-4859-ab71-b9de6649859d"
                      },
                      "example-2": {
                        "account_id": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
                        "at": "2021-06-10T20:02:24.280178Z",
                        "event_id": 15962,
                        "status_from": "SENT_TO_CLEARING",
                        "status_to": "COMPLETE",
                        "transfer_id": "c4ed4206-697b-4859-ab71-b9de6649859d"
                      }
                    },
                    "title": "TransferStatusEvent",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Account UUID",
                        "format": "uuid"
                      },
                      "at": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Timedate of when the transfer status changed",
                        "format": "date-time"
                      },
                      "event_id": {
                        "type": "integer",
                        "description": "Monotonically increasing 64bit integer"
                      },
                      "event_ulid": {
                        "type": "string",
                        "format": "ulid",
                        "description": "lexically sortable, monotonically increasing character array"
                      },
                      "status_from": {
                        "type": "string",
                        "example": "QUEUED",
                        "enum": [
                          "QUEUED",
                          "APPROVAL_PENDING",
                          "PENDING",
                          "SENT_TO_CLEARING",
                          "REJECTED",
                          "CANCELED",
                          "APPROVED",
                          "COMPLETE",
                          "RETURNED"
                        ],
                        "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
                        "x-stoplight": {
                          "id": "mqx0hpg6h25vt"
                        }
                      },
                      "status_to": {
                        "type": "string",
                        "example": "QUEUED",
                        "enum": [
                          "QUEUED",
                          "APPROVAL_PENDING",
                          "PENDING",
                          "SENT_TO_CLEARING",
                          "REJECTED",
                          "CANCELED",
                          "APPROVED",
                          "COMPLETE",
                          "RETURNED"
                        ],
                        "description": "- **QUEUED**\nTransfer is in queue to be processed.\n- **APPROVAL_PENDING**\nTransfer is pending approval.\n- **PENDING**\nTransfer is pending processing.\n- **SENT_TO_CLEARING**\nTransfer is being processed by the clearing firm.\n- **REJECTED**\nTransfer is rejected.\n- **CANCELED**\nClient initiated transfer cancellation.\n- **APPROVED**\nTransfer is approved.\n- **COMPLETE**\nTransfer is completed.\n- **RETURNED**\nThe bank issued an ACH return for the transfer.\n",
                        "x-stoplight": {
                          "id": "mqx0hpg6h25vt"
                        }
                      },
                      "transfer_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Transfer UUID",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "account_id",
                      "at",
                      "event_id",
                      "event_ulid",
                      "status_from",
                      "status_to",
                      "transfer_id"
                    ],
                    "x-stoplight": {
                      "id": "ch42mh3ekwcmy"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "since_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          }
        ],
        "operationId": "subscribeToTransferStatusSSE",
        "description": "The Events API provides event push as well as historical queries via SSE (server sent events).\n\nYou can listen to transfer status updates as they get processed by our backoffice, for both end-user and firm accounts.\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since_ulid` required if `until_ulid` specified\n- `since`, `since_id` or `since_ulid`  can’t be used at the same time\nBehavior:\n- if `since`, `since_id` or `since_ulid` not specified this will not return any historic data\n- if `until`, `until_id` or `until_ulid` reached stream will end (status 200)\n\n---\n\nNote for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3."
      },
      "parameters": []
    },
    "/v1/events/trades": {
      "get": {
        "summary": "Subscribe to Trade Events (SSE) (Legacy)",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradeUpdateEvent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "since_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          }
        ],
        "operationId": "subscribeToTradeSSE",
        "description": "The Events API provides event push as well as historical queries via SSE (server sent events).\n\nYou can listen to events related to trade updates. Most market trades sent during market hours are filled instantly; you can listen to limit order updates through this endpoint.\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since_ulid` required if `until_ulid` specified\n- `since`, `since_id` or `since_ulid`  can’t be used at the same time\nBehavior:\n- if `since`, `since_id` or `since_ulid` not specified this will not return any historic data\n- if `until`, `until_id` or `until_ulid` reached stream will end (status 200)\n\n---\n\nNote for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n\n---\n\n**Deprecation note**\n\nLegacy event id (integer based) is unavailable for new broker partners, and it will be deprecated for existing brokers as well.\nThis deprecation is includes the `since_id` and `until_id` query parameter and the `event_id` field in the response.\n\n---\n\n**Common events**\n\nThese are the events that are the expected results of actions you may have taken by sending API requests.\n\nThe meaning of the timestamp field changes for each type; the meanings have been specified here for which types the timestamp field will be present.\n\n- `accepted` Sent when an order recieved and accepted by Alpaca\n- `pending_new` Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n- `new` Sent when an order has been routed to exchanges for execution.\n- `fill` Sent when your order has been completely filled.\n  - timestamp: The time at which the order was filled.\n- `partial_fill` Sent when a number of shares less than the total remaining quantity on your order has been filled.\n  - timestamp: The time at which the shares were filled.\n- `canceled` Sent when your requested cancellation of an order is processed.\n  - timestamp: The time at which the order was canceled.\n- `expired` Sent when an order has reached the end of its lifespan, as determined by the order's time in force value.\n  - timestamp: The time at which the order expired.\n- `done_for_day` Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n- `replaced` Sent when your requested replacement of an order is processed.\n  - timestamp: The time at which the order was replaced.\n\n**Rarer events**\n\nThese are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n- `rejected` Sent when your order has been rejected.\n- `held` For multi-leg orders, the secondary orders (stop loss, take profit) will enter this state while waiting to be triggered.\n- `stopped` Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n- `pending_cancel` Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n- `pending_replace` Sent when the order is awaiting replacement.\n- `calculated` Sent when the order has been completed for the day - it is either filled or done_for_day - but remaining settlement calculations are still pending.\n- `suspended` Sent when the order has been suspended and is not eligible for trading.\n- `order_replace_rejected` Sent when the order replace has been rejected.\n- `order_cancel_rejected` Sent when the order cancel has been rejected."
      },
      "parameters": []
    },
    "/v2beta1/events/trades": {
      "get": {
        "summary": "Subscribe to Trade Events (SSE)",
        "tags": [
          "Events",
          "Trading"
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradeUpdateEventV2"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          }
        ],
        "operationId": "subscribeToTradeV2SSE",
        "description": "The Events API provides event push as well as historical queries via SSE (server sent events).\n\nYou can listen to events related to trade updates. Most market trades sent during market hours are filled instantly; you can listen to limit order updates through this endpoint.\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since` and `since_id` can’t be used at the same time\nBehavior:\n- if `since` or `since_id` not specified this will not return any historic data\n- if `until` or `until_id` reached stream will end (status 200)\n\n---\n\nNote for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n\n---\n\n**Legacy trade events API**\n\nThe legacy trade events API is available for compatibility reasons at:\n\n`GET /v1/events/trades`\n\nBroker partners are recommended to upgrade to the /v2beta1/events/trades endpoint, which provides faster event delivery times.\n\nThe legacy trade events api works the same way as the new one with the exception of the event_id which is an integer except of an ULID. This results in the request’s since_id and until_id are also being integers. This integer is monotonically increasing over time for events.\n\n---\n\n**Common events**\n\nThese are the events that are the expected results of actions you may have taken by sending API requests.\n\nThe meaning of the timestamp field changes for each type; the meanings have been specified here for which types the timestamp field will be present.\n\n- `accepted` Sent when an order recieved and accepted by Alpaca\n- `pending_new` Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n- `new` Sent when an order has been routed to exchanges for execution.\n- `fill` Sent when your order has been completely filled.\n  - timestamp: The time at which the order was filled.\n- `partial_fill` Sent when a number of shares less than the total remaining quantity on your order has been filled.\n  - timestamp: The time at which the shares were filled.\n- `canceled` Sent when your requested cancellation of an order is processed.\n  - timestamp: The time at which the order was canceled.\n- `expired` Sent when an order has reached the end of its lifespan, as determined by the order's time in force value.\n  - timestamp: The time at which the order expired.\n- `done_for_day` Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n- `replaced` Sent when your requested replacement of an order is processed.\n  - timestamp: The time at which the order was replaced.\n\n**Rarer events**\n\nThese are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n- `rejected` Sent when your order has been rejected.\n  - timestamp: The time at which the rejection occurred.\n- `held` For multi-leg orders, the secondary orders (stop loss, take profit) will enter this state while waiting to be triggered.\n- `stopped` Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n- `pending_cancel` Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n- `pending_replace` Sent when the order is awaiting replacement.\n- `calculated` Sent when the order has been completed for the day - it is either filled or done_for_day - but remaining settlement calculations are still pending.\n- `suspended` Sent when the order has been suspended and is not eligible for trading.\n- `order_replace_rejected` Sent when the order replace has been rejected.\n- `order_cancel_rejected` Sent when the order cancel has been rejected."
      },
      "parameters": []
    },
    "/v2beta1/events/admin-actions": {
      "get": {
        "summary": "Subscribe to Admin Action Events (SSE)",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Connected. Events will now start streaming as long as you keep the connection open.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "description": "Represents structure of a LegacyNote type AdminAction",
                        "x-examples": {
                          "example-1": {
                            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
                            "at": "2023-03-06T16:38:01Z",
                            "belongs_to": {
                              "kind": "account",
                              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
                            },
                            "created_by": {
                              "kind": "admin",
                              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
                            },
                            "type": "legacy_note_admin_event",
                            "category": "other",
                            "visibility": "internal",
                            "note": "Performed action: Positions split AMZN (long): 1.011266402\n",
                            "correspondent": "LPCA",
                            "context": null
                          }
                        },
                        "allOf": [
                          {
                            "description": "Represents general fields for all AdminAction type",
                            "type": "object",
                            "title": "AdminActionEvent",
                            "properties": {
                              "event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Lexically sortable, monotonically increasing character array"
                              },
                              "replaces_event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Id of the replaced event (optional)"
                              },
                              "at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of event"
                              },
                              "belongs_to": {
                                "description": "Represents structure of an Identifier for all AdminAction type",
                                "type": "object",
                                "title": "AdminActionBelongsTo",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "account",
                                      "owner",
                                      "correspondent"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "created_by": {
                                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                                "type": "object",
                                "title": "AdminActionCreatedBy",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "admin"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "description": "Type of the Admin Action",
                                "enum": [
                                  "liquidation_admin_event",
                                  "legacy_note_admin_event",
                                  "transaction_cancel_admin_event"
                                ]
                              },
                              "category": {
                                "description": "Category of the Admin Action",
                                "enum": [
                                  "order",
                                  "other"
                                ]
                              },
                              "visibility": {
                                "description": "Visibility of the Admin Action",
                                "enum": [
                                  "internal",
                                  "external",
                                  "correspondent_only"
                                ]
                              },
                              "note": {
                                "type": "string",
                                "description": "Free text form description of the admin action"
                              },
                              "correspondent": {
                                "type": "string",
                                "description": "Related correspondent"
                              }
                            },
                            "required": [
                              "event_id",
                              "at",
                              "belongs_to",
                              "created_by",
                              "type",
                              "category",
                              "visibility",
                              "note",
                              "correspondent",
                              "context"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "AdminActionContextLegacyNote",
                            "properties": {
                              "context": {
                                "description": "Variable schema type which depends on the type",
                                "type": "object"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "description": "Represents structure of a Liquidation type AdminAction",
                        "x-examples": {
                          "example-1": {
                            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
                            "at": "2023-03-06T16:38:01Z",
                            "belongs_to": {
                              "kind": "account",
                              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
                            },
                            "created_by": {
                              "kind": "admin",
                              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
                            },
                            "type": "liquidation_admin_event",
                            "category": "accounts",
                            "visibility": "external",
                            "note": "Performed action: Position liquidated: Asset: TSLA, Quantity: 0.0001, Reason: Liquidation due to real time risk\n",
                            "correspondent": "LPCA",
                            "context": {
                              "symbol": "TSLA",
                              "reason": "Liquidation due to real time risk",
                              "available_qty": "0.0001",
                              "requested_qty": "0.0001",
                              "error": ""
                            }
                          }
                        },
                        "allOf": [
                          {
                            "description": "Represents general fields for all AdminAction type",
                            "type": "object",
                            "title": "AdminActionEvent",
                            "properties": {
                              "event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Lexically sortable, monotonically increasing character array"
                              },
                              "replaces_event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Id of the replaced event (optional)"
                              },
                              "at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of event"
                              },
                              "belongs_to": {
                                "description": "Represents structure of an Identifier for all AdminAction type",
                                "type": "object",
                                "title": "AdminActionBelongsTo",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "account",
                                      "owner",
                                      "correspondent"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "created_by": {
                                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                                "type": "object",
                                "title": "AdminActionCreatedBy",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "admin"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "description": "Type of the Admin Action",
                                "enum": [
                                  "liquidation_admin_event",
                                  "legacy_note_admin_event",
                                  "transaction_cancel_admin_event"
                                ]
                              },
                              "category": {
                                "description": "Category of the Admin Action",
                                "enum": [
                                  "order",
                                  "other"
                                ]
                              },
                              "visibility": {
                                "description": "Visibility of the Admin Action",
                                "enum": [
                                  "internal",
                                  "external",
                                  "correspondent_only"
                                ]
                              },
                              "note": {
                                "type": "string",
                                "description": "Free text form description of the admin action"
                              },
                              "correspondent": {
                                "type": "string",
                                "description": "Related correspondent"
                              }
                            },
                            "required": [
                              "event_id",
                              "at",
                              "belongs_to",
                              "created_by",
                              "type",
                              "category",
                              "visibility",
                              "note",
                              "correspondent",
                              "context"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "AdminActionContextLiquidation",
                            "properties": {
                              "context": {
                                "description": "Variable schema type which depends on the type",
                                "type": "object",
                                "properties": {
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "reason": {
                                    "type": "string"
                                  },
                                  "available_qty": {
                                    "type": "string",
                                    "format": "decimal"
                                  },
                                  "requested_qty": {
                                    "type": "string",
                                    "format": "decimal"
                                  },
                                  "error": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "description": "Represents structure of a TransactionCancel type AdminAction",
                        "x-examples": {
                          "example-1": {
                            "event_id": "01GTVS4FVS2KJDTPYH2WM6NAXF",
                            "at": "2023-03-06T16:38:01Z",
                            "belongs_to": {
                              "kind": "account",
                              "value": "0bbf1dd7-4235-4eca-8b1a-0db63572c735"
                            },
                            "created_by": {
                              "kind": "admin",
                              "value": "19455a3c-595f-457f-97b3-64a2b5aeae96"
                            },
                            "type": "transaction_cancel_admin_event",
                            "category": "accounts",
                            "visibility": "external",
                            "note": "\"Transaction fdf18af2-142b-409e-8aad-d1731e276af0 cancelled for LPCA-12345678\n",
                            "correspondent": "LPCA",
                            "context": {
                              "transaction_id": "fdf18af2-142b-409e-8aad-d1731e276af0",
                              "entry_type": "JNLC",
                              "external_id": "d5eede2c-1c08-45df-9800-87ad5eefc11f"
                            }
                          }
                        },
                        "allOf": [
                          {
                            "description": "Represents general fields for all AdminAction type",
                            "type": "object",
                            "title": "AdminActionEvent",
                            "properties": {
                              "event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Lexically sortable, monotonically increasing character array"
                              },
                              "replaces_event_id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Id of the replaced event (optional)"
                              },
                              "at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of event"
                              },
                              "belongs_to": {
                                "description": "Represents structure of an Identifier for all AdminAction type",
                                "type": "object",
                                "title": "AdminActionBelongsTo",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "account",
                                      "owner",
                                      "correspondent"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "created_by": {
                                "description": "Represents structure of an Creator's Identifier for all AdminAction type\n",
                                "type": "object",
                                "title": "AdminActionCreatedBy",
                                "properties": {
                                  "kind": {
                                    "enum": [
                                      "admin"
                                    ]
                                  },
                                  "id_reference": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "description": "Type of the Admin Action",
                                "enum": [
                                  "liquidation_admin_event",
                                  "legacy_note_admin_event",
                                  "transaction_cancel_admin_event"
                                ]
                              },
                              "category": {
                                "description": "Category of the Admin Action",
                                "enum": [
                                  "order",
                                  "other"
                                ]
                              },
                              "visibility": {
                                "description": "Visibility of the Admin Action",
                                "enum": [
                                  "internal",
                                  "external",
                                  "correspondent_only"
                                ]
                              },
                              "note": {
                                "type": "string",
                                "description": "Free text form description of the admin action"
                              },
                              "correspondent": {
                                "type": "string",
                                "description": "Related correspondent"
                              }
                            },
                            "required": [
                              "event_id",
                              "at",
                              "belongs_to",
                              "created_by",
                              "type",
                              "category",
                              "visibility",
                              "note",
                              "correspondent",
                              "context"
                            ]
                          },
                          {
                            "type": "object",
                            "title": "AdminActionContextTransactionCancel",
                            "properties": {
                              "context": {
                                "description": "Variable schema type which depends on the type",
                                "type": "object",
                                "properties": {
                                  "transaction_id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "entry_type": {
                                    "type": "string"
                                  },
                                  "external_id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: RFC3339 or YYYY-MM-DD"
          },
          {
            "name": "until",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Format: RFC3339 or YYYY-MM-DD"
          },
          {
            "name": "since_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          }
        ],
        "operationId": "subscribeToAdminActionSSE",
        "description": "The Events API provides event push as well as historical queries via SSE (server sent events).\n\nThis endpoint streams events related to administrative actions performed by our systems.\n\nHistorical events are streamed immediately if queried, and updates are pushed as events occur.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since` and `since_id` can’t be used at the same time\nBehavior:\n- if `since` or `since_id` not specified this will not return any historic data\n- if `until` or `until_id` reached stream will end (status 200)\n\n---\n\nWarning: Currently OAS-3 doesn't have full support for representing SSE style responses from an API.\n\nIn case the client code is generated from this OAS spec, don't specify a `since` and `until` there is a good chance the generated clients will hang forever waiting for the response to end.\n\nIf you require the streaming capabilities we recommend not using the generated clients for this specific endpoint until the OAS-3 standards come to a consensus on how to represent this behavior in OAS-3.\n\n---\n\n**Event Types**\n\n- **LegacyNote:** Old free text based admin notes\n- **Liquidation:** Event for a position liquidation which initialized by an admin\n- **TransactionCancel:** Event for a manually cancelled transaction"
      },
      "parameters": []
    },
    "/v1/journals": {
      "get": {
        "summary": "Retrieve a List Journals",
        "tags": [
          "Journals"
        ],
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "By journal creation date. Format: 2020-01-01"
          },
          {
            "name": "before",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "By journal creation date. Format: 2020-01-01"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "canceled",
                "executed",
                "queued",
                "rejected",
                "deleted"
              ]
            },
            "description": "See the JournalStatus model for more info"
          },
          {
            "name": "entry_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "JNLC",
                "JNLS"
              ]
            },
            "description": "JNLC or JNLS"
          },
          {
            "name": "to_account",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The account id that received the journal"
          },
          {
            "name": "from_account",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The account id that initiated the journal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "entry_type",
                    "mapping": {
                      "JNLC": "#/components/schemas/JNLC",
                      "JNLS": "#/components/schemas/JNLS"
                    }
                  },
                  "type": "array",
                  "items": {
                    "title": "Journal",
                    "example": {
                      "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                      "entry_type": "JNLS",
                      "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                      "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                      "status": "executed",
                      "symbol": "AAPL",
                      "qty": "2",
                      "price": "128.23"
                    },
                    "x-examples": {
                      "example": {
                        "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                        "entry_type": "JNLS",
                        "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                        "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                        "status": "executed",
                        "symbol": "AAPL",
                        "qty": "2",
                        "settle_date": "2020-12-24",
                        "price": "128.23"
                      },
                      "example-pending": {
                        "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                        "entry_type": "JNLC",
                        "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                        "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                        "symbol": null,
                        "qty": null,
                        "price": "0",
                        "status": "pending",
                        "settle_date": "2022-02-17",
                        "system_date": "2022-02-17",
                        "net_amount": "645",
                        "description": ""
                      },
                      "example-queued": {
                        "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                        "entry_type": "JNLC",
                        "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                        "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                        "symbol": "",
                        "qty": null,
                        "price": "0",
                        "status": "queued",
                        "settle_date": null,
                        "system_date": null,
                        "net_amount": "645",
                        "description": ""
                      }
                    },
                    "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "journal ID"
                          },
                          "entry_type": {
                            "type": "string",
                            "title": "",
                            "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                            "enum": [
                              "JNLC",
                              "JNLS"
                            ],
                            "x-stoplight": {
                              "id": "itme4epinxsnk"
                            }
                          },
                          "from_account": {
                            "type": "string",
                            "format": "uuid",
                            "description": "account ID the shares go from"
                          },
                          "to_account": {
                            "type": "string",
                            "format": "uuid",
                            "description": "account ID the shares go to"
                          },
                          "settle_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "canceled",
                              "executed",
                              "queued",
                              "rejected",
                              "deleted"
                            ],
                            "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                            "x-stoplight": {
                              "id": "ay4nu4z1j11cu"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "entry_type",
                          "from_account",
                          "to_account",
                          "settle_date"
                        ]
                      },
                      {
                        "oneOf": [
                          {
                            "type": "object",
                            "x-examples": {
                              "Example 1": {
                                "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                                "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                                "entry_type": "JNLS",
                                "symbol": "AAPL",
                                "qty": "0.5",
                                "price": "128.23",
                                "status": "executed",
                                "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                                "settle_date": "2020-12-24",
                                "system_date": "2020-12-24",
                                "description": "this is a test journal"
                              }
                            },
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The journal ID"
                              },
                              "to_account": {
                                "type": "string",
                                "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                              },
                              "entry_type": {
                                "type": "string",
                                "description": "JNLS"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the security journaled"
                              },
                              "qty": {
                                "type": "string",
                                "description": "The quantity of the securities journaled"
                              },
                              "price": {
                                "type": "string",
                                "description": "The price of the security journaled"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "pending",
                                  "canceled",
                                  "executed",
                                  "queued",
                                  "rejected",
                                  "deleted"
                                ],
                                "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                                "x-stoplight": {
                                  "id": "ay4nu4z1j11cu"
                                }
                              },
                              "from_account": {
                                "type": "string",
                                "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                              },
                              "settle_date": {
                                "type": "string",
                                "description": "Date string in “%Y-%m-%d” format"
                              },
                              "system_date": {
                                "type": "string",
                                "description": "Date string in “%Y-%m-%d” format"
                              },
                              "description": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "29s5ect4watc4"
                                },
                                "description": "Currency denomination of the journal. USD by default."
                              }
                            }
                          },
                          {
                            "example": {
                              "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                              "entry_type": "JNLC",
                              "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                              "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                              "status": "pending",
                              "net_amount": "115.5"
                            },
                            "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                            "type": "object",
                            "title": "JNLC",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                              },
                              "net_amount": {
                                "type": "string",
                                "format": "decimal",
                                "description": "Only valid for JNLC journals. Null for JNLS."
                              },
                              "transmitter_name": {
                                "type": "string",
                                "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                              },
                              "transmitter_account_number": {
                                "type": "string",
                                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                              },
                              "transmitter_address": {
                                "type": "string",
                                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                              },
                              "transmitter_financial_institution": {
                                "type": "string",
                                "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                              },
                              "transmitter_timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Only valid for JNLC journals. Null for JNLS."
                              }
                            },
                            "required": [
                              "net_amount"
                            ],
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "qo2ttptb2frpx"
                            }
                          }
                        ]
                      }
                    ],
                    "x-stoplight": {
                      "id": "2isltcm8hzb23"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAllJournals",
        "description": "Returns an array of journal objects."
      },
      "post": {
        "summary": "Create a Journal",
        "tags": [
          "Journals"
        ],
        "description": "A journal can be JNLC (move cash) or JNLS (move shares), dictated by `entry_type`. Generally, journal requests are subject to approval and starts from the `pending` status. The status changes are propagated through the Event API. Under certain conditions agreed for the partner, such journal transactions that meet the criteria are executed right away.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Journals API allows you to move cash or securities from one account to another.\n\nThis model represents the fields you can specify when creating a Journal\n\nFixture Rules\n\n- No Fixtures\n  - anything below limit is executed immediately\n  - anything above limit is pending until executed at EOD,\n- With Fixtures\n  - any status = rejected will be rejected EOD\n  - any status = pending will be pending forever",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "from_account": "c94bu7rn-4483-4199-840f-6c5fe0b7ca24",
                    "entry_type": "JNLC",
                    "to_account": "fn68sbrk-6f2a-433c-8c33-17b66b8941fa",
                    "amount": "51",
                    "description": "test text /fixtures/status=rejected/fixtures/"
                  }
                },
                "x-stoplight": {
                  "id": "u380o5uqf31kl"
                },
                "properties": {
                  "to_account": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid",
                    "description": "The account_id you wish to journal to"
                  },
                  "from_account": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid",
                    "description": "The account_id you wish to journal from"
                  },
                  "entry_type": {
                    "type": "string",
                    "title": "",
                    "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                    "enum": [
                      "JNLC",
                      "JNLS"
                    ],
                    "x-stoplight": {
                      "id": "itme4epinxsnk"
                    }
                  },
                  "amount": {
                    "type": "string",
                    "description": "Required if `entry_type` = `JNLC`"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Required if `entry_type` = `JNLS`"
                  },
                  "qty": {
                    "type": "string",
                    "description": "Required if `entry_type` = `JNLS`"
                  },
                  "description": {
                    "type": "string",
                    "description": "Max 1024 characters. Can include fixtures for amounts that are above the transaction limit",
                    "maxLength": 1024
                  },
                  "transmitter_name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
                  },
                  "transmitter_account_number": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
                  },
                  "transmitter_address": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
                  },
                  "transmitter_financial_institution": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation."
                  },
                  "transmitter_timestamp": {
                    "type": "string",
                    "description": "RFC 3339 format. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.",
                    "format": "date-time"
                  },
                  "currency": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "9ilfs11vxvcbi"
                    }
                  }
                },
                "required": [
                  "to_account",
                  "from_account",
                  "entry_type"
                ]
              },
              "example": {
                "entry_type": "JNLC",
                "from_account": "7c891489-574f-4f9a-82f0-4082a07f4736",
                "to_account": "2d47a229-0c25-40a2-8cc7-b2c8821ff93a",
                "amount": "115.5"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The New Journal object",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Journal",
                  "example": {
                    "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                    "entry_type": "JNLS",
                    "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                    "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                    "status": "executed",
                    "symbol": "AAPL",
                    "qty": "2",
                    "price": "128.23"
                  },
                  "x-examples": {
                    "example": {
                      "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                      "entry_type": "JNLS",
                      "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                      "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                      "status": "executed",
                      "symbol": "AAPL",
                      "qty": "2",
                      "settle_date": "2020-12-24",
                      "price": "128.23"
                    },
                    "example-pending": {
                      "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                      "entry_type": "JNLC",
                      "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                      "symbol": null,
                      "qty": null,
                      "price": "0",
                      "status": "pending",
                      "settle_date": "2022-02-17",
                      "system_date": "2022-02-17",
                      "net_amount": "645",
                      "description": ""
                    },
                    "example-queued": {
                      "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                      "entry_type": "JNLC",
                      "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                      "symbol": "",
                      "qty": null,
                      "price": "0",
                      "status": "queued",
                      "settle_date": null,
                      "system_date": null,
                      "net_amount": "645",
                      "description": ""
                    }
                  },
                  "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "journal ID"
                        },
                        "entry_type": {
                          "type": "string",
                          "title": "",
                          "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                          "enum": [
                            "JNLC",
                            "JNLS"
                          ],
                          "x-stoplight": {
                            "id": "itme4epinxsnk"
                          }
                        },
                        "from_account": {
                          "type": "string",
                          "format": "uuid",
                          "description": "account ID the shares go from"
                        },
                        "to_account": {
                          "type": "string",
                          "format": "uuid",
                          "description": "account ID the shares go to"
                        },
                        "settle_date": {
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "canceled",
                            "executed",
                            "queued",
                            "rejected",
                            "deleted"
                          ],
                          "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                          "x-stoplight": {
                            "id": "ay4nu4z1j11cu"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "entry_type",
                        "from_account",
                        "to_account",
                        "settle_date"
                      ]
                    },
                    {
                      "oneOf": [
                        {
                          "type": "object",
                          "x-examples": {
                            "Example 1": {
                              "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                              "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                              "entry_type": "JNLS",
                              "symbol": "AAPL",
                              "qty": "0.5",
                              "price": "128.23",
                              "status": "executed",
                              "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                              "settle_date": "2020-12-24",
                              "system_date": "2020-12-24",
                              "description": "this is a test journal"
                            }
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The journal ID"
                            },
                            "to_account": {
                              "type": "string",
                              "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                            },
                            "entry_type": {
                              "type": "string",
                              "description": "JNLS"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The symbol of the security journaled"
                            },
                            "qty": {
                              "type": "string",
                              "description": "The quantity of the securities journaled"
                            },
                            "price": {
                              "type": "string",
                              "description": "The price of the security journaled"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "canceled",
                                "executed",
                                "queued",
                                "rejected",
                                "deleted"
                              ],
                              "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                              "x-stoplight": {
                                "id": "ay4nu4z1j11cu"
                              }
                            },
                            "from_account": {
                              "type": "string",
                              "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                            },
                            "settle_date": {
                              "type": "string",
                              "description": "Date string in “%Y-%m-%d” format"
                            },
                            "system_date": {
                              "type": "string",
                              "description": "Date string in “%Y-%m-%d” format"
                            },
                            "description": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "29s5ect4watc4"
                              },
                              "description": "Currency denomination of the journal. USD by default."
                            }
                          }
                        },
                        {
                          "example": {
                            "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                            "entry_type": "JNLC",
                            "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                            "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                            "status": "pending",
                            "net_amount": "115.5"
                          },
                          "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                          "type": "object",
                          "title": "JNLC",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                            },
                            "net_amount": {
                              "type": "string",
                              "format": "decimal",
                              "description": "Only valid for JNLC journals. Null for JNLS."
                            },
                            "transmitter_name": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                            },
                            "transmitter_account_number": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_address": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_financial_institution": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Only valid for JNLC journals. Null for JNLS."
                            }
                          },
                          "required": [
                            "net_amount"
                          ],
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "qo2ttptb2frpx"
                          }
                        }
                      ]
                    }
                  ],
                  "x-stoplight": {
                    "id": "2isltcm8hzb23"
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the parameters is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "The amount requested to move is not available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "One of the account is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "createJournal"
      }
    },
    "/v1/journals/{journal_id}": {
      "parameters": [
        {
          "name": "journal_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "summary": "Cancel a Pending Journal",
        "tags": [
          "Journals"
        ],
        "description": "You can only delete a journal if the journal is still in a pending state, if a journal is executed you will not be able to delete. The alternative is to create a mirror journal entry to reverse the flow of funds.",
        "responses": {
          "204": {
            "description": "The cancel request succeeded. (No-content)\n"
          },
          "404": {
            "description": "The journal is not found.\n"
          },
          "422": {
            "description": "The journal is not in the pending status.\n"
          }
        },
        "operationId": "deleteJournalById"
      },
      "get": {
        "summary": "Retrieve a Single Journal Entry",
        "tags": [
          "Journals"
        ],
        "operationId": "get-v1-journals-journal_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Journal",
                  "example": {
                    "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                    "entry_type": "JNLS",
                    "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                    "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                    "status": "executed",
                    "symbol": "AAPL",
                    "qty": "2",
                    "price": "128.23"
                  },
                  "x-examples": {
                    "example": {
                      "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                      "entry_type": "JNLS",
                      "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                      "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                      "status": "executed",
                      "symbol": "AAPL",
                      "qty": "2",
                      "settle_date": "2020-12-24",
                      "price": "128.23"
                    },
                    "example-pending": {
                      "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                      "entry_type": "JNLC",
                      "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                      "symbol": null,
                      "qty": null,
                      "price": "0",
                      "status": "pending",
                      "settle_date": "2022-02-17",
                      "system_date": "2022-02-17",
                      "net_amount": "645",
                      "description": ""
                    },
                    "example-queued": {
                      "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                      "entry_type": "JNLC",
                      "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                      "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                      "symbol": "",
                      "qty": null,
                      "price": "0",
                      "status": "queued",
                      "settle_date": null,
                      "system_date": null,
                      "net_amount": "645",
                      "description": ""
                    }
                  },
                  "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "journal ID"
                        },
                        "entry_type": {
                          "type": "string",
                          "title": "",
                          "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                          "enum": [
                            "JNLC",
                            "JNLS"
                          ],
                          "x-stoplight": {
                            "id": "itme4epinxsnk"
                          }
                        },
                        "from_account": {
                          "type": "string",
                          "format": "uuid",
                          "description": "account ID the shares go from"
                        },
                        "to_account": {
                          "type": "string",
                          "format": "uuid",
                          "description": "account ID the shares go to"
                        },
                        "settle_date": {
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "canceled",
                            "executed",
                            "queued",
                            "rejected",
                            "deleted"
                          ],
                          "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                          "x-stoplight": {
                            "id": "ay4nu4z1j11cu"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "entry_type",
                        "from_account",
                        "to_account",
                        "settle_date"
                      ]
                    },
                    {
                      "oneOf": [
                        {
                          "type": "object",
                          "x-examples": {
                            "Example 1": {
                              "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                              "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                              "entry_type": "JNLS",
                              "symbol": "AAPL",
                              "qty": "0.5",
                              "price": "128.23",
                              "status": "executed",
                              "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                              "settle_date": "2020-12-24",
                              "system_date": "2020-12-24",
                              "description": "this is a test journal"
                            }
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The journal ID"
                            },
                            "to_account": {
                              "type": "string",
                              "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                            },
                            "entry_type": {
                              "type": "string",
                              "description": "JNLS"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The symbol of the security journaled"
                            },
                            "qty": {
                              "type": "string",
                              "description": "The quantity of the securities journaled"
                            },
                            "price": {
                              "type": "string",
                              "description": "The price of the security journaled"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "canceled",
                                "executed",
                                "queued",
                                "rejected",
                                "deleted"
                              ],
                              "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                              "x-stoplight": {
                                "id": "ay4nu4z1j11cu"
                              }
                            },
                            "from_account": {
                              "type": "string",
                              "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                            },
                            "settle_date": {
                              "type": "string",
                              "description": "Date string in “%Y-%m-%d” format"
                            },
                            "system_date": {
                              "type": "string",
                              "description": "Date string in “%Y-%m-%d” format"
                            },
                            "description": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "29s5ect4watc4"
                              },
                              "description": "Currency denomination of the journal. USD by default."
                            }
                          }
                        },
                        {
                          "example": {
                            "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                            "entry_type": "JNLC",
                            "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                            "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                            "status": "pending",
                            "net_amount": "115.5"
                          },
                          "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                          "type": "object",
                          "title": "JNLC",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                            },
                            "net_amount": {
                              "type": "string",
                              "format": "decimal",
                              "description": "Only valid for JNLC journals. Null for JNLS."
                            },
                            "transmitter_name": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                            },
                            "transmitter_account_number": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_address": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_financial_institution": {
                              "type": "string",
                              "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                            },
                            "transmitter_timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Only valid for JNLC journals. Null for JNLS."
                            }
                          },
                          "required": [
                            "net_amount"
                          ],
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "qo2ttptb2frpx"
                          }
                        }
                      ]
                    }
                  ],
                  "x-stoplight": {
                    "id": "2isltcm8hzb23"
                  }
                }
              }
            }
          }
        },
        "description": "You can query a specific journal entry that you submitted to Alpaca by passing into the query the journal_id.\n\nWill return a journal entry if a journal entry with journal_id exists, otherwise will throw an error."
      }
    },
    "/v1/journals/batch": {
      "post": {
        "summary": "Create a Batch Journal Transaction (One-to-Many)",
        "operationId": "createBatchJournal",
        "responses": {
          "200": {
            "description": "an array of journal objects with an extra attribute error_message in the case when a specific account fails to receive a journal.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "BatchJournalResponse",
                    "description": "A Journal object with an extra attribute error_message in the case when a specific account fails to receive a journal.",
                    "allOf": [
                      {
                        "title": "Journal",
                        "example": {
                          "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                          "entry_type": "JNLS",
                          "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                          "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                          "status": "executed",
                          "symbol": "AAPL",
                          "qty": "2",
                          "price": "128.23"
                        },
                        "x-examples": {
                          "example": {
                            "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                            "entry_type": "JNLS",
                            "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                            "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                            "status": "executed",
                            "symbol": "AAPL",
                            "qty": "2",
                            "settle_date": "2020-12-24",
                            "price": "128.23"
                          },
                          "example-pending": {
                            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                            "entry_type": "JNLC",
                            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                            "symbol": null,
                            "qty": null,
                            "price": "0",
                            "status": "pending",
                            "settle_date": "2022-02-17",
                            "system_date": "2022-02-17",
                            "net_amount": "645",
                            "description": ""
                          },
                          "example-queued": {
                            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                            "entry_type": "JNLC",
                            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                            "symbol": "",
                            "qty": null,
                            "price": "0",
                            "status": "queued",
                            "settle_date": null,
                            "system_date": null,
                            "net_amount": "645",
                            "description": ""
                          }
                        },
                        "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "journal ID"
                              },
                              "entry_type": {
                                "type": "string",
                                "title": "",
                                "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                                "enum": [
                                  "JNLC",
                                  "JNLS"
                                ],
                                "x-stoplight": {
                                  "id": "itme4epinxsnk"
                                }
                              },
                              "from_account": {
                                "type": "string",
                                "format": "uuid",
                                "description": "account ID the shares go from"
                              },
                              "to_account": {
                                "type": "string",
                                "format": "uuid",
                                "description": "account ID the shares go to"
                              },
                              "settle_date": {
                                "type": "string",
                                "format": "date"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "pending",
                                  "canceled",
                                  "executed",
                                  "queued",
                                  "rejected",
                                  "deleted"
                                ],
                                "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                                "x-stoplight": {
                                  "id": "ay4nu4z1j11cu"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "entry_type",
                              "from_account",
                              "to_account",
                              "settle_date"
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "x-examples": {
                                  "Example 1": {
                                    "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                                    "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                                    "entry_type": "JNLS",
                                    "symbol": "AAPL",
                                    "qty": "0.5",
                                    "price": "128.23",
                                    "status": "executed",
                                    "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                                    "settle_date": "2020-12-24",
                                    "system_date": "2020-12-24",
                                    "description": "this is a test journal"
                                  }
                                },
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The journal ID"
                                  },
                                  "to_account": {
                                    "type": "string",
                                    "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                                  },
                                  "entry_type": {
                                    "type": "string",
                                    "description": "JNLS"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the security journaled"
                                  },
                                  "qty": {
                                    "type": "string",
                                    "description": "The quantity of the securities journaled"
                                  },
                                  "price": {
                                    "type": "string",
                                    "description": "The price of the security journaled"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "executed",
                                      "queued",
                                      "rejected",
                                      "deleted"
                                    ],
                                    "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                                    "x-stoplight": {
                                      "id": "ay4nu4z1j11cu"
                                    }
                                  },
                                  "from_account": {
                                    "type": "string",
                                    "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                                  },
                                  "settle_date": {
                                    "type": "string",
                                    "description": "Date string in “%Y-%m-%d” format"
                                  },
                                  "system_date": {
                                    "type": "string",
                                    "description": "Date string in “%Y-%m-%d” format"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "29s5ect4watc4"
                                    },
                                    "description": "Currency denomination of the journal. USD by default."
                                  }
                                }
                              },
                              {
                                "example": {
                                  "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                                  "entry_type": "JNLC",
                                  "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                                  "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                                  "status": "pending",
                                  "net_amount": "115.5"
                                },
                                "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                                "type": "object",
                                "title": "JNLC",
                                "properties": {
                                  "description": {
                                    "type": "string",
                                    "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                                  },
                                  "net_amount": {
                                    "type": "string",
                                    "format": "decimal",
                                    "description": "Only valid for JNLC journals. Null for JNLS."
                                  },
                                  "transmitter_name": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                                  },
                                  "transmitter_account_number": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_address": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_financial_institution": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Only valid for JNLC journals. Null for JNLS."
                                  }
                                },
                                "required": [
                                  "net_amount"
                                ],
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "qo2ttptb2frpx"
                                }
                              }
                            ]
                          }
                        ],
                        "x-stoplight": {
                          "id": "2isltcm8hzb23"
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "error_message": {
                            "type": "string",
                            "description": "Description of why this journal transaction failed"
                          }
                        },
                        "required": [
                          "error_message"
                        ]
                      }
                    ],
                    "x-examples": {
                      "example-1": {
                        "error_message": "",
                        "id": "56f106e5-25a4-4eee-96fa-25bb05dc86bc",
                        "entry_type": "JNLC",
                        "from_account": "8f8c8cee-2591-4f83-be12-82c659b5e748",
                        "to_account": "399f85f1-cbbd-4eaa-a934-70027fb5c1de",
                        "symbol": "",
                        "qty": null,
                        "price": null,
                        "status": "pending",
                        "settle_date": null,
                        "system_date": null,
                        "net_amount": "1000",
                        "description": ""
                      }
                    },
                    "x-stoplight": {
                      "id": "ls0561ikjlnez"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "description": "You can create a batch of journal requests by using this endpoint. This is enabled on JNLC type Journals for now only.\n\nEvery single request must be valid for the entire batch operation to succeed.\n\nIn the case of a successful request, the response will contain an array of journal objects with an extra attribute error_message in the case when a specific account fails to receive a journal.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "BatchJournalRequest",
                "type": "object",
                "description": "Journals API allows you to move cash or securities from one account to another.\n\nThis model represents the fields you can specify when creating a request of many Journals out of one account to many others at once.",
                "properties": {
                  "entry_type": {
                    "type": "string",
                    "enum": [
                      "JNLC"
                    ],
                    "description": "Only supports `JNLC` for now"
                  },
                  "from_account": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The account id that is the originator of the funds being moved. Most likely is your Sweep Firm Account"
                  },
                  "description": {
                    "type": "string",
                    "description": "Journal description, gets returned in the response"
                  },
                  "entries": {
                    "type": "array",
                    "minItems": 1,
                    "description": "An array of objects describing to what accounts you want to move funds into and how much to move into for each account",
                    "items": {
                      "type": "object",
                      "properties": {
                        "to_account": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The ID of the account that you want to journal funds into"
                        },
                        "amount": {
                          "type": "string",
                          "description": "Journal amount in USD"
                        }
                      },
                      "required": [
                        "to_account",
                        "amount"
                      ]
                    }
                  }
                },
                "required": [
                  "entry_type",
                  "from_account",
                  "entries"
                ],
                "x-stoplight": {
                  "id": "cqujg5wj52fpz"
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Journals"
        ]
      }
    },
    "/v1/oauth/clients/{client_id}": {
      "parameters": [
        {
          "name": "client_id",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "summary": "Get an OAuth client",
        "tags": [
          "OAuth"
        ],
        "description": "The endpoint returns the details of OAuth client to display in the authorization page.\n",
        "parameters": [
          {
            "name": "response_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "code",
                "token"
              ],
              "example": "token"
            },
            "description": "code or token"
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "https://example.com/authorize"
            },
            "description": "Redirect URI of the OAuth flow"
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "general"
            },
            "description": "Requested scopes by the OAuth flow"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OathClientResponse",
                  "type": "object",
                  "example": {
                    "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                    "name": "TradingApp",
                    "description": "Sample description",
                    "url": "http://test.com",
                    "terms_of_use": "",
                    "privacy_policy": "",
                    "status": "ACTIVE",
                    "redirect_uri": [
                      "http://localhost"
                    ],
                    "live_trading_approved": true
                  },
                  "x-examples": {
                    "example-1": {
                      "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                      "name": "TradingApp",
                      "description": "Sample description",
                      "url": "http://test.com",
                      "terms_of_use": "",
                      "privacy_policy": "",
                      "status": "ACTIVE",
                      "redirect_uri": [
                        "http://localhost"
                      ],
                      "live_trading_approved": true
                    }
                  },
                  "properties": {
                    "client_id": {
                      "type": "string",
                      "description": "OAuth client id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Broker name (your name)"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "terms_of_use": {
                      "type": "string",
                      "description": "URL of Terms of Use"
                    },
                    "privacy_policy": {
                      "type": "string",
                      "description": "URL of Privacy Policy"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "DISABLED"
                      ],
                      "description": "ACTIVE or DISABLED",
                      "example": "ACTIVE"
                    },
                    "redirect_uri": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "live_trading_approved": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "x-stoplight": {
                    "id": "qlcf3oshsqct1"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                      "name": "TradingApp",
                      "description": "Sample description",
                      "url": "http://test.com",
                      "terms_of_use": "",
                      "privacy_policy": "",
                      "status": "ACTIVE",
                      "redirect_uri": [
                        "http://localhost"
                      ],
                      "live_trading_approved": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Client does not exist or you do not have access to the client.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "getOAuthClient"
      }
    },
    "/v1/oauth/token": {
      "post": {
        "summary": "Issue an OAuth token",
        "tags": [
          "OAuth"
        ],
        "description": "The operation issues an OAuth code which can be used in the OAuth code flow.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "OAuthTokenRequest",
                "type": "object",
                "example": {
                  "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                  "client_secret": "bbb14da2b6b8e7117a3c52a910e1dc2a",
                  "redirect_uri": "http://localhost",
                  "scope": "general",
                  "account_id": "0d18ae51-3c94-4511-b209-101e1666416b"
                },
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "OAuth client ID"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "OAuth client secret"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "redirect URI for the OAuth flow"
                  },
                  "scope": {
                    "type": "string",
                    "description": "scopes requested by the OAuth flow"
                  },
                  "account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "end-user account ID"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "redirect_uri",
                  "scope",
                  "account_id"
                ],
                "description": "This model is used for both the Issue and Authorize OAuth token routes",
                "x-stoplight": {
                  "id": "a9yeydszevnuj"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "access_token": "87586f14-c3f4-4912-b107-f75bc17ff87a",
                      "token_type": "Bearer",
                      "scope": "general"
                    }
                  },
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "OAuth token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Always `Bearer`",
                      "enum": [
                        "Bearer"
                      ],
                      "example": "Bearer"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Token’s scope"
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "scope"
                  ],
                  "x-stoplight": {
                    "id": "7ljatwc79gihj"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "access_token": "87586f14-c3f4-4912-b107-f75bc17ff87a",
                      "token_type": "Bearer",
                      "scope": "general"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Client does not exists, you do not have access to the client, or “client_secret” is incorrect.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Redirect URI or scope is invalid.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "issueOAuthToken"
      }
    },
    "/v1/oauth/authorize": {
      "post": {
        "summary": "Authorize an OAuth Token",
        "tags": [
          "OAuth"
        ],
        "description": "The operation issues an OAuth code which can be used in the OAuth code flow.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "OAuthTokenRequest",
                "type": "object",
                "example": {
                  "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                  "client_secret": "bbb14da2b6b8e7117a3c52a910e1dc2a",
                  "redirect_uri": "http://localhost",
                  "scope": "general",
                  "account_id": "0d18ae51-3c94-4511-b209-101e1666416b"
                },
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "OAuth client ID"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "OAuth client secret"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "redirect URI for the OAuth flow"
                  },
                  "scope": {
                    "type": "string",
                    "description": "scopes requested by the OAuth flow"
                  },
                  "account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "end-user account ID"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "redirect_uri",
                  "scope",
                  "account_id"
                ],
                "description": "This model is used for both the Issue and Authorize OAuth token routes",
                "x-stoplight": {
                  "id": "a9yeydszevnuj"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully issued a code.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": "912b5502-c983-40f7-a01d-6a66f13a754d",
                      "client_id": "7a3c52a910e1dc2abbb14da2b6b8e711",
                      "redirect_uri": "http://localhost",
                      "scope": ""
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "minLength": 1,
                      "description": "OAuth code to exchange with token"
                    },
                    "client_id": {
                      "type": "string",
                      "minLength": 1,
                      "description": "OAuth `client_id`"
                    },
                    "redirect_uri": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Redirect URI of OAuth flow"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Granted scopes"
                    }
                  },
                  "required": [
                    "code",
                    "client_id",
                    "redirect_uri",
                    "scope"
                  ],
                  "x-stoplight": {
                    "id": "uz6o7d02lbaxp"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Client does not exists, you do not have access to the client, or “client_secret” is incorrect.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Redirect URI or scope is invalid.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "authorizeOAuthToken"
      }
    },
    "/v1/trading/accounts/{account_id}/watchlists": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier of an account."
        }
      ],
      "get": {
        "summary": "Retrieve all Watchlists for an Account",
        "tags": [
          "Watchlist"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Watchlist",
                    "type": "object",
                    "description": "Represents a set of securities observed by a user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier of the watchlist itself.\n"
                      },
                      "account_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier of the account that owns this watchlist.\n"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When watchlist was created"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When watchlist was last updated"
                      },
                      "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]+$",
                        "description": "User friendly Name of watchlist"
                      },
                      "assets": {
                        "type": "array",
                        "description": "The contents of the watchlist, in the order as registered",
                        "items": {
                          "title": "Asset",
                          "type": "object",
                          "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                          "x-stoplight": {
                            "id": "2bnou9t588bau"
                          },
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "904837e3-3b76-47ec-b432-046db621571b",
                              "format": "uuid",
                              "description": "Asset ID"
                            },
                            "class": {
                              "type": "string",
                              "enum": [
                                "us_equity",
                                "crypto"
                              ],
                              "x-stoplight": {
                                "id": "0stvwzkbv2e0u"
                              }
                            },
                            "exchange": {
                              "type": "string",
                              "title": "Exchange",
                              "example": "NASDAQ",
                              "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                              "enum": [
                                "AMEX",
                                "ARCA",
                                "BATS",
                                "NYSE",
                                "NASDAQ",
                                "NYSEARCA",
                                "OTC",
                                "ERSX",
                                "FTXU"
                              ],
                              "x-stoplight": {
                                "id": "og9z1j3oimssn"
                              }
                            },
                            "symbol": {
                              "type": "string",
                              "example": "AAPL",
                              "description": "The symbol of the asset"
                            },
                            "name": {
                              "type": "string",
                              "example": "Apple Inc. Common Stock",
                              "description": "The official name of the asset"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "inactive"
                              ],
                              "description": "active or inactive",
                              "example": "active"
                            },
                            "tradable": {
                              "type": "boolean",
                              "example": true,
                              "description": "Asset is tradable on Alpaca or not"
                            },
                            "marginable": {
                              "type": "boolean",
                              "example": true,
                              "description": "Asset is marginable or not"
                            },
                            "shortable": {
                              "type": "boolean",
                              "example": true,
                              "description": "Asset is shortable or not"
                            },
                            "easy_to_borrow": {
                              "type": "boolean",
                              "example": true,
                              "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                            },
                            "fractionable": {
                              "type": "boolean",
                              "example": true,
                              "description": "Asset is fractionable or not"
                            },
                            "last_close_pct_change": {
                              "type": "string",
                              "format": "decimal",
                              "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                            },
                            "last_price": {
                              "type": "string",
                              "format": "decimal",
                              "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                            },
                            "last_close": {
                              "type": "string",
                              "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                              "format": "decimal"
                            },
                            "min_order_size": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "8oxfe2lh08pa5"
                              },
                              "description": "Minimum order size.  Field available for crypto only."
                            },
                            "min_trade_increment": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "9x4innaekt0bo"
                              },
                              "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                            },
                            "price_increment": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "y3hwtbjswugep"
                              },
                              "description": "Amount the price can be incremented by. Field available for crypto only."
                            },
                            "maintenance_margin_requirement": {
                              "type": "number",
                              "x-stoplight": {
                                "id": "w0vp53j3weqge"
                              },
                              "description": "Shows the % margin requirement for the asset (equities only)."
                            },
                            "attributes": {
                              "type": "array",
                              "x-stoplight": {
                                "id": "o1v8vair7lg7a"
                              },
                              "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                              "items": {
                                "x-stoplight": {
                                  "id": "8q7bxjwl5evxu"
                                },
                                "type": "string",
                                "enum": [
                                  "ptp_no_exception",
                                  "ptp_with_exception",
                                  "ipo"
                                ]
                              },
                              "example": [
                                "ptp_no_exception",
                                "ipo"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "class",
                            "symbol"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ],
                    "x-stoplight": {
                      "id": "j0baixb9il3sa"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAllWatchlistsForAccount",
        "description": "Fetch a list of all watchlists currently in an account."
      },
      "post": {
        "summary": "Create a New Watchlist for an Account",
        "tags": [
          "Watchlist"
        ],
        "operationId": "createWatchlistForAccount",
        "description": "Returns the watchlist object",
        "responses": {
          "200": {
            "description": "Newly created watchlist",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Watchlist",
                  "type": "object",
                  "description": "Represents a set of securities observed by a user.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the watchlist itself.\n"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the account that owns this watchlist.\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was last updated"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9]+$",
                      "description": "User friendly Name of watchlist"
                    },
                    "assets": {
                      "type": "array",
                      "description": "The contents of the watchlist, in the order as registered",
                      "items": {
                        "title": "Asset",
                        "type": "object",
                        "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                        "x-stoplight": {
                          "id": "2bnou9t588bau"
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "904837e3-3b76-47ec-b432-046db621571b",
                            "format": "uuid",
                            "description": "Asset ID"
                          },
                          "class": {
                            "type": "string",
                            "enum": [
                              "us_equity",
                              "crypto"
                            ],
                            "x-stoplight": {
                              "id": "0stvwzkbv2e0u"
                            }
                          },
                          "exchange": {
                            "type": "string",
                            "title": "Exchange",
                            "example": "NASDAQ",
                            "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                            "enum": [
                              "AMEX",
                              "ARCA",
                              "BATS",
                              "NYSE",
                              "NASDAQ",
                              "NYSEARCA",
                              "OTC",
                              "ERSX",
                              "FTXU"
                            ],
                            "x-stoplight": {
                              "id": "og9z1j3oimssn"
                            }
                          },
                          "symbol": {
                            "type": "string",
                            "example": "AAPL",
                            "description": "The symbol of the asset"
                          },
                          "name": {
                            "type": "string",
                            "example": "Apple Inc. Common Stock",
                            "description": "The official name of the asset"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "active or inactive",
                            "example": "active"
                          },
                          "tradable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is tradable on Alpaca or not"
                          },
                          "marginable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is marginable or not"
                          },
                          "shortable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is shortable or not"
                          },
                          "easy_to_borrow": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                          },
                          "fractionable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is fractionable or not"
                          },
                          "last_close_pct_change": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_close": {
                            "type": "string",
                            "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                            "format": "decimal"
                          },
                          "min_order_size": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "8oxfe2lh08pa5"
                            },
                            "description": "Minimum order size.  Field available for crypto only."
                          },
                          "min_trade_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "9x4innaekt0bo"
                            },
                            "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                          },
                          "price_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "y3hwtbjswugep"
                            },
                            "description": "Amount the price can be incremented by. Field available for crypto only."
                          },
                          "maintenance_margin_requirement": {
                            "type": "number",
                            "x-stoplight": {
                              "id": "w0vp53j3weqge"
                            },
                            "description": "Shows the % margin requirement for the asset (equities only)."
                          },
                          "attributes": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "o1v8vair7lg7a"
                            },
                            "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                            "items": {
                              "x-stoplight": {
                                "id": "8q7bxjwl5evxu"
                              },
                              "type": "string",
                              "enum": [
                                "ptp_no_exception",
                                "ptp_with_exception",
                                "ipo"
                              ]
                            },
                            "example": [
                              "ptp_no_exception",
                              "ipo"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "class",
                          "symbol"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "x-stoplight": {
                    "id": "j0baixb9il3sa"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateWatchlistRequest",
                "type": "object",
                "description": "This model represents the fields you can specify when Creating or Updating/Replacing a Watchlist",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The watchlist name"
                  },
                  "symbols": {
                    "type": "array",
                    "description": "The new list of symbol names to watch",
                    "items": {
                      "type": "string",
                      "example": "[\"AAPL\", \"TSLA\"]"
                    }
                  }
                },
                "required": [
                  "name",
                  "symbols"
                ],
                "x-stoplight": {
                  "id": "8vevle6of8odv"
                }
              }
            }
          }
        }
      }
    },
    "/v1/trading/accounts/{account_id}/watchlists/{watchlist_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier of an account"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "watchlist_id",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a watchlist"
        }
      ],
      "get": {
        "summary": "Manage watchlists",
        "tags": [
          "Watchlist"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Watchlist",
                  "type": "object",
                  "description": "Represents a set of securities observed by a user.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the watchlist itself.\n"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the account that owns this watchlist.\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was last updated"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9]+$",
                      "description": "User friendly Name of watchlist"
                    },
                    "assets": {
                      "type": "array",
                      "description": "The contents of the watchlist, in the order as registered",
                      "items": {
                        "title": "Asset",
                        "type": "object",
                        "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                        "x-stoplight": {
                          "id": "2bnou9t588bau"
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "904837e3-3b76-47ec-b432-046db621571b",
                            "format": "uuid",
                            "description": "Asset ID"
                          },
                          "class": {
                            "type": "string",
                            "enum": [
                              "us_equity",
                              "crypto"
                            ],
                            "x-stoplight": {
                              "id": "0stvwzkbv2e0u"
                            }
                          },
                          "exchange": {
                            "type": "string",
                            "title": "Exchange",
                            "example": "NASDAQ",
                            "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                            "enum": [
                              "AMEX",
                              "ARCA",
                              "BATS",
                              "NYSE",
                              "NASDAQ",
                              "NYSEARCA",
                              "OTC",
                              "ERSX",
                              "FTXU"
                            ],
                            "x-stoplight": {
                              "id": "og9z1j3oimssn"
                            }
                          },
                          "symbol": {
                            "type": "string",
                            "example": "AAPL",
                            "description": "The symbol of the asset"
                          },
                          "name": {
                            "type": "string",
                            "example": "Apple Inc. Common Stock",
                            "description": "The official name of the asset"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "active or inactive",
                            "example": "active"
                          },
                          "tradable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is tradable on Alpaca or not"
                          },
                          "marginable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is marginable or not"
                          },
                          "shortable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is shortable or not"
                          },
                          "easy_to_borrow": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                          },
                          "fractionable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is fractionable or not"
                          },
                          "last_close_pct_change": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_close": {
                            "type": "string",
                            "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                            "format": "decimal"
                          },
                          "min_order_size": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "8oxfe2lh08pa5"
                            },
                            "description": "Minimum order size.  Field available for crypto only."
                          },
                          "min_trade_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "9x4innaekt0bo"
                            },
                            "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                          },
                          "price_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "y3hwtbjswugep"
                            },
                            "description": "Amount the price can be incremented by. Field available for crypto only."
                          },
                          "maintenance_margin_requirement": {
                            "type": "number",
                            "x-stoplight": {
                              "id": "w0vp53j3weqge"
                            },
                            "description": "Shows the % margin requirement for the asset (equities only)."
                          },
                          "attributes": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "o1v8vair7lg7a"
                            },
                            "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                            "items": {
                              "x-stoplight": {
                                "id": "8q7bxjwl5evxu"
                              },
                              "type": "string",
                              "enum": [
                                "ptp_no_exception",
                                "ptp_with_exception",
                                "ipo"
                              ]
                            },
                            "example": [
                              "ptp_no_exception",
                              "ipo"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "class",
                          "symbol"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "x-stoplight": {
                    "id": "j0baixb9il3sa"
                  }
                }
              }
            }
          }
        },
        "operationId": "getWatchlistForAccountById",
        "description": "Retrieve Watchlist by ID"
      },
      "put": {
        "summary": "Update a Watchlist",
        "tags": [
          "Watchlist"
        ],
        "operationId": "replaceWatchlistForAccountById",
        "responses": {
          "200": {
            "description": "Updated watchlist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Watchlist",
                  "type": "object",
                  "description": "Represents a set of securities observed by a user.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the watchlist itself.\n"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the account that owns this watchlist.\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was last updated"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9]+$",
                      "description": "User friendly Name of watchlist"
                    },
                    "assets": {
                      "type": "array",
                      "description": "The contents of the watchlist, in the order as registered",
                      "items": {
                        "title": "Asset",
                        "type": "object",
                        "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                        "x-stoplight": {
                          "id": "2bnou9t588bau"
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "904837e3-3b76-47ec-b432-046db621571b",
                            "format": "uuid",
                            "description": "Asset ID"
                          },
                          "class": {
                            "type": "string",
                            "enum": [
                              "us_equity",
                              "crypto"
                            ],
                            "x-stoplight": {
                              "id": "0stvwzkbv2e0u"
                            }
                          },
                          "exchange": {
                            "type": "string",
                            "title": "Exchange",
                            "example": "NASDAQ",
                            "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                            "enum": [
                              "AMEX",
                              "ARCA",
                              "BATS",
                              "NYSE",
                              "NASDAQ",
                              "NYSEARCA",
                              "OTC",
                              "ERSX",
                              "FTXU"
                            ],
                            "x-stoplight": {
                              "id": "og9z1j3oimssn"
                            }
                          },
                          "symbol": {
                            "type": "string",
                            "example": "AAPL",
                            "description": "The symbol of the asset"
                          },
                          "name": {
                            "type": "string",
                            "example": "Apple Inc. Common Stock",
                            "description": "The official name of the asset"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "active or inactive",
                            "example": "active"
                          },
                          "tradable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is tradable on Alpaca or not"
                          },
                          "marginable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is marginable or not"
                          },
                          "shortable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is shortable or not"
                          },
                          "easy_to_borrow": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                          },
                          "fractionable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is fractionable or not"
                          },
                          "last_close_pct_change": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_close": {
                            "type": "string",
                            "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                            "format": "decimal"
                          },
                          "min_order_size": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "8oxfe2lh08pa5"
                            },
                            "description": "Minimum order size.  Field available for crypto only."
                          },
                          "min_trade_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "9x4innaekt0bo"
                            },
                            "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                          },
                          "price_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "y3hwtbjswugep"
                            },
                            "description": "Amount the price can be incremented by. Field available for crypto only."
                          },
                          "maintenance_margin_requirement": {
                            "type": "number",
                            "x-stoplight": {
                              "id": "w0vp53j3weqge"
                            },
                            "description": "Shows the % margin requirement for the asset (equities only)."
                          },
                          "attributes": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "o1v8vair7lg7a"
                            },
                            "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                            "items": {
                              "x-stoplight": {
                                "id": "8q7bxjwl5evxu"
                              },
                              "type": "string",
                              "enum": [
                                "ptp_no_exception",
                                "ptp_with_exception",
                                "ipo"
                              ]
                            },
                            "example": [
                              "ptp_no_exception",
                              "ipo"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "class",
                          "symbol"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "x-stoplight": {
                    "id": "j0baixb9il3sa"
                  }
                }
              }
            }
          }
        },
        "description": "Replace entirely the set of securities contained in the watchlist while optionally renaming it. Destructive operation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateWatchlistRequest",
                "type": "object",
                "description": "This model represents the fields you can specify when Creating or Updating/Replacing a Watchlist",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The watchlist name"
                  },
                  "symbols": {
                    "type": "array",
                    "description": "The new list of symbol names to watch",
                    "items": {
                      "type": "string",
                      "example": "[\"AAPL\", \"TSLA\"]"
                    }
                  }
                },
                "required": [
                  "name",
                  "symbols"
                ],
                "x-stoplight": {
                  "id": "8vevle6of8odv"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a Watchlist",
        "tags": [
          "Watchlist"
        ],
        "operationId": "deleteWatchlistFromAccountById",
        "responses": {
          "200": {
            "description": "Watchlist deleted."
          }
        },
        "description": "Irrevocably delete a watchlist."
      },
      "post": {
        "summary": "Add an Asset to a Watchlist",
        "description": "Adds an asset to an existing watchlist.",
        "tags": [
          "Watchlist"
        ],
        "operationId": "post-v1-trading-accounts-account_id-watchlists-watchlist_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Watchlist",
                  "type": "object",
                  "description": "Represents a set of securities observed by a user.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the watchlist itself.\n"
                    },
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier of the account that owns this watchlist.\n"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When watchlist was last updated"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9]+$",
                      "description": "User friendly Name of watchlist"
                    },
                    "assets": {
                      "type": "array",
                      "description": "The contents of the watchlist, in the order as registered",
                      "items": {
                        "title": "Asset",
                        "type": "object",
                        "description": "Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false",
                        "x-stoplight": {
                          "id": "2bnou9t588bau"
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "904837e3-3b76-47ec-b432-046db621571b",
                            "format": "uuid",
                            "description": "Asset ID"
                          },
                          "class": {
                            "type": "string",
                            "enum": [
                              "us_equity",
                              "crypto"
                            ],
                            "x-stoplight": {
                              "id": "0stvwzkbv2e0u"
                            }
                          },
                          "exchange": {
                            "type": "string",
                            "title": "Exchange",
                            "example": "NASDAQ",
                            "description": "Represents the exchange where an asset is traded.\n\nFor Stocks:\n- AMEX\n- ARCA\n- BATS\n- NYSE\n- NASDAQ\n- NYSEARCA\n- OTC\n\nFor Crypto:\n- ERSX\n- FTXU",
                            "enum": [
                              "AMEX",
                              "ARCA",
                              "BATS",
                              "NYSE",
                              "NASDAQ",
                              "NYSEARCA",
                              "OTC",
                              "ERSX",
                              "FTXU"
                            ],
                            "x-stoplight": {
                              "id": "og9z1j3oimssn"
                            }
                          },
                          "symbol": {
                            "type": "string",
                            "example": "AAPL",
                            "description": "The symbol of the asset"
                          },
                          "name": {
                            "type": "string",
                            "example": "Apple Inc. Common Stock",
                            "description": "The official name of the asset"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "active or inactive",
                            "example": "active"
                          },
                          "tradable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is tradable on Alpaca or not"
                          },
                          "marginable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is marginable or not"
                          },
                          "shortable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is shortable or not"
                          },
                          "easy_to_borrow": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca)."
                          },
                          "fractionable": {
                            "type": "boolean",
                            "example": true,
                            "description": "Asset is fractionable or not"
                          },
                          "last_close_pct_change": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_price": {
                            "type": "string",
                            "format": "decimal",
                            "description": "Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated."
                          },
                          "last_close": {
                            "type": "string",
                            "description": "Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.",
                            "format": "decimal"
                          },
                          "min_order_size": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "8oxfe2lh08pa5"
                            },
                            "description": "Minimum order size.  Field available for crypto only."
                          },
                          "min_trade_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "9x4innaekt0bo"
                            },
                            "description": "Amount a trade quantity can be incremented by. Field available for crypto only."
                          },
                          "price_increment": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "y3hwtbjswugep"
                            },
                            "description": "Amount the price can be incremented by. Field available for crypto only."
                          },
                          "maintenance_margin_requirement": {
                            "type": "number",
                            "x-stoplight": {
                              "id": "w0vp53j3weqge"
                            },
                            "description": "Shows the % margin requirement for the asset (equities only)."
                          },
                          "attributes": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "o1v8vair7lg7a"
                            },
                            "description": "One of `ptp_no_exception` or `ptp_with_exception`. We will include unique characteristics of the asset here.",
                            "items": {
                              "x-stoplight": {
                                "id": "8q7bxjwl5evxu"
                              },
                              "type": "string",
                              "enum": [
                                "ptp_no_exception",
                                "ptp_with_exception",
                                "ipo"
                              ]
                            },
                            "example": [
                              "ptp_no_exception",
                              "ipo"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "class",
                          "symbol"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "x-stoplight": {
                    "id": "j0baixb9il3sa"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested watchlist is not found, or one of the symbols is not found in the assets"
          },
          "422": {
            "description": "Some parameters are not valid"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "zqgi2i6t4gw58"
                    },
                    "description": "The symbol name to add to the watchlist"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/v1/corporate_actions/announcements": {
      "get": {
        "summary": "Retrieve Announcements",
        "tags": [
          "Corporate Actions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "The announcements endpoint contains public information on previous and upcoming dividends, mergers, spinoffs, and stock splits.\n\nAnnouncement data is made available through the API as soon as it is ingested by Alpaca, which is typically the following trading day after the declaration date. This provides insight into future account stock position and cash balance changes that will take effect on an announcement’s payable date. Additionally, viewing previous announcement details can improve bookkeeping and reconciling previous account cash and position changes.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "id": "bebc5ece-34be-47e9-b944-687e69a102be",
                        "corporate_action_id": "78467X109_AA22",
                        "ca_type": "dividend",
                        "ca_sub_type": "cash",
                        "initiating_symbol": "DIA",
                        "initiating_original_cusip": "252787106",
                        "target_symbol": "DIA",
                        "target_original_cusip": "252787106",
                        "declaration_date": "2021-12-19",
                        "ex_date": "2022-01-21",
                        "record_date": "2022-01-24",
                        "payable_date": "2022-02-14",
                        "cash": "0",
                        "old_rate": "1",
                        "new_rate": "1"
                      }
                    },
                    "title": "Announcement",
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "ID that is specific to a single announcement."
                      },
                      "corporate_action_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "ID that remains consistent across all announcements for the same corporate action. Unlike ‘id’, this can be used to connect multiple announcements to see how the terms have changed throughout the lifecycle of the corporate action event."
                      },
                      "ca_type": {
                        "type": "string",
                        "description": "Announcements have both a type and a subtype to categorize them. This model represents the higher level abstract \"types\" of Announcement. Please see the AnnouncementCASubType model for finer grain descriptions of the subtypes\n\nPossible values are:\n- dividend\n  can have `cash` and `stock` subtypes\n- merger\n  has `merger_update` and `merger_completion` sub types\n- split\n  has `stock_split`, `until_split`, `reverse_split`, and `recapitalization` sub types\n- spinoff\n  currently has only the `spinoff` subtype and thus is just this higher level category for now. A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
                        "title": "",
                        "enum": [
                          "dividend",
                          "merger",
                          "split",
                          "spinoff"
                        ],
                        "example": "dividend",
                        "x-stoplight": {
                          "id": "9u6s2oez5fadz"
                        }
                      },
                      "ca_sub_type": {
                        "type": "string",
                        "description": "Announcements have both a type and a subtype to categorize them. This model represents the lowever level abstract \"sub types\" of Announcement. Please see the AnnouncementCAType model for higher level descriptions of the possible types\n\nPossible values are:\n\n- from the `dividend` type:\n  - **cash**\n\n    A cash payment based on the number of shares the account holds on the record date.\n  - **stock**\n\n    A stock payment based on the number of shares the account holds on the record date.\n\n- from the `merger` type:\n  - **merger_update**\n\n    An update to the terms of an upcoming merger. This can happen any number of times before the merger is completed and can be tracked by using the id parameter.\n\n  - **merger_completion**\n\n    A final update in the terms of the merger in which the intiating_symbol will acquire the target_symbol. Any previous terms updates for this announcement will have the same id value.\n\n- from the `split` type:\n  - **stock_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split\n  - **until_split**\n\n    An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split.\n  - **reverse_split**\n\n    A decrease in the number of shares outstanding with an increase in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the spli\n  - **recapitalization**\n\n    A stock recapitalization, typically used by a company to adjust debt and equity ratios.\n\n- from the `spinoff` type:\n  - **spinoff**\n\n    A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.",
                        "title": "",
                        "enum": [
                          "cash",
                          "stock",
                          "merger_update",
                          "merger_completion",
                          "stock_split",
                          "until_split",
                          "reverse_split",
                          "recapitalization",
                          "spinoff"
                        ],
                        "x-stoplight": {
                          "id": "r7r5e6m7z8zue"
                        }
                      },
                      "initiating_symbol": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Symbol of the company initiating the announcement."
                      },
                      "initiating_original_cusip": {
                        "type": "string",
                        "minLength": 1,
                        "description": "CUSIP of the company initiating the announcement."
                      },
                      "target_symbol": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Symbol of the child company involved in the announcement.",
                        "nullable": true
                      },
                      "target_original_cusip": {
                        "type": "string",
                        "minLength": 1,
                        "description": "CUSIP of the child company involved in the announcement.",
                        "nullable": true
                      },
                      "declaration_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Date the corporate action or subsequent terms update was announced."
                      },
                      "ex_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The first date that purchasing a security will not result in a corporate action entitlement.",
                        "nullable": true
                      },
                      "record_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The date an account must hold a settled position in the security in order to receive the corporate action entitlement.",
                        "nullable": true
                      },
                      "payable_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The date the announcement will take effect. On this date, account stock and cash balances are expected to be processed accordingly."
                      },
                      "cash": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The amount of cash to be paid per share held by an account on the record date.",
                        "nullable": true
                      },
                      "old_rate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The denominator to determine any quantity change ratios in positions.",
                        "nullable": true
                      },
                      "new_rate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The numerator to determine any quantity change ratios in positions.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "corporate_action_id",
                      "ca_type",
                      "ca_sub_type",
                      "initiating_symbol",
                      "initiating_original_cusip",
                      "target_symbol",
                      "target_original_cusip",
                      "declaration_date",
                      "ex_date",
                      "record_date",
                      "payable_date",
                      "cash",
                      "old_rate",
                      "new_rate"
                    ],
                    "x-stoplight": {
                      "id": "6xtmj2bgzu4y4"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Malformed input.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "x-stoplight": {
                    "id": "xu9mkrgjdtotd"
                  }
                }
              }
            }
          }
        },
        "operationId": "getCorporateAnnouncements",
        "description": "This enables searching for an array of corporate action announcements based on criteria.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ca_types",
            "description": "A comma-delimited list of CorporateActionType values",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "required": true,
            "name": "since",
            "description": "The start (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "required": true,
            "description": "The end (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days.",
            "name": "until"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the company initiating the announcement."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cusip",
            "description": "The CUSIP of the company initiating the announcement."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "declaration_date",
                "ex_date",
                "record_date",
                "payable_date"
              ]
            },
            "in": "query",
            "name": "date_type",
            "description": "An emum of possible ways to use the `since` and `until` parameters to search by.\n\nthe types are:\n\n- **declaration_date**: The date of the preliminary announcement details or the date that any subsequent term updates took place.\n- **ex_date**: The date on which any security purchasing activity will not result in a corporate action entitlement. Any selling activity that takes place on or after this date will result in a corporate action entitlement.\n- **record_date**: The date the company checks its records to determine who is shareholder in order to allocate entitlements.\n- **payable_date**: The date that the stock and cash positions will update according to the account positions as of the record date."
          }
        ]
      }
    },
    "/v1/accounts/{account_id}/cip": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Upload CIP information",
        "operationId": "post-v1-accounts-account_id-cip",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "The customer identification program (CIP) API allows you to submit the CIP results received from your KYC provider.\n\nThe minimum requirements to open an individual financial account are delimited and you must verify the true identity of the account holder at account opening:\n\nName\nDate of birth\nAddress\nIdentification number (for a U.S. citizen, a taxpayer identification number)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CIPInfo",
                "x-stoplight": {
                  "id": "nmcb0qvan724h"
                },
                "type": "object",
                "description": "Customer Identification Program (CIP) information for an account applicant.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of this CIPInfo",
                    "format": "uuid"
                  },
                  "account_id": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "nti69y3rr1e79"
                    },
                    "format": "uuid",
                    "description": "UUID of the Account instance this CIPInfo is for"
                  },
                  "provider_name": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "1e8bkk1u4yiew"
                    },
                    "description": "List of KYC providers this information came from",
                    "items": {
                      "title": "CIPProvider",
                      "x-stoplight": {
                        "id": "1ladh13ciiv0e"
                      },
                      "type": "string",
                      "description": "\"alloy\"   - ALLOY\n\"trulioo\" - TRULIOO\n\"onfido\"  - ONFIDO\n\"veriff\"  - VERIFF\n\"jumio\"   - JUMIO\n\"getmati\" - GETMATI"
                    }
                  },
                  "created_at": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "64h0di2a6vyej"
                    },
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "suqeaf04rzb77"
                    },
                    "format": "date-time"
                  },
                  "kyc": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "CBDAD1C4-1047-450E-BAE5-B6C406F509B4",
                        "risk_level": "LOW",
                        "applicant_name": "John Doe",
                        "email_address": "johndoe@example.com",
                        "nationality": "American",
                        "id_number": "jd0000123456789",
                        "date_of_birth": "1970-12-01",
                        "address": "42 Faux St",
                        "postal_code": "94401",
                        "country_of_residency": "USA",
                        "kyc_completed_at": "2021-06-10T15:37:03Z",
                        "ip_address": "127.0.0.1",
                        "check_initiated_at": "2021-06-10T15:37:03Z",
                        "check_completed_at": "2021-06-10T15:37:03Z",
                        "approval_status": "approved",
                        "approved_by": "Jane Doe",
                        "approved_at": "2021-06-10T15:38:03Z"
                      }
                    },
                    "description": "Represents Know Your Customer (KYC) info for a CIPInfo",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Your internal ID of check",
                        "format": "uuid"
                      },
                      "risk_score": {
                        "type": "string",
                        "description": "Overall risk score returned by KYC provider or assessed",
                        "x-stoplight": {
                          "id": "90qw403hvrt4y"
                        }
                      },
                      "risk_level": {
                        "type": "string",
                        "description": "Overall risk level returned by KYC provider or assessed",
                        "x-stoplight": {
                          "id": "qlzreqji4lhci"
                        }
                      },
                      "risk_categories": {
                        "type": "array",
                        "description": "The list of risk categories returned by the KYC provider or assessed",
                        "x-stoplight": {
                          "id": "qlzreqji4lhci"
                        },
                        "items": {
                          "x-stoplight": {
                            "id": "me5f66krhts26"
                          },
                          "type": "string"
                        }
                      },
                      "applicant_name": {
                        "type": "string",
                        "description": "Given and family name of applicant"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email address of applicant"
                      },
                      "nationality": {
                        "type": "string",
                        "description": "nationality of applicant"
                      },
                      "date_of_birth": {
                        "type": "string",
                        "description": "DOB of applicant",
                        "format": "date"
                      },
                      "address": {
                        "type": "string",
                        "description": "Concatenated street address, city, state and country of applicant"
                      },
                      "postal_code": {
                        "type": "string",
                        "description": "postal code for `address` field"
                      },
                      "country_of_residency": {
                        "type": "string",
                        "description": "country for `address` field"
                      },
                      "kyc_completed_at": {
                        "type": "string",
                        "description": "Datetime that KYC check was completed at",
                        "format": "date-time"
                      },
                      "ip_address": {
                        "type": "string",
                        "description": "IP address of applicant at time of KYC check"
                      },
                      "check_initiated_at": {
                        "type": "string",
                        "description": "start datetime of KYC check",
                        "format": "date-time"
                      },
                      "check_completed_at": {
                        "type": "string",
                        "description": "completion datetime of KYC check",
                        "format": "date-time"
                      },
                      "approval_status": {
                        "type": "string",
                        "description": "Approval status of KYC check"
                      },
                      "approved_by": {
                        "type": "string",
                        "description": "Identifier of who approved KYC check"
                      },
                      "approved_at": {
                        "type": "string",
                        "description": "Reason for approving this KYC check",
                        "format": "date-time"
                      },
                      "approved_reason": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "rw7ke3e65x6xk"
                        },
                        "description": "Datetime that this KYC check was approved"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "title": "CIPKYCInfo",
                    "x-stoplight": {
                      "id": "1ygvfp2y5nwev"
                    }
                  },
                  "document": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "55B9931A-3BE6-4BC0-9BDD-0B954E4A4632",
                        "result": "clear",
                        "status": "complete",
                        "created_at": "2021-06-10T15:37:03Z",
                        "image_integrity": "clear"
                      }
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Your internal ID of check"
                      },
                      "result": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "status": {
                        "title": "CIPStatus",
                        "x-stoplight": {
                          "id": "ejcunr8l8s0f2"
                        },
                        "type": "string",
                        "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Datetime for when this check was done"
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Datetime for when this check was done",
                        "x-stoplight": {
                          "id": "mldoed43bulx0"
                        }
                      },
                      "date_of_expiry": {
                        "type": "string",
                        "format": "date",
                        "description": "Datetime for when this check was done",
                        "x-stoplight": {
                          "id": "zgpwb045porqt"
                        }
                      },
                      "document_numbers": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "ylxi39biyo436"
                        },
                        "description": "Number of the document that was checked",
                        "items": {
                          "x-stoplight": {
                            "id": "n986txzgf0lnx"
                          },
                          "type": "string"
                        }
                      },
                      "document_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "n8sxd8t9f3kzq"
                        },
                        "description": "Type of the document that was checked"
                      },
                      "first_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "w2punywp6uw0v"
                        },
                        "description": "First name extracted from the document"
                      },
                      "last_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "2nutmuuiwgyib"
                        },
                        "description": "Last name extracted from the document"
                      },
                      "gender": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "23ze35btn7pgd"
                        },
                        "description": "Gender info extracted from the document"
                      },
                      "issuing_country": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "0kb0a69x5g5m6"
                        },
                        "description": "Country for which issued the document"
                      },
                      "nationality": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "l39n0f7u9rg3g"
                        },
                        "description": "Nationality extracted from the document"
                      },
                      "age_validation": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "comprised_document": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "police_record": {
                        "title": "CIPStatus",
                        "x-stoplight": {
                          "id": "ejcunr8l8s0f2"
                        },
                        "type": "string",
                        "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                      },
                      "data_comparison": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "data_comparison_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "j5c0hr492lzlv"
                        },
                        "description": "json object representing the results of the various sub-checks\n          done when calculating the result on `data_comparison`. Example: {“date_of_birth”: “clear”,\n          “date_of_expiry”: “clear” “document_numbers”: “clear”, “document_type”: “clear”, “first_name”: “clear”,\n          “gender”: “clear”, “issuing_country”: “clear”, “last_name”: “clear”}"
                      },
                      "image_integrity": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "image_integrity_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "gw6cht7g7zui2"
                        },
                        "description": "json object representing the results of the various sub-checks done\n          when calculating the result on `image_integrity`. Example: example: {“colour_picture”: “clear”,\n          “conclusive_document_quality”: “clear”, “image_quality”: “clear”, “supported_document”: “clear”}"
                      },
                      "visual_authenticity": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "ccsft0oc0p7y7"
                        },
                        "description": "json object representing the the various sub-checks done when determening\n          whether visual (non-textual) elements are correct given the document type. Example: {\n          “digital_tampering”: “clear”, “face_detection”: “clear”, “fonts”: “clear”, “original_document_present”:\n          “clear”, “picture_face_integrity”: “clear”, “security_features”: “clear”, “template”: “clear”}"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "Represents results of checking a document for CIPInfo\n",
                    "x-stoplight": {
                      "id": "7pizeb1ps42ij"
                    }
                  },
                  "photo": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "0DD13020-F0FD-4B5A-B58F-BC1885E90A6D",
                        "result": "clear",
                        "status": "complete",
                        "created_at": "2021-06-10T15:37:03Z",
                        "face_comparison": "clear"
                      }
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Your internal ID of check"
                      },
                      "result": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "status": {
                        "type": "number",
                        "description": "Overall status of check"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "datetime of when check happened"
                      },
                      "face_comparison": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "face_comparison_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "nva7tm8q3itop"
                        },
                        "description": "a json object representing the breakdown of sub-checks done in\n          `face_comparison`. Example: {“face_match”:{“result”: “clear”,“properties”:{“score”: “80”}}}"
                      },
                      "image_integrity": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "image_integrity_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "lltcpsijc1bwo"
                        },
                        "description": "a json object representing the breakdown of sub-checks done in\n          `image_integrity`. Example  {“face_detected”:{“result”: “clear”},“source_integrity”: {“result”: “clear”}}"
                      },
                      "visual_authenticity": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "visual_authenticity_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "0712bbbrw15oo"
                        },
                        "description": "a json object representing the breakdown of sub-checks don in\n          `visual_authenticity`. Example {“spoofing_detection”: {“result”: “clear”,“properties”: {“score”: “26”}}}}"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "Represents the results of checking a Photo for CIPInfo",
                    "x-stoplight": {
                      "id": "hqx4vrzqypp7h"
                    }
                  },
                  "identity": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "28E1CCE8-1B1A-4472-9AD4-C6C5B7C3A6AF",
                        "result": "clear",
                        "status": "complete",
                        "created_at": "2021-06-10T15:37:03Z",
                        "sources": "clear",
                        "address": "clear",
                        "date_of_birth": "clear"
                      }
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Your internal ID of check"
                      },
                      "result": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "status": {
                        "title": "CIPStatus",
                        "x-stoplight": {
                          "id": "ejcunr8l8s0f2"
                        },
                        "type": "string",
                        "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                      },
                      "created_at": {
                        "type": "string",
                        "description": "datetime when identity check happened"
                      },
                      "matched_address": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "matched_addresses": {
                        "type": "string",
                        "description": "datetime when identity check happened",
                        "x-stoplight": {
                          "id": "1vqeq6vfihjs2"
                        }
                      },
                      "sources": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "sources_breakdown": {
                        "type": "string",
                        "description": "a json object representing the breakdown of `sources` field. For example:\n          {“total_sources”: {“result”: “clear”,“properties”: {“total_number_of_sources”: “3”}}}",
                        "x-stoplight": {
                          "id": "4aehkpo8da5mr"
                        }
                      },
                      "address": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "address_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "wcctczes53ivy"
                        },
                        "description": "a json object representing the breakdown of the `address` field. For example:\n          {“credit_agencies”: {“result”: “clear”,“properties”:{“number_of_matches”:“1”}}"
                      },
                      "date_of_birth": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "date_of_birth_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "efhx1bwabsdty"
                        },
                        "description": "a json object representing the breakdown of the `date_of_birth` field.\n          For example: example: {“credit_agencies”:{“result”: “clear”,“properties”: {“number_of_matches”: “1”}}"
                      },
                      "tax_id": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "tax_id_breakdown": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "x5c64geol7p1s"
                        },
                        "description": "a json object representing the breakdown of the `tax_id` field"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "x-stoplight": {
                      "id": "g8qjr3c8h1npx"
                    }
                  },
                  "watchlist": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "id": "7572B870-EB4C-46A2-8B88-509194CCEE7E",
                        "result": "clear",
                        "status": "complete",
                        "created_at": "2021-06-10T15:37:03Z",
                        "politically_exposed_person": "clear",
                        "sanction": "clear",
                        "adverse_media": "clear",
                        "monitored_lists": "clear"
                      }
                    },
                    "description": "Represents the result of checking to see if the applicant is in any watchlists for a CIPInfo",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Your internal ID of check"
                      },
                      "result": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "status": {
                        "title": "CIPStatus",
                        "x-stoplight": {
                          "id": "ejcunr8l8s0f2"
                        },
                        "type": "string",
                        "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                      },
                      "created_at": {
                        "type": "string",
                        "description": "datetime when check happened"
                      },
                      "records": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "0jk1ut5oct0ml"
                        },
                        "description": "a json object. Example [{“text”: “Record info”}]"
                      },
                      "politically_exposed_person": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "adverse_media": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "sanction": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      },
                      "monitored_lists": {
                        "title": "CIPResult",
                        "x-stoplight": {
                          "id": "4mte2vkxwqcmd"
                        },
                        "type": "string",
                        "description": "\"clear\"\n\n\"consider\""
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "x-stoplight": {
                      "id": "b6tmg9qshk4f9"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ]
      },
      "get": {
        "summary": "Retrieve CIP information",
        "operationId": "get-v1-accounts-account_id-cip",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CIPInfo",
                  "x-stoplight": {
                    "id": "nmcb0qvan724h"
                  },
                  "type": "object",
                  "description": "Customer Identification Program (CIP) information for an account applicant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of this CIPInfo",
                      "format": "uuid"
                    },
                    "account_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "nti69y3rr1e79"
                      },
                      "format": "uuid",
                      "description": "UUID of the Account instance this CIPInfo is for"
                    },
                    "provider_name": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "1e8bkk1u4yiew"
                      },
                      "description": "List of KYC providers this information came from",
                      "items": {
                        "title": "CIPProvider",
                        "x-stoplight": {
                          "id": "1ladh13ciiv0e"
                        },
                        "type": "string",
                        "description": "\"alloy\"   - ALLOY\n\"trulioo\" - TRULIOO\n\"onfido\"  - ONFIDO\n\"veriff\"  - VERIFF\n\"jumio\"   - JUMIO\n\"getmati\" - GETMATI"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "64h0di2a6vyej"
                      },
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "suqeaf04rzb77"
                      },
                      "format": "date-time"
                    },
                    "kyc": {
                      "type": "object",
                      "x-examples": {
                        "Example 1": {
                          "id": "CBDAD1C4-1047-450E-BAE5-B6C406F509B4",
                          "risk_level": "LOW",
                          "applicant_name": "John Doe",
                          "email_address": "johndoe@example.com",
                          "nationality": "American",
                          "id_number": "jd0000123456789",
                          "date_of_birth": "1970-12-01",
                          "address": "42 Faux St",
                          "postal_code": "94401",
                          "country_of_residency": "USA",
                          "kyc_completed_at": "2021-06-10T15:37:03Z",
                          "ip_address": "127.0.0.1",
                          "check_initiated_at": "2021-06-10T15:37:03Z",
                          "check_completed_at": "2021-06-10T15:37:03Z",
                          "approval_status": "approved",
                          "approved_by": "Jane Doe",
                          "approved_at": "2021-06-10T15:38:03Z"
                        }
                      },
                      "description": "Represents Know Your Customer (KYC) info for a CIPInfo",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Your internal ID of check",
                          "format": "uuid"
                        },
                        "risk_score": {
                          "type": "string",
                          "description": "Overall risk score returned by KYC provider or assessed",
                          "x-stoplight": {
                            "id": "90qw403hvrt4y"
                          }
                        },
                        "risk_level": {
                          "type": "string",
                          "description": "Overall risk level returned by KYC provider or assessed",
                          "x-stoplight": {
                            "id": "qlzreqji4lhci"
                          }
                        },
                        "risk_categories": {
                          "type": "array",
                          "description": "The list of risk categories returned by the KYC provider or assessed",
                          "x-stoplight": {
                            "id": "qlzreqji4lhci"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "me5f66krhts26"
                            },
                            "type": "string"
                          }
                        },
                        "applicant_name": {
                          "type": "string",
                          "description": "Given and family name of applicant"
                        },
                        "email_address": {
                          "type": "string",
                          "description": "email address of applicant"
                        },
                        "nationality": {
                          "type": "string",
                          "description": "nationality of applicant"
                        },
                        "date_of_birth": {
                          "type": "string",
                          "description": "DOB of applicant",
                          "format": "date"
                        },
                        "address": {
                          "type": "string",
                          "description": "Concatenated street address, city, state and country of applicant"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "postal code for `address` field"
                        },
                        "country_of_residency": {
                          "type": "string",
                          "description": "country for `address` field"
                        },
                        "kyc_completed_at": {
                          "type": "string",
                          "description": "Datetime that KYC check was completed at",
                          "format": "date-time"
                        },
                        "ip_address": {
                          "type": "string",
                          "description": "IP address of applicant at time of KYC check"
                        },
                        "check_initiated_at": {
                          "type": "string",
                          "description": "start datetime of KYC check",
                          "format": "date-time"
                        },
                        "check_completed_at": {
                          "type": "string",
                          "description": "completion datetime of KYC check",
                          "format": "date-time"
                        },
                        "approval_status": {
                          "type": "string",
                          "description": "Approval status of KYC check"
                        },
                        "approved_by": {
                          "type": "string",
                          "description": "Identifier of who approved KYC check"
                        },
                        "approved_at": {
                          "type": "string",
                          "description": "Reason for approving this KYC check",
                          "format": "date-time"
                        },
                        "approved_reason": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "rw7ke3e65x6xk"
                          },
                          "description": "Datetime that this KYC check was approved"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "title": "CIPKYCInfo",
                      "x-stoplight": {
                        "id": "1ygvfp2y5nwev"
                      }
                    },
                    "document": {
                      "type": "object",
                      "x-examples": {
                        "Example 1": {
                          "id": "55B9931A-3BE6-4BC0-9BDD-0B954E4A4632",
                          "result": "clear",
                          "status": "complete",
                          "created_at": "2021-06-10T15:37:03Z",
                          "image_integrity": "clear"
                        }
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Your internal ID of check"
                        },
                        "result": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "status": {
                          "title": "CIPStatus",
                          "x-stoplight": {
                            "id": "ejcunr8l8s0f2"
                          },
                          "type": "string",
                          "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Datetime for when this check was done"
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "Datetime for when this check was done",
                          "x-stoplight": {
                            "id": "mldoed43bulx0"
                          }
                        },
                        "date_of_expiry": {
                          "type": "string",
                          "format": "date",
                          "description": "Datetime for when this check was done",
                          "x-stoplight": {
                            "id": "zgpwb045porqt"
                          }
                        },
                        "document_numbers": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "ylxi39biyo436"
                          },
                          "description": "Number of the document that was checked",
                          "items": {
                            "x-stoplight": {
                              "id": "n986txzgf0lnx"
                            },
                            "type": "string"
                          }
                        },
                        "document_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "n8sxd8t9f3kzq"
                          },
                          "description": "Type of the document that was checked"
                        },
                        "first_name": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "w2punywp6uw0v"
                          },
                          "description": "First name extracted from the document"
                        },
                        "last_name": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "2nutmuuiwgyib"
                          },
                          "description": "Last name extracted from the document"
                        },
                        "gender": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "23ze35btn7pgd"
                          },
                          "description": "Gender info extracted from the document"
                        },
                        "issuing_country": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "0kb0a69x5g5m6"
                          },
                          "description": "Country for which issued the document"
                        },
                        "nationality": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "l39n0f7u9rg3g"
                          },
                          "description": "Nationality extracted from the document"
                        },
                        "age_validation": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "comprised_document": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "police_record": {
                          "title": "CIPStatus",
                          "x-stoplight": {
                            "id": "ejcunr8l8s0f2"
                          },
                          "type": "string",
                          "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                        },
                        "data_comparison": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "data_comparison_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "j5c0hr492lzlv"
                          },
                          "description": "json object representing the results of the various sub-checks\n          done when calculating the result on `data_comparison`. Example: {“date_of_birth”: “clear”,\n          “date_of_expiry”: “clear” “document_numbers”: “clear”, “document_type”: “clear”, “first_name”: “clear”,\n          “gender”: “clear”, “issuing_country”: “clear”, “last_name”: “clear”}"
                        },
                        "image_integrity": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "image_integrity_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "gw6cht7g7zui2"
                          },
                          "description": "json object representing the results of the various sub-checks done\n          when calculating the result on `image_integrity`. Example: example: {“colour_picture”: “clear”,\n          “conclusive_document_quality”: “clear”, “image_quality”: “clear”, “supported_document”: “clear”}"
                        },
                        "visual_authenticity": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "ccsft0oc0p7y7"
                          },
                          "description": "json object representing the the various sub-checks done when determening\n          whether visual (non-textual) elements are correct given the document type. Example: {\n          “digital_tampering”: “clear”, “face_detection”: “clear”, “fonts”: “clear”, “original_document_present”:\n          “clear”, “picture_face_integrity”: “clear”, “security_features”: “clear”, “template”: “clear”}"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "Represents results of checking a document for CIPInfo\n",
                      "x-stoplight": {
                        "id": "7pizeb1ps42ij"
                      }
                    },
                    "photo": {
                      "type": "object",
                      "x-examples": {
                        "Example 1": {
                          "id": "0DD13020-F0FD-4B5A-B58F-BC1885E90A6D",
                          "result": "clear",
                          "status": "complete",
                          "created_at": "2021-06-10T15:37:03Z",
                          "face_comparison": "clear"
                        }
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Your internal ID of check"
                        },
                        "result": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "status": {
                          "type": "number",
                          "description": "Overall status of check"
                        },
                        "created_at": {
                          "type": "string",
                          "description": "datetime of when check happened"
                        },
                        "face_comparison": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "face_comparison_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "nva7tm8q3itop"
                          },
                          "description": "a json object representing the breakdown of sub-checks done in\n          `face_comparison`. Example: {“face_match”:{“result”: “clear”,“properties”:{“score”: “80”}}}"
                        },
                        "image_integrity": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "image_integrity_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "lltcpsijc1bwo"
                          },
                          "description": "a json object representing the breakdown of sub-checks done in\n          `image_integrity`. Example  {“face_detected”:{“result”: “clear”},“source_integrity”: {“result”: “clear”}}"
                        },
                        "visual_authenticity": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "visual_authenticity_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "0712bbbrw15oo"
                          },
                          "description": "a json object representing the breakdown of sub-checks don in\n          `visual_authenticity`. Example {“spoofing_detection”: {“result”: “clear”,“properties”: {“score”: “26”}}}}"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "description": "Represents the results of checking a Photo for CIPInfo",
                      "x-stoplight": {
                        "id": "hqx4vrzqypp7h"
                      }
                    },
                    "identity": {
                      "type": "object",
                      "x-examples": {
                        "Example 1": {
                          "id": "28E1CCE8-1B1A-4472-9AD4-C6C5B7C3A6AF",
                          "result": "clear",
                          "status": "complete",
                          "created_at": "2021-06-10T15:37:03Z",
                          "sources": "clear",
                          "address": "clear",
                          "date_of_birth": "clear"
                        }
                      },
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Your internal ID of check"
                        },
                        "result": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "status": {
                          "title": "CIPStatus",
                          "x-stoplight": {
                            "id": "ejcunr8l8s0f2"
                          },
                          "type": "string",
                          "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "datetime when identity check happened"
                        },
                        "matched_address": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "matched_addresses": {
                          "type": "string",
                          "description": "datetime when identity check happened",
                          "x-stoplight": {
                            "id": "1vqeq6vfihjs2"
                          }
                        },
                        "sources": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "sources_breakdown": {
                          "type": "string",
                          "description": "a json object representing the breakdown of `sources` field. For example:\n          {“total_sources”: {“result”: “clear”,“properties”: {“total_number_of_sources”: “3”}}}",
                          "x-stoplight": {
                            "id": "4aehkpo8da5mr"
                          }
                        },
                        "address": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "address_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "wcctczes53ivy"
                          },
                          "description": "a json object representing the breakdown of the `address` field. For example:\n          {“credit_agencies”: {“result”: “clear”,“properties”:{“number_of_matches”:“1”}}"
                        },
                        "date_of_birth": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "date_of_birth_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "efhx1bwabsdty"
                          },
                          "description": "a json object representing the breakdown of the `date_of_birth` field.\n          For example: example: {“credit_agencies”:{“result”: “clear”,“properties”: {“number_of_matches”: “1”}}"
                        },
                        "tax_id": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "tax_id_breakdown": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "x5c64geol7p1s"
                          },
                          "description": "a json object representing the breakdown of the `tax_id` field"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "x-stoplight": {
                        "id": "g8qjr3c8h1npx"
                      }
                    },
                    "watchlist": {
                      "type": "object",
                      "x-examples": {
                        "Example 1": {
                          "id": "7572B870-EB4C-46A2-8B88-509194CCEE7E",
                          "result": "clear",
                          "status": "complete",
                          "created_at": "2021-06-10T15:37:03Z",
                          "politically_exposed_person": "clear",
                          "sanction": "clear",
                          "adverse_media": "clear",
                          "monitored_lists": "clear"
                        }
                      },
                      "description": "Represents the result of checking to see if the applicant is in any watchlists for a CIPInfo",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Your internal ID of check"
                        },
                        "result": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "status": {
                          "title": "CIPStatus",
                          "x-stoplight": {
                            "id": "ejcunr8l8s0f2"
                          },
                          "type": "string",
                          "description": "An enum representing the status of the CIPInfo\n\n\"complete\"\n\n\"withdrawn\""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "datetime when check happened"
                        },
                        "records": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "0jk1ut5oct0ml"
                          },
                          "description": "a json object. Example [{“text”: “Record info”}]"
                        },
                        "politically_exposed_person": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "adverse_media": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "sanction": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        },
                        "monitored_lists": {
                          "title": "CIPResult",
                          "x-stoplight": {
                            "id": "4mte2vkxwqcmd"
                          },
                          "type": "string",
                          "description": "\"clear\"\n\n\"consider\""
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "x-stoplight": {
                        "id": "b6tmg9qshk4f9"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "You can retrieve the CIP information you’ve submitted for a given account.",
        "tags": [
          "KYC"
        ]
      }
    },
    "/v1/accounts/{account_id}/onfido/sdk/tokens": {
      "get": {
        "summary": "Retrieve an Onfido SDK Token",
        "tags": [
          "KYC"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "The account ID"
          },
          {
            "name": "referrer",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The referrer URL of your web app or the application ID of your mobile app. If not passed in, will default to the * wildcard"
          },
          {
            "name": "platform",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Required if referrer provided. Enum values are either mobile or web"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "token": "header.payload.signature"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Onfido applicant not yet created for account. If you haven’t already contacted Alapca to enable Onfido, please do so."
          }
        },
        "operationId": "get-v1-accounts-account_id-onfido-sdk-tokens",
        "description": "Get an SDK token to activate the Onfido SDK flow within your app. You will have to keep track of the SDK token so you can pass it back when you upload the SDK outcome. We recommend storing the token in memory rather than persistent storage to reduce any unnecessary overhead in your app."
      }
    },
    "/v1/accounts/{account_id}/onfido/sdk": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update the Onfido SDK Outcome",
        "operationId": "patch-v1-accounts-account_id-onfido-sdk",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Account Not Found​"
          },
          "422": {
            "description": "Invalid input value for outcome."
          }
        },
        "description": "This request allows you to send Alpaca the result of the Onfido SDK flow in your app. A notification of a successful outcome is required for Alpaca to continue the KYC process.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "outcome": "USER_EXITED",
                    "reason": "User denied consent",
                    "token": "header.payload.signature"
                  }
                },
                "properties": {
                  "outcome": {
                    "title": "OnfidoSDKOutcome",
                    "x-stoplight": {
                      "id": "gasz29uxpmhoo"
                    },
                    "type": "string",
                    "description": "\"NOT_STARTED\"\tThe user has not started the SDK flow yet. outcome is set to this default value upon token generation\n\"USER_EXITED\"\tThe user exited the SDK flow\n\"SDK_ERROR\"\tAn error occurred in the SDK flow\n\"USER_COMPLETED\"\tThe user completed the SDK flow"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Any additional information related to the outcome"
                  },
                  "token": {
                    "type": "string",
                    "description": "The SDK token associated with the SDK flow you are updating the outcome for"
                  }
                },
                "required": [
                  "outcome",
                  "token"
                ]
              }
            }
          }
        },
        "tags": [
          "KYC"
        ]
      }
    },
    "/v1/accounts/{account_id}/documents/w8ben/{document_id}/download": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "The id for the related Account"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "The id for the W8Ben you wish to download"
        }
      ],
      "get": {
        "summary": "Download the W8Ben document",
        "tags": [
          "Documents"
        ],
        "responses": {
          "301": {
            "description": "Redirects to a presigned download link for the document PDF."
          },
          "404": {
            "description": "Document Not Found"
          }
        },
        "operationId": "get-v1-accounts-account_id-documents-w8ben-document_id-download",
        "description": "This endpoint allows you to download a W8ben identified by the document_id passed as a path parameter. The returned document is in PDF format.\n\nYou can retrieve a JSON version of a monthly statement by passing in the header accept: application/json header.\n\nFor certain individuals, a W-8 BEN form should be submitted at onboarding. If the individual is not a registered U.S. taxpayer (not subject to a W-9), the W-8 BEN form may need to be submitted. The IRS explains which individuals this applies to and provides instructions on completing the form. Every three years, in addition to the calendar year it was signed, a new W-8 BEN form must be submitted.\n\nThe form can be submitted in JSON, JSONC, PNG, JPEG or PDF. If submitting it in JSON, please see the W-8 BEN completed with the corresponding field names for the API here.\n\nNote: The dates collected on the form are in a slightly different format than how they need to be submitted via Accounts API. It is requested by the user on the form in MM-DD-YYYY, but should be submitted as YYYY-MM-DD."
      }
    },
    "/v1/corporate_actions/announcements/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The id of the corporate action announcement to be returned."
        }
      ],
      "get": {
        "summary": "Retrieve a Specific Announcement",
        "tags": [
          "Corporate Actions"
        ],
        "responses": {
          "200": {
            "description": "An Announcement object."
          },
          "400": {
            "description": "The body in the request is not valid"
          },
          "422": {
            "description": "Invalid input value."
          },
          "500": {
            "description": "A server error occurred. Please contact Alpaca."
          }
        },
        "operationId": "get-GET-v1-corporate_actions-announcements-id",
        "description": "This enables searching for a specific corporate action announcement."
      }
    },
    "/v1/events/nta": {
      "get": {
        "summary": "Subscribe to Non-Trading Activities Events (SSE)",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-v1-events-nta",
        "description": "You can listen to when NTAs are pushed such as CSDs, JNLC (journals) or FEEs.\n\nQuery Params Rules:\n- `since` required if `until` specified\n- `since_id` required if `until_id` specified\n- `since_ulid` required if `until_ulid` specified\n- `since`, `since_id` or `since_ulid`  can’t be used at the same time\nBehavior:\n- if `since`, `since_id` or `since_ulid` not specified this will not return any historic data\n- if `until`, `until_id` or `until_ulid` reached stream will end (status 200)'",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "since",
            "description": "Format: YYYY-MM-DD"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "until",
            "description": "Format: YYYY-MM-DD"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "since_id"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "until_id"
          },
          {
            "name": "since_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "name": "until_ulid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ulid"
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "include_preprocessing"
          }
        ]
      }
    },
    "/v1/transfers/jit/reports": {
      "get": {
        "summary": "Retrieve JIT Reports",
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JITReport",
                  "x-stoplight": {
                    "id": "ragg7o909954y"
                  },
                  "type": "object",
                  "description": "JIT Securities reports are made available through the API and can be accessed within the hour after 11:30 PM EST on the trade date (T+0). The reports communicate transaction-level details as well as overall settlement amounts, transfer direction, and payment timing.",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "s4ezmhwn7oqxv"
                      },
                      "description": "Contains all activities that impact cash throughout the trading session including executed trades, trading fees, and corporate actions that involve cash allocations.\n\ncontent-type = application/csv"
                    },
                    "net_summary": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "phtq9hmob3aux"
                      },
                      "description": "Consists of three columns and a single row, which lists the net money movement to or from Alpaca for T0, T1, and T2.\n\ncontent-type = application/csv"
                    },
                    "net_payment": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "um5xd4us4djch"
                      },
                      "description": "Highlights the net amount due to Alpaca by settlement or to the partner on the date of settlement in a formalized invoice format.\n\ncontent-type = application/pdf"
                    },
                    "net_payment_final": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "3q3ubyhwekvh4"
                      },
                      "description": "Includes additional information to account for T+0 and T+1 settling activity to clarify settlement journaling reconciliation. This report is generated after trading session close on T+1.\n\ncontent-type = application/pdf"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-transfers-jit-reports",
        "parameters": [
          {
            "name": "report_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "detail",
                "net_summary",
                "net_payment",
                "net_payment_final",
                "gross_summary",
                "gross_payment",
                "gross_payment_final"
              ]
            },
            "description": "The type of report you want to get."
          },
          {
            "name": "system_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date of file generation."
          },
          {
            "name": "asset_class",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "us_equity",
                "crypto"
              ]
            },
            "description": "The asset class to retrieve for."
          }
        ],
        "description": "Returns all JIT reports"
      }
    },
    "/v1/transfers/jit/limits": {
      "get": {
        "summary": "Retrieve Daily Trading Limits",
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "Returns the JIT Securities Daily Trading Limit Object based off of real time calculations.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DailyTradingLimit",
                  "x-stoplight": {
                    "id": "at5t8fzsrjz6s"
                  },
                  "type": "object",
                  "properties": {
                    "daily_net_limit_in_use": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "4159up5cilte2"
                      },
                      "description": "The real time net value of cash inflows (buy trades, etc.) with cash outflows (sell trades, dividends, etc). This will be dynamic throughout the day based on user activity, with executed orders being reset at the start of the next trading day.",
                      "format": "decimal"
                    },
                    "daily_net_limit": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "s7lyx5zx2bxkq"
                      },
                      "format": "decimal",
                      "description": "The net buying limit that can be reached before further cash outflow trading activity is restricted. Please reach out to learn more about how this limit is determined."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-transfers-jit-limits",
        "description": "The JIT Securities daily trading limit is set at the correspondent level and is used as the limit for the total amount due to Alpaca on the date of settlement. The limit in use returns the real time usage of this limit and is calculated by taking the net of trade and non-trade activity inflows and outflows. If the limit in use reaches the daily net limit, further purchasing activity will be halted, however, the limit can be adjusted by reaching out to Alpaca with the proposed new limit and the reason for the change."
      }
    },
    "/v1/transfers/jit/ledgers": {
      "get": {
        "summary": "Retrieve JIT Ledgers",
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "JITLedgerAccount",
                    "x-stoplight": {
                      "id": "8qgcugadp72ky"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ledger ID"
                      },
                      "ledger_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "177un5yfjzo30"
                        },
                        "description": "The ledger name"
                      },
                      "status": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "f1h0v5xllvutk"
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "v28v0514mevfi"
                        },
                        "description": "Creation time in UNIX format"
                      }
                    },
                    "x-examples": {
                      "Example 1": {
                        "id": "2896b9e2-3198-44cd-a08e-4cc4079aee33",
                        "ledger_name": "Securities JIT IN",
                        "status": "active",
                        "created_at": "1653532627"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-transfers-jit-ledgers",
        "description": "Returns an array of objects that correspond to each ledger account, each of whichcontain the following attributes."
      }
    },
    "/v1/transfers/jit/{ledger_id}/balances": {
      "get": {
        "summary": "Retrieve JIT Ledger Balances",
        "tags": [
          "Funding"
        ],
        "parameters": [
          {
            "name": "ledger_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The start date (inclusive) of the ledgerbalances and activities."
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The end date (inclusive) of the ledgerbalances and activities."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "i93oh1b7w2em9"
                      },
                      "description": "The ledger ID"
                    },
                    "ledger_no": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "ybo7l8ty2z4ba"
                      },
                      "description": "The ledger account number"
                    },
                    "ledger_name": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "g2430brqomb76"
                      },
                      "description": "The ledger name"
                    },
                    "transactions": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "7jnr31tbri9l0"
                      },
                      "items": {
                        "type": "object",
                        "x-examples": {
                          "Example 1": {
                            "account_id": "06b9d76e-1733-460c-844e-48d1ae0f10c3",
                            "account_no": "JTRJITS00",
                            "account_name": "Just In Time Receivable - JITS",
                            "system_date": "2022-06-10",
                            "entry_type": "JNLC",
                            "description": "debit balance = 4185.36, base_rate = 0.0375, spread = 0.05",
                            "contra_account_name": "Just In Time Interest Income",
                            "amount": "1",
                            "balance": "4186.36"
                          }
                        },
                        "properties": {
                          "account_id": {
                            "type": "string",
                            "description": "The ledger ID"
                          },
                          "account_no": {
                            "type": "string",
                            "description": "The ledger account number"
                          },
                          "account_name": {
                            "type": "string",
                            "description": "The ledger name"
                          },
                          "system_date": {
                            "type": "string",
                            "description": "Date of transaction"
                          },
                          "entry_type": {
                            "type": "string",
                            "description": "Type of transaction"
                          },
                          "description": {
                            "type": "string",
                            "description": "Plain text overview of the transaction"
                          },
                          "contra_account_name": {
                            "type": "string",
                            "description": "Contra account of transaction"
                          },
                          "amount": {
                            "type": "string",
                            "description": "Total amount of the transaction"
                          },
                          "balance": {
                            "type": "string",
                            "description": "Ending balance after thetransaction has been applied"
                          }
                        }
                      }
                    },
                    "starting_balance": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "19ncib5wve17o"
                      },
                      "description": "Ledger balance at the beginning of the date range",
                      "format": "decimal"
                    },
                    "ending_balance": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "etolgr1qisrz5"
                      },
                      "description": "Ledger balance at the end of the date range",
                      "format": "decimal"
                    },
                    "activity_amount": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "eon4dv0x49fvs"
                      },
                      "description": "The number of transactions related to the ledger during the specified date range ",
                      "format": "decimal"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-transfers-jit-ledger_id-balances",
        "description": "Returns an array of objects that correspond to each ledger account."
      }
    },
    "/v1/journals/batch/reverse_batch": {
      "post": {
        "summary": "Create a Reverse Batch Journal Transaction (Many-to-One)",
        "tags": [
          "Journals"
        ],
        "operationId": "post-v1-journals-batch-reverse_batch",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "BatchJournalResponse",
                    "description": "A Journal object with an extra attribute error_message in the case when a specific account fails to receive a journal.",
                    "allOf": [
                      {
                        "title": "Journal",
                        "example": {
                          "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                          "entry_type": "JNLS",
                          "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                          "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                          "status": "executed",
                          "symbol": "AAPL",
                          "qty": "2",
                          "price": "128.23"
                        },
                        "x-examples": {
                          "example": {
                            "id": "h7h5g33f-ef01-4458-9a4b-9598727a406f",
                            "entry_type": "JNLS",
                            "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                            "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                            "status": "executed",
                            "symbol": "AAPL",
                            "qty": "2",
                            "settle_date": "2020-12-24",
                            "price": "128.23"
                          },
                          "example-pending": {
                            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                            "entry_type": "JNLC",
                            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                            "symbol": null,
                            "qty": null,
                            "price": "0",
                            "status": "pending",
                            "settle_date": "2022-02-17",
                            "system_date": "2022-02-17",
                            "net_amount": "645",
                            "description": ""
                          },
                          "example-queued": {
                            "id": "6d2cba43-cb57-4534-9603-a6e159167c0a",
                            "entry_type": "JNLC",
                            "from_account": "3dcb795c-3ccc-402a-abb9-07e26a1b1326",
                            "to_account": "2a87c088-ffb6-472b-a4a3-cd9305c8605c",
                            "symbol": "",
                            "qty": null,
                            "price": "0",
                            "status": "queued",
                            "settle_date": null,
                            "system_date": null,
                            "net_amount": "645",
                            "description": ""
                          }
                        },
                        "description": "Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "journal ID"
                              },
                              "entry_type": {
                                "type": "string",
                                "title": "",
                                "description": "This enum represents the various kinds of Journal alpaca supports.\n\nCurrent values are:\n\n- **JNLC**\n\n  Journal Cash between accounts\n\n- **JNLS**\n\n  Journal Securities between accounts",
                                "enum": [
                                  "JNLC",
                                  "JNLS"
                                ],
                                "x-stoplight": {
                                  "id": "itme4epinxsnk"
                                }
                              },
                              "from_account": {
                                "type": "string",
                                "format": "uuid",
                                "description": "account ID the shares go from"
                              },
                              "to_account": {
                                "type": "string",
                                "format": "uuid",
                                "description": "account ID the shares go to"
                              },
                              "settle_date": {
                                "type": "string",
                                "format": "date"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "pending",
                                  "canceled",
                                  "executed",
                                  "queued",
                                  "rejected",
                                  "deleted"
                                ],
                                "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                                "x-stoplight": {
                                  "id": "ay4nu4z1j11cu"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "entry_type",
                              "from_account",
                              "to_account",
                              "settle_date"
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "x-examples": {
                                  "Example 1": {
                                    "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                                    "to_account": "g7h7rg66-6f2a-433c-8c33-17b66b8941fa",
                                    "entry_type": "JNLS",
                                    "symbol": "AAPL",
                                    "qty": "0.5",
                                    "price": "128.23",
                                    "status": "executed",
                                    "from_account": "8k4f3d-4483-4199-840f-6c5fe0b7ca24",
                                    "settle_date": "2020-12-24",
                                    "system_date": "2020-12-24",
                                    "description": "this is a test journal"
                                  }
                                },
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The journal ID"
                                  },
                                  "to_account": {
                                    "type": "string",
                                    "description": "The account ID that received the journal - account_status must equal to ACTIVE"
                                  },
                                  "entry_type": {
                                    "type": "string",
                                    "description": "JNLS"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the security journaled"
                                  },
                                  "qty": {
                                    "type": "string",
                                    "description": "The quantity of the securities journaled"
                                  },
                                  "price": {
                                    "type": "string",
                                    "description": "The price of the security journaled"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "executed",
                                      "queued",
                                      "rejected",
                                      "deleted"
                                    ],
                                    "description": "Represents the status that a Journal instance can be in.\n\n**Current Values**\n\nqueued\tJournal in queue to be processed. Journal is not processed yet.\n\nsent_to_clearing\tJournal sent to be processed by Alpaca’s booking system. The journal is not processed yet.\n\npending\t    Journal pending to be processed as it requires manual approval from Alpaca operations (for example due to hitting JNLC daily limits).\n\nexecuted\tJournal executed and balances updated for both sides of \nthe journal transaction. This is not a final status, journals can be reversed if there is an error.\n\nrejected\tJournal rejected. Please try again.\n\ncanceled\tJournal canceled. This is a **FINAL** status.\n\nrefused\tJournal refused. Please try again.\n\ndeleted\tJournal deleted. This is a **FINAL** status.\n\ncorrect\tJournal is corrected. Previously executed journal is cancelled and a new journal is corrected amount is created. This is a **FINAL** status.",
                                    "x-stoplight": {
                                      "id": "ay4nu4z1j11cu"
                                    }
                                  },
                                  "from_account": {
                                    "type": "string",
                                    "description": "The account ID that initiates the journal - account_status must equal to ACTIVE or CLOSE"
                                  },
                                  "settle_date": {
                                    "type": "string",
                                    "description": "Date string in “%Y-%m-%d” format"
                                  },
                                  "system_date": {
                                    "type": "string",
                                    "description": "Date string in “%Y-%m-%d” format"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "29s5ect4watc4"
                                    },
                                    "description": "Currency denomination of the journal. USD by default."
                                  }
                                }
                              },
                              {
                                "example": {
                                  "id": "f45g67h8-d1fc-4136-aa4f-cf4460aecdfc",
                                  "entry_type": "JNLC",
                                  "from_account": "8fjkjn-4483-4199-840f-6c5fe0b7ca24",
                                  "to_account": "3gtt65jd-6f2a-433c-8c33-17b66b8941fa",
                                  "status": "pending",
                                  "net_amount": "115.5"
                                },
                                "description": "Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).",
                                "type": "object",
                                "title": "JNLC",
                                "properties": {
                                  "description": {
                                    "type": "string",
                                    "description": "ID the amount goes to. Only valid for JNLC journals. Null for JNLS."
                                  },
                                  "net_amount": {
                                    "type": "string",
                                    "format": "decimal",
                                    "description": "Only valid for JNLC journals. Null for JNLS."
                                  },
                                  "transmitter_name": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS. Max 255 characters."
                                  },
                                  "transmitter_account_number": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_address": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_financial_institution": {
                                    "type": "string",
                                    "description": "Only valid for JNLC journals. Null for JNLS.max 255 characters"
                                  },
                                  "transmitter_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Only valid for JNLC journals. Null for JNLS."
                                  }
                                },
                                "required": [
                                  "net_amount"
                                ],
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "qo2ttptb2frpx"
                                }
                              }
                            ]
                          }
                        ],
                        "x-stoplight": {
                          "id": "2isltcm8hzb23"
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "error_message": {
                            "type": "string",
                            "description": "Description of why this journal transaction failed"
                          }
                        },
                        "required": [
                          "error_message"
                        ]
                      }
                    ],
                    "x-examples": {
                      "example-1": {
                        "error_message": "",
                        "id": "56f106e5-25a4-4eee-96fa-25bb05dc86bc",
                        "entry_type": "JNLC",
                        "from_account": "8f8c8cee-2591-4f83-be12-82c659b5e748",
                        "to_account": "399f85f1-cbbd-4eaa-a934-70027fb5c1de",
                        "symbol": "",
                        "qty": null,
                        "price": null,
                        "status": "pending",
                        "settle_date": null,
                        "system_date": null,
                        "net_amount": "1000",
                        "description": ""
                      }
                    },
                    "x-stoplight": {
                      "id": "ls0561ikjlnez"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request Body"
          },
          "403": {
            "description": " Insufficient Balance (JNLC) or Insufficient Assets (JNLS)"
          },
          "404": {
            "description": "Account not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "entry_type": "JNLC",
                    "to_account": "8f8c8cee-2591-4f83-be12-82c659b5e748",
                    "entries": [
                      {
                        "from_account": "8e00606a-c9ac-409a-ba45-f55e8f77984a",
                        "amount": "10"
                      },
                      {
                        "from_account": "b9b19618-22dd-4e80-8432-fc9e1ba0b27d",
                        "amount": "100"
                      },
                      {
                        "from_account": "c96a5e16-7fca-425a-b67b-0814d064bfc0",
                        "amount": "100"
                      }
                    ]
                  }
                },
                "properties": {
                  "entry_type": {
                    "type": "string",
                    "description": "ENUM: JNLC or JNLS"
                  },
                  "to_account": {
                    "type": "string",
                    "description": "The destination of funds. Most likely is your Sweep Firm Account"
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from_account": {
                          "type": "string",
                          "description": "The ID of the from_account that you want to journal from"
                        },
                        "amount": {
                          "type": "string",
                          "description": "Journal amount in USD"
                        }
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "xlfz4halme40h"
                    },
                    "description": "Journal description, gets returned in the response"
                  }
                }
              }
            }
          }
        },
        "description": "You can also create a batch journal request by using the following endpoint. This is enabled on JNLC for now only.\n\nNote that if there is an invalid account_id the whole batch operation will be canceled.\nEvery single request must be valid for the entire batch operation to succeed.\n\nIn the case of a successful request, the response will contain an array of journal objects with an extra attribute error_message in the case when a specific account fails to submit a journal."
      }
    },
    "/v1beta1/logos/{symbol}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "symbol",
          "in": "path",
          "required": true,
          "description": "Stock or crypto symbol (e.g. AAPL, BTCUSD, etc.)"
        }
      ],
      "get": {
        "summary": "Get Logo",
        "tags": [
          "Logos"
        ],
        "responses": {
          "200": {
            "description": "The API response will return the raw image as a binary"
          }
        },
        "operationId": "get-v1beta1-logos-symbol",
        "description": "Alpaca’s Logo API serves uniform logo images for select stock and crypto symbols.\n\nNote: For Logo API pricing details, reach out to sales@alpaca.markets\n\nThe API response will return the raw image as a binary",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "placeholder",
            "description": "True by default, will return sample placeholder images with the first letter of the asset symbol. If false, 404 will be returned for symbols which do not contain an image."
          }
        ]
      }
    },
    "/v1/reporting/eod/aggregate_positions": {
      "get": {
        "summary": "Retrieve Aggregate Positions",
        "tags": [
          "Reporting"
        ],
        "responses": {
          "200": {
            "description": "Array of objects, each object pertains to the date specified in the request and a unique asset. See parameters below. Notes: Returns an empty array for non-trading days, assets with no positions are omitted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-examples": {
                      "Example 1": {
                        "symbol": "AAPL",
                        "cusip": "037833100",
                        "long_qty": "1",
                        "short_qty": "0",
                        "long_market_value": "148.4700",
                        "short_market_value": "0",
                        "num_accounts": "1",
                        "asset_type": "us_equity",
                        "closing_price": "148.4700"
                      }
                    },
                    "properties": {
                      "symbol": {
                        "type": "string",
                        "description": "Symbol of asset"
                      },
                      "cusip": {
                        "type": "string",
                        "description": "Cusip (9 digits, can start with 0’s)",
                        "format": "decimal"
                      },
                      "long_qty": {
                        "type": "string",
                        "description": "Aggregate number of shares that the partner is long",
                        "format": "decimal"
                      },
                      "short_qty": {
                        "type": "string",
                        "description": "Aggregate number of shares that the partner is short",
                        "format": "decimal"
                      },
                      "long_market_value": {
                        "type": "string",
                        "description": "Aggregate notional dollar amount of the partner’s long positions",
                        "format": "decimal"
                      },
                      "short_market_value": {
                        "type": "string",
                        "description": "Aggregate notional dollar amount of the partner’s short positions",
                        "format": "decimal"
                      },
                      "num_accounts": {
                        "type": "integer",
                        "description": "Number of accounts that have a position in this asset (either long or short)",
                        "format": "decimal"
                      },
                      "asset_type": {
                        "type": "string",
                        "enum": [
                          "us_equity",
                          "crypto"
                        ],
                        "x-stoplight": {
                          "id": "0stvwzkbv2e0u"
                        }
                      },
                      "closing_price": {
                        "type": "string",
                        "description": "EOD asset price per share at session close",
                        "format": "decimal"
                      }
                    },
                    "title": ""
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-reporting-eod-aggregate_positions",
        "description": "This API endpoint provides reporting data to partners for aggregate common stock and crypto positions across their account base. Partners can view historical snapshots of their holding across their entire account base. Please note that this API utilizes an 8:00 pm (EST) cutoff which aligns with the end of the Securities extended hours trading session as well as Alpaca’s 24 hour Crypto trading window. Additionally, the endpoint supports indexing to help the partner efficiently filter by key information including date and symbol while being able to include or remove firm accounts.",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "“YYYY-MM-DD” format"
          },
          {
            "name": "symbols",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated symbols. If populated, then only the specified symbols will be returned. If null, then all symbols will be included in the response."
          },
          {
            "name": "firm_accounts",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Defaults to True which includes firm accounts. Passing False will exclude all firm accounts."
          }
        ]
      }
    },
    "/v1/reporting/eod/positions": {
      "get": {
        "summary": "Retrieve EOD Positions",
        "tags": [
          "Reporting"
        ],
        "responses": {
          "200": {
            "description": "Successful response containing the end-of-day positions for the specified accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "asof": {
                      "type": "string",
                      "format": "date",
                      "description": "The date of the snapshot in the 'YYYY-MM-DD' format."
                    },
                    "positions": {
                      "type": "object",
                      "description": "A detailed map of account IDs to their respective positions.",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-examples": {
                            "example-1": {
                              "asset_id": "93f58d0b-6c53-432d-b8ce-2bad264dbd94",
                              "symbol": "AAPL",
                              "exchange": "NASDAQ",
                              "asset_class": "us_equity",
                              "asset_marginable": false,
                              "qty": "4",
                              "avg_entry_price": "172.08",
                              "side": "long",
                              "market_value": "688.32",
                              "cost_basis": "688.32",
                              "unrealized_pl": "0",
                              "unrealized_plpc": "0",
                              "unrealized_intraday_pl": "0",
                              "unrealized_intraday_plpc": "0",
                              "current_price": "172.08",
                              "lastday_price": "168.88",
                              "change_today": "0.0189483657034581"
                            }
                          },
                          "x-stoplight": {
                            "id": "b2tmookzpqlzr"
                          },
                          "properties": {
                            "asset_id": {
                              "type": "string",
                              "example": "904837e3-3b76-47ec-b432-046db621571b",
                              "format": "uuid",
                              "description": "Asset ID"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "AAPL",
                              "description": "Asset symbol"
                            },
                            "exchange": {
                              "type": "string",
                              "example": "NASDAQ",
                              "description": "Exchange name of the asset"
                            },
                            "asset_class": {
                              "type": "string",
                              "enum": [
                                "us_equity",
                                "crypto"
                              ],
                              "x-stoplight": {
                                "id": "0stvwzkbv2e0u"
                              }
                            },
                            "asset_marginable": {
                              "type": "boolean",
                              "description": "Indicates if this asset is marginable"
                            },
                            "avg_entry_price": {
                              "type": "string",
                              "example": "100.0",
                              "description": "Average entry price of the position"
                            },
                            "qty": {
                              "type": "string",
                              "example": "5",
                              "description": "The number of shares"
                            },
                            "side": {
                              "type": "string",
                              "example": "long",
                              "enum": [
                                "long",
                                "short"
                              ]
                            },
                            "market_value": {
                              "type": "string",
                              "format": "decimal",
                              "example": "600.0",
                              "description": "Total market value of the position"
                            },
                            "cost_basis": {
                              "type": "string",
                              "format": "decimal",
                              "example": "500.0",
                              "description": "Total cost basis"
                            },
                            "unrealized_pl": {
                              "type": "string",
                              "format": "decimal",
                              "example": "100.0",
                              "description": "Unrealized profit/loss"
                            },
                            "unrealized_plpc": {
                              "type": "string",
                              "format": "decimal",
                              "example": "0.20",
                              "description": "Unrealized profit/loss percent (by a factor of 1)"
                            },
                            "unrealized_intraday_pl": {
                              "type": "string",
                              "format": "decimal",
                              "example": "10.0",
                              "description": "Unrealized profit/loss for the day"
                            },
                            "unrealized_intraday_plpc": {
                              "type": "string",
                              "format": "decimal",
                              "example": "0.0084",
                              "description": "Unrealized interday profit/loss percent (by a factor of 1)"
                            },
                            "current_price": {
                              "type": "string",
                              "format": "decimal",
                              "example": "120.0",
                              "description": "Current asset price per share"
                            },
                            "lastday_price": {
                              "type": "string",
                              "format": "decimal",
                              "example": "119.0",
                              "description": "Last day’s asset price per share based on the closing value of the last trading day"
                            },
                            "change_today": {
                              "type": "string",
                              "format": "decimal",
                              "example": "0.0084",
                              "description": "Percent change from last day price (by a factor of 1)"
                            },
                            "swap_rate": {
                              "type": "string",
                              "format": "decimal",
                              "description": "The latest swap rate. This is only returned for LCT accounts.",
                              "example": "1.50",
                              "x-stoplight": {
                                "id": "t02dt3rtisrkx"
                              }
                            },
                            "avg_entry_swap_rate": {
                              "type": "string",
                              "format": "decimal",
                              "description": "The average swap rate of the position. This is only returned for LCT accounts.",
                              "example": "1.40",
                              "x-stoplight": {
                                "id": "a0kh9eu3byvfp"
                              }
                            },
                            "usd": {
                              "title": "USDPosition",
                              "description": "Position values in USD. This is returned for LCT (non-USD) accounts only.",
                              "type": "object",
                              "properties": {
                                "avg_entry_price": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Average entry price of the position in USD",
                                  "example": "71.43"
                                },
                                "market_value": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Total market value of the position in USD",
                                  "example": "400.00"
                                },
                                "cost_basis": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Total cost basis in USD",
                                  "example": "333.33"
                                },
                                "unrealized_pl": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Unrealized profit/loss in USD",
                                  "example": "66.67"
                                },
                                "unrealized_plpc": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Unrealized profit/loss percent (by a factor of 1)",
                                  "example": "0.2"
                                },
                                "unrealized_intraday_pl": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Unrealized profit/loss in USD for the day",
                                  "example": "6.67"
                                },
                                "unrealized_intraday_plpc": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Unrealized interday profit/loss percent (by a factor of 1)",
                                  "example": "0.0084"
                                },
                                "current_price": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Current asset price per share in USD",
                                  "example": "80.0"
                                },
                                "lastday_price": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Last day’s asset price per share based on the closing value of the last trading day in USD",
                                  "example": "79.33"
                                },
                                "change_today": {
                                  "type": "string",
                                  "format": "decimal",
                                  "description": "Percent change from last day price (by a factor of 1)",
                                  "example": "0.67"
                                }
                              }
                            }
                          },
                          "required": [
                            "asset_id",
                            "symbol",
                            "exchange",
                            "asset_class",
                            "avg_entry_price",
                            "qty",
                            "side",
                            "market_value",
                            "cost_basis",
                            "unrealized_pl",
                            "unrealized_plpc",
                            "unrealized_intraday_pl",
                            "unrealized_intraday_plpc",
                            "current_price",
                            "lastday_price",
                            "change_today"
                          ]
                        }
                      }
                    },
                    "page": {
                      "type": "integer",
                      "description": "The current page number.",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "description": "The number of accounts per page.",
                      "example": 1000
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "This can be returned if the asof param does not match the latest snap available at Alpaca."
          }
        },
        "operationId": "get-v1-reporting-eod-positions",
        "description": "This API retrieves a comprehensive list of end-of-day positions for all accounts. End-of-day (EOD) positions are typically accessible after 4:00 am Eastern Time (ET) on the following day, providing a comprehensive view of the day's closing positions across all accounts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Filter the results by account_id (optional)."
                  },
                  "asset": {
                    "type": "string",
                    "description": "Filter the results by asset ID or symbol (optional)."
                  },
                  "asof": {
                    "type": "string",
                    "format": "date",
                    "description": "The positions date in 'YYYY-MM-DD' format. It's recommended to provide this parameter when the 'page' parameter is specified, to ensure precise data retrieval based on the desired date."
                  },
                  "page": {
                    "type": "integer",
                    "description": "The page number (default=1). This parameter is used for pagination."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "The number of accounts to display per page (default=1000, max=10000)."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/trading/accounts/{account_id}/orders/estimation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Estimate an Order",
        "tags": [
          "Trading"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "operationId": "get-v1-trading-accounts-account_id-orders-estimation",
        "description": "Order estimation endpoint will display, based on user’s account balance, the estimated quantity and price they will receive for their notional order.\n\nFor LCT - customer’s order will include the Alpaca swap_fee, while correspondent side swap_fee is configurable in the API call. Utilising this API does not result in a real order and after the calculation - the user’s buying power reverts to the previous state.\n\nResponses and Errors are the same as with the Orders API\n\nPlease note that the estimation is based on the market condition at the time of submission and a live order will differ. The output should be considered indicative.\n\n**Note:** This does not support Crypto or non-market orders at this time.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "symbol": "AAPL",
                    "side": "buy",
                    "type": "market",
                    "time_in_force": "day",
                    "notional": "40",
                    "swap_fee_bps": 45
                  }
                },
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "side": {
                    "type": "string",
                    "enum": [
                      "buy",
                      "sell",
                      "buy_minus",
                      "sell_plus",
                      "sell_short",
                      "sell_short_exempt",
                      "undisclosed",
                      "cross",
                      "cross_short"
                    ],
                    "example": "buy",
                    "description": "Represents what side of the transaction an order was on.",
                    "x-stoplight": {
                      "id": "zrdcas15ugcl7"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "market",
                      "limit",
                      "stop",
                      "stop_limit",
                      "trailing_stop"
                    ],
                    "example": "stop"
                  },
                  "time_in_force": {
                    "type": "string",
                    "enum": [
                      "day",
                      "gtc",
                      "opg",
                      "cls",
                      "ioc",
                      "fok"
                    ],
                    "example": "gtc",
                    "x-stoplight": {
                      "id": "fcff27bvys4gi"
                    }
                  },
                  "notional": {
                    "type": "string"
                  },
                  "swap_fee_bps": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/positions": {
      "get": {
        "summary": "Bulk Fetch All Accounts Positions",
        "tags": [
          "Trading"
        ],
        "responses": {
          "200": {
            "description": "The response contains two fields:\n\nasof: the timestamp for which the positions are returned. It is always the last market close\n\npositions: an account-id to position list map, contains the requested page’s accounts\nThe positions map is empty for the last page.\n\nNote: when fetching bulk positions, which can take multiple minutes depending on the number of accounts managed have, a market close can happen, and after that a new set of results might be returned. To make sure results are consistent, please always check that the as_of field didn’t change during the whole fetching process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "as_of": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "4nvwcf6eps5vb"
                      },
                      "format": "date-time"
                    },
                    "positions": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "yluo5l5ya9i7u"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "as_of": "2022-08-04T16:00:00-04:00",
                      "positions": {
                        "000c8a47-7487-430b-94e1-e628a71cd123": [
                          {
                            "asset_id": "b0b6dd9d-8b9b-48a9-ba46-b9d54906e415",
                            "symbol": "AAPL",
                            "exchange": "NASDAQ",
                            "asset_class": "us_equity",
                            "asset_marginable": true,
                            "qty": "0.079145874",
                            "avg_entry_price": "172.34",
                            "side": "long",
                            "market_value": "13.14850404762",
                            "cost_basis": "13.63999992516",
                            "unrealized_pl": "-0.49149587754",
                            "unrealized_plpc": "-0.0360334223047464",
                            "unrealized_intraday_pl": "0",
                            "unrealized_intraday_plpc": "0",
                            "current_price": "166.13",
                            "lastday_price": "166.13",
                            "change_today": "0",
                            "qty_available": "0.079145874"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-accounts-positions",
        "description": "Retrieves a list of the account’s open positions.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The number of the page of the results to be fetched."
          }
        ]
      }
    },
    "/v1/trading/accounts/{account_id}/account/portfolio/history": {
      "get": {
        "tags": [
          "Trading"
        ],
        "summary": "Get Account Portfolio History",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "account_id",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "period",
            "description": "The duration of the data in `number` + `unit` format, such as 1D, where `unit` can be D for day, W for week, M for month and A for year. Defaults to 1M.\n\nOnly two of `start`, `end` (or `date_end`) and `period` can be specified at the same time.\n\nFor intraday timeframes (\\<1D) only 30 days or less can be queried, for 1D resolutions there is no such limit, data is available since the\ncreation of the account.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timeframe",
            "description": "The resolution of time window. 1Min, 5Min, 15Min, 1H, or 1D. If omitted, 1Min for less than 7 days period,\n15Min for less than 30 days, or otherwise 1D.\n\nFor queries with longer than 30 days of `period`, the system only accepts 1D as `timeframe`.\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "market_hours",
                "extended_hours",
                "continuous"
              ],
              "default": "market_hours"
            },
            "in": "query",
            "name": "intraday_reporting",
            "description": "For intraday resolutions (<1D) this specfies which timestamps to return data points for:\n\nAllowed values are:\n- **market_hours**\n\n  Only timestamps for the core requity trading hours are returned (usually 9:30am to 4:00pm, trading days only)\n\n- **extended_hours**\n\n  Returns timestamps for the whole session including extended hours (usually 4:00am to 8:00pm, trading days only)\n\n- **continuous** **(v2 only)**\n\n  Returns price data points 24/7 (for off-session times too). To calculate the equity values we are using the following prices:\n\n  Between 4:00am and 10:00pm on trading days the valuation will be calculated based on the last trade (extended hours and normal hours respectively). \n\n  After 10:00pm, until the next session open the equities will be valued at their official closing price on the primary exchange.\n\nFor 1D resolutions this specifies when to return the current value of the portfolio as the latest data point:\n\n - **market_hours**\n\n  Append during the core trading hours (usually 9:30am to 4:00pm, trading days only)\n\n- **extended_hours**\n\n  Append during extended hours (usually 4:00am to 8:00pm, trading days only)\n\n- **continuous** **(v2 only)**\n\n  Always append the current equity value.\n"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-16T18:38:01Z"
            },
            "in": "query",
            "name": "start",
            "description": "The timestamp the data is returned starting from in RFC3339 format (including timezone specification).\n\nFor `timeframes` less than 1D, the actual start will be determined based on the value of the `intraday_reporting` query parameter:\n\nFor example if the `intraday_reporting` is `extended_hours`, and the timestamp specified is `2023-10-19T03:30:00-04:00`, then the first\ndata point returned will be `2023-10-19T04:00:00-04:00` due to the session opening at that time.\n\n`start`, `end` (or `date_end`) and `period` cannot be specified at the same time.\n\nIf unset, the `period` will be used to calculate the starting time.\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "no_reset",
                "per_day"
              ],
              "default": "per_day"
            },
            "in": "query",
            "name": "pnl_reset",
            "description": "**(v2 only)** `pnl_reset` defines how we are calculating the baseline values for Profit And Loss (pnl) for queries with `timeframe` less than 1D (intraday queries).\n\nThe default behavior for intraday queries is that we reset the pnl value to the previous day's closing equity for each **trading** day.\n\nIn case of crypto (given it's continous nature), this might not be desired: specifying \"no_reset\" disables this behavior and all pnl values\nreturned will be relative to the closing equity of the previous trading day.\n\nFor 1D resolution all PnL values are calculated relative to the `base_value`, we are not reseting the base value.\n"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-16T18:38:01Z"
            },
            "in": "query",
            "name": "end",
            "description": "The timestamp the data is returned up to in RFC3339 format (including timezone specification).\n\nFor `timeframes` less than 1D, the actual start will be determined based on the value of the `intraday_reporting` query parameter:\n\nFor example if the `intraday_reporting` is `extended_hours`, and the timestamp specified is `2023-10-19T21:33:00-04:00`, then the last\ndata point returned will be `2023-10-19T20:00:00-04:00` due to the session closing at that time.\n\n`start`, `end` (or `date_end`) and `period` cannot be specified at the same time.\n\nIf unset, the current time is considered the `end`'s default value.\n"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-05-15"
            },
            "in": "query",
            "name": "date_end",
            "description": "**deprecated**: please use the end query parameter instead for **better control of the time zone**.\n\nThe date the data is returned up to, in “YYYY-MM-DD” format. Defaults to the current market date (rolls over at the market open if \n`extended_hours` is false, otherwise at 7am ET)\n\nIn continous mode, the returned data is starting from midnight the given day in ET.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "extended_hours",
            "description": "**deprecated**: Users are strongly advised to **rely on the `intraday_reporting` query parameter** for better control \nof the reporting range.\n\nIf true, include extended hours in the result. This is effective only for timeframe less than 1D.\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "v1",
                "v2"
              ]
            },
            "in": "query",
            "name": "force_engine_version",
            "description": "`force_engine_version` can be used to override which version of Portfolio History is used on a per-request basis.\n\nUsing this flag the transition to V2 engine can be governed by the broker partner.\n\n**default value**: the engine version defaults to the engine version set by Alpaca for the correspondent. \n\nAll Portfolio History responses contain the `X-Portfolio-History-Engine-Version` header which will indicate what\nengine version was used to serve the request. This can be either `v1` or `v2`.\n\nThis flag is only provided for the duration of `v1` to `v2` migration, afterwards it will be accepted, but\nwon't have any effect on the query.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PortfolioHistory",
                  "description": "Timeseries data for equity and profit loss information of the account.",
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "array",
                      "description": "Time of each data element, left-labeled (the beginning of time window).\n\nThe values returned are in [UNIX epoch format](https://en.wikipedia.org/wiki/Unix_time).\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "equity": {
                      "type": "array",
                      "description": "equity value of the account in dollar amount as of the end of each time window",
                      "items": {
                        "type": "number"
                      }
                    },
                    "profit_loss": {
                      "type": "array",
                      "description": "profit/loss in dollar from the base value",
                      "items": {
                        "type": "number"
                      }
                    },
                    "profit_loss_pct": {
                      "type": "array",
                      "description": "profit/loss in percentage from the base value",
                      "items": {
                        "type": "number"
                      },
                      "example": [
                        0.001,
                        0.002
                      ]
                    },
                    "base_value": {
                      "type": "number",
                      "description": "basis in dollar of the profit loss calculation"
                    },
                    "base_value_asof": {
                      "type": "string",
                      "format": "date",
                      "example": "2023-10-20",
                      "description": "If included, then it indicates that the base_value is the account's closing \nequity value at this trading date.\n\nIf not specified, then the baseline calculation is done against the earliest returned data item. This could happen for\naccounts without prior closing balances (e.g. new account) or for queries with 1D timeframes, where the first data point\nis used as a reference point.\n"
                    },
                    "timeframe": {
                      "type": "string",
                      "description": "time window size of each data element",
                      "example": "15Min"
                    }
                  },
                  "required": [
                    "timestamp",
                    "equity",
                    "profit_loss",
                    "profit_loss_pct",
                    "base_value",
                    "timeframe"
                  ],
                  "x-examples": {
                    "example-intraday-query-15min-1d": {
                      "timestamp": [
                        1697722200,
                        1697723100,
                        1697724000,
                        1697724900,
                        1697725800,
                        1697726700,
                        1697727600,
                        1697728500,
                        1697729400,
                        1697730300,
                        1697731200,
                        1697732100,
                        1697733000,
                        1697733900,
                        1697734800,
                        1697735700,
                        1697736600,
                        1697737500,
                        1697738400,
                        1697739300,
                        1697740200,
                        1697741100,
                        1697742000,
                        1697742900,
                        1697743800,
                        1697744700,
                        1697745600
                      ],
                      "equity": [
                        2773.79,
                        2769.04,
                        2768.65,
                        2765.11,
                        2763.03,
                        2763.17,
                        2763.17,
                        2763.47,
                        2763.91,
                        2768.13,
                        2774.98,
                        2757.94,
                        2757.65,
                        2774.54,
                        2775.58,
                        2775.28,
                        2767.9,
                        2762.26,
                        2762.56,
                        2756.99,
                        2756.84,
                        2752.43,
                        2752.13,
                        2748.44,
                        2751.23,
                        2747.54,
                        2748.74
                      ],
                      "profit_loss": [
                        -0.37,
                        -5.12,
                        -5.51,
                        -9.05,
                        -11.13,
                        -10.99,
                        -10.99,
                        -10.69,
                        -10.25,
                        -6.03,
                        0.82,
                        -16.22,
                        -16.51,
                        0.38,
                        1.42,
                        1.12,
                        -6.26,
                        -11.9,
                        -11.6,
                        -17.17,
                        -17.32,
                        -21.73,
                        -22.03,
                        -25.72,
                        -22.93,
                        -26.62,
                        -25.42
                      ],
                      "profit_loss_pct": [
                        -0.0001,
                        -0.0018,
                        -0.002,
                        -0.0033,
                        -0.004,
                        -0.004,
                        -0.004,
                        -0.0039,
                        -0.0037,
                        -0.0022,
                        0.0003,
                        -0.0058,
                        -0.006,
                        0.0001,
                        0.0005,
                        0.0004,
                        -0.0023,
                        -0.0043,
                        -0.0042,
                        -0.0062,
                        -0.0062,
                        -0.0078,
                        -0.0079,
                        -0.0093,
                        -0.0083,
                        -0.0096,
                        -0.0092
                      ],
                      "base_value": 2774.16,
                      "base_value_asof": "2023-10-18",
                      "timeframe": "15Min"
                    },
                    "example-query-1d-7d": {
                      "timestamp": [
                        1697241600,
                        1697500800,
                        1697587200,
                        1697673600,
                        1697760000
                      ],
                      "equity": [
                        2784.79,
                        2794.79,
                        2805.46,
                        2774.16,
                        2748.73
                      ],
                      "profit_loss": [
                        0,
                        10.0022,
                        10.6692,
                        -31.2996,
                        -25.4232
                      ],
                      "profit_loss_pct": [
                        0,
                        0.0035,
                        0.0074,
                        -0.0038,
                        -0.0129
                      ],
                      "base_value": 2784.79,
                      "timeframe": "1D"
                    }
                  },
                  "x-stoplight": {
                    "id": "kjmp5ewl4g6k3"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-trading-accounts-account_id-account-portfolio-history",
        "description": "Returns timeseries data about equity and profit/loss (P/L) of the account in requested timespan."
      }
    },
    "/v1/trading/accounts/{account_id}/watchlists/{watchlist_id}/{symbol}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "Account identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "watchlist_id",
          "in": "path",
          "required": true,
          "description": "The Watchlist ID"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "symbol",
          "in": "path",
          "required": true,
          "description": "The symbol "
        }
      ],
      "delete": {
        "summary": "Remove a Symbol from a Watchlist",
        "tags": [
          "Watchlist"
        ],
        "operationId": "delete-DELETE-v1-trading-accounts-account_id-watchlists-watchlist_id-symbol",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "The requested watchlist is not found"
          }
        },
        "description": "Delete one entry for an asset by symbol name"
      }
    },
    "/v1/trading/accounts/{account_id}/account/configurations": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update Trading Configurations for an Account",
        "tags": [
          "Trading"
        ],
        "operationId": "patch-PATCH-v1-trading-accounts-account_id-account-configurations",
        "responses": {
          "200": {
            "description": "Response will contain the account configuration settings for the account.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AccountConfigurations",
                  "type": "object",
                  "description": "Represents additional configuration settings for an account",
                  "x-stoplight": {
                    "id": "rs80h7z1vg3or"
                  },
                  "properties": {
                    "dtbp_check": {
                      "type": "string",
                      "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
                      "example": "both",
                      "enum": [
                        "both",
                        "entry",
                        "exit"
                      ]
                    },
                    "trade_confirm_email": {
                      "type": "string",
                      "description": "all or none. If none, emails for order fills are not sent.",
                      "enum": [
                        "all",
                        "none"
                      ]
                    },
                    "suspend_trade": {
                      "type": "boolean",
                      "description": "If true, new orders are blocked."
                    },
                    "no_shorting": {
                      "type": "boolean",
                      "description": "If true, account becomes long-only mode."
                    },
                    "fractional_trading": {
                      "type": "boolean",
                      "description": "If true, account is able to participate in fractional trading"
                    },
                    "max_margin_multiplier": {
                      "type": "string",
                      "description": "Can be \"1\" or \"2\""
                    },
                    "pdt_check": {
                      "type": "string",
                      "example": "entry"
                    },
                    "ptp_no_exception_entry": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "b2q93748qni2e"
                      },
                      "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
                    }
                  },
                  "required": [
                    "dtbp_check",
                    "trade_confirm_email",
                    "suspend_trade",
                    "no_shorting",
                    "fractional_trading",
                    "max_margin_multiplier",
                    "pdt_check",
                    "ptp_no_exception_entry"
                  ]
                }
              }
            }
          }
        },
        "description": "You can also set the margin settings for your users’ account by passing a PATCH request. By default any account with funds under $2,000 is set a margin multiplier of 1.0, and accounts with over $2,000 are set to 2.0.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "AccountConfigurations",
                "type": "object",
                "description": "Represents additional configuration settings for an account",
                "x-stoplight": {
                  "id": "rs80h7z1vg3or"
                },
                "properties": {
                  "dtbp_check": {
                    "type": "string",
                    "description": "both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.",
                    "example": "both",
                    "enum": [
                      "both",
                      "entry",
                      "exit"
                    ]
                  },
                  "trade_confirm_email": {
                    "type": "string",
                    "description": "all or none. If none, emails for order fills are not sent.",
                    "enum": [
                      "all",
                      "none"
                    ]
                  },
                  "suspend_trade": {
                    "type": "boolean",
                    "description": "If true, new orders are blocked."
                  },
                  "no_shorting": {
                    "type": "boolean",
                    "description": "If true, account becomes long-only mode."
                  },
                  "fractional_trading": {
                    "type": "boolean",
                    "description": "If true, account is able to participate in fractional trading"
                  },
                  "max_margin_multiplier": {
                    "type": "string",
                    "description": "Can be \"1\" or \"2\""
                  },
                  "pdt_check": {
                    "type": "string",
                    "example": "entry"
                  },
                  "ptp_no_exception_entry": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "b2q93748qni2e"
                    },
                    "description": "If set to true then Alpaca will accept orders for PTP symbols with no exception. Default is false."
                  }
                },
                "required": [
                  "dtbp_check",
                  "trade_confirm_email",
                  "suspend_trade",
                  "no_shorting",
                  "fractional_trading",
                  "max_margin_multiplier",
                  "pdt_check",
                  "ptp_no_exception_entry"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/rebalancing/portfolios": {
      "get": {
        "summary": "List Portfolios",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "Array of Portfolios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Portfolio",
                    "x-stoplight": {
                      "id": "fmog87vwh0ufj"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Portfolio ID"
                      },
                      "name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "js7w7q6882lci"
                        },
                        "description": "Name of portfolio"
                      },
                      "status": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "n83qg43to8usu"
                        },
                        "description": "Current status of portfolio"
                      },
                      "description": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "0kpa55c7vtowj"
                        },
                        "description": "Text to describe portfolio"
                      },
                      "weights": {
                        "type": "array",
                        "x-stoplight": {
                          "id": "tc4yqvolhyk6k"
                        },
                        "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
                        "items": {
                          "title": "PortfolioWeights",
                          "x-stoplight": {
                            "id": "alpltc9n7bi9j"
                          },
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "7xfg4b1oj2sbw"
                              },
                              "description": "Possible values of cash or asset"
                            },
                            "symbol": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "wupeosw0tkf1x"
                              },
                              "description": "Must be fractionable asset. Only provided if type = “asset”"
                            },
                            "percent": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "yxgkifes2yzr0"
                              },
                              "description": "Must be a positive value, up to two decimal places"
                            }
                          }
                        }
                      },
                      "cooldown_days": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "zdwrgssm6qy43"
                        },
                        "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
                      },
                      "rebalancing_conditions": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "qb75cbb4u1i90"
                        },
                        "description": "Rebalancing conditions for portfolio"
                      },
                      "created_at": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "aq79n954xgv8l"
                        },
                        "description": "Portfolio creation timestamp"
                      },
                      "updated_at": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "tfmbwhsply5a2"
                        },
                        "description": "Portfolio updated timestamp"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-portfolios",
        "description": "Lists portfolios.\n\nWhen more than one query parameter is passed, only portfolios meeting all provided values will be returned (logical AND between parameter values).",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Name of portfolio"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Description of portfolio"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "symbol",
            "description": "Symbol included in portfolio"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "portfolio_id",
            "description": "Portfolio ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Portfolio Status"
          }
        ]
      },
      "post": {
        "summary": "Create Portfolio",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "post-v1-rebalancing-portfolios",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Portfolio",
                  "x-stoplight": {
                    "id": "fmog87vwh0ufj"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Portfolio ID"
                    },
                    "name": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "js7w7q6882lci"
                      },
                      "description": "Name of portfolio"
                    },
                    "status": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "n83qg43to8usu"
                      },
                      "description": "Current status of portfolio"
                    },
                    "description": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0kpa55c7vtowj"
                      },
                      "description": "Text to describe portfolio"
                    },
                    "weights": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "tc4yqvolhyk6k"
                      },
                      "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
                      "items": {
                        "title": "PortfolioWeights",
                        "x-stoplight": {
                          "id": "alpltc9n7bi9j"
                        },
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "7xfg4b1oj2sbw"
                            },
                            "description": "Possible values of cash or asset"
                          },
                          "symbol": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "wupeosw0tkf1x"
                            },
                            "description": "Must be fractionable asset. Only provided if type = “asset”"
                          },
                          "percent": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yxgkifes2yzr0"
                            },
                            "description": "Must be a positive value, up to two decimal places"
                          }
                        }
                      }
                    },
                    "cooldown_days": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "zdwrgssm6qy43"
                      },
                      "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
                    },
                    "rebalancing_conditions": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "qb75cbb4u1i90"
                      },
                      "description": "Rebalancing conditions for portfolio"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "aq79n954xgv8l"
                      },
                      "description": "Portfolio creation timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "tfmbwhsply5a2"
                      },
                      "description": "Portfolio updated timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a portfolio allocation containing securities and/or cash. Having no rebalancing conditions is allowed but the rebalance event would need to be triggered manually. Portfolios created with API may have multiple rebalance_conditions, but only one of type calendar.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "fsltdl41ae1xd"
                    },
                    "description": "Name of portfolio"
                  },
                  "description": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "o0u18pq91rr58"
                    },
                    "description": "Text to describe portfolio"
                  },
                  "weights": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "eg3up2qlst7yz"
                    },
                    "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
                    "items": {
                      "title": "PortfolioWeights",
                      "x-stoplight": {
                        "id": "alpltc9n7bi9j"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "7xfg4b1oj2sbw"
                          },
                          "description": "Possible values of cash or asset"
                        },
                        "symbol": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "wupeosw0tkf1x"
                          },
                          "description": "Must be fractionable asset. Only provided if type = “asset”"
                        },
                        "percent": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yxgkifes2yzr0"
                          },
                          "description": "Must be a positive value, up to two decimal places"
                        }
                      }
                    }
                  },
                  "cooldown_days": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "cx9wgk8f71ipb"
                    },
                    "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
                  },
                  "rebalance_conditions": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "y1tx9a759snoo"
                    },
                    "description": "Rebalancing conditions for portfolio",
                    "items": {
                      "title": "RebalancingConditions",
                      "x-stoplight": {
                        "id": "i4rbs4yru2m5b"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yw99dm6g7gy0a"
                          },
                          "description": "Possible values of drift_band or calendar"
                        },
                        "sub_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "xrefv8k8riuqi"
                          },
                          "description": "For type = drift_band: absolute or relative. For type = calendar: weekly,monthly, quarterly or annually"
                        },
                        "percent": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "n1iwthxr6ktka"
                          },
                          "description": "Must be a positive value, up to two decimal places. Only permitted and required for type = drift_band. This is the max allowable drift percent from any target weight (+/-)"
                        },
                        "day": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "wr2y2qbyu15ty"
                          },
                          "description": "Used to specify the rebalancing day for conditions of type = calendar. Only permitted and required for type = calendar. In scenarios when the specified day aligns to a non-trading day, the rebalance will be triggered on the preceding trading day. For type= annually, the value must be passed in MM-DD format. If 02-29 is specified and the current year is not a leap year, the rebalance will occur on the trading day preceding 2/29. For type= quarterly and monthly the value must be an integer between 1 and 31 inclusive. This represents the day of month. For quarterly, rebalancing will trigger on this day in January, March, June, and December. If the specified day is non-existent for the month then the rebalancing will trigger on the preceding trading day. For type = weekly, permitted values are Monday, Tuesday, Wednesday, Thursday, Friday."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/v1/rebalancing/portfolios/{portfolio_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "portfolio_id",
          "in": "path",
          "required": true,
          "description": "The Portfolio ID"
        }
      ],
      "get": {
        "summary": "Get Portfolio by ID",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Portfolio",
                  "x-stoplight": {
                    "id": "fmog87vwh0ufj"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Portfolio ID"
                    },
                    "name": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "js7w7q6882lci"
                      },
                      "description": "Name of portfolio"
                    },
                    "status": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "n83qg43to8usu"
                      },
                      "description": "Current status of portfolio"
                    },
                    "description": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0kpa55c7vtowj"
                      },
                      "description": "Text to describe portfolio"
                    },
                    "weights": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "tc4yqvolhyk6k"
                      },
                      "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
                      "items": {
                        "title": "PortfolioWeights",
                        "x-stoplight": {
                          "id": "alpltc9n7bi9j"
                        },
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "7xfg4b1oj2sbw"
                            },
                            "description": "Possible values of cash or asset"
                          },
                          "symbol": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "wupeosw0tkf1x"
                            },
                            "description": "Must be fractionable asset. Only provided if type = “asset”"
                          },
                          "percent": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yxgkifes2yzr0"
                            },
                            "description": "Must be a positive value, up to two decimal places"
                          }
                        }
                      }
                    },
                    "cooldown_days": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "zdwrgssm6qy43"
                      },
                      "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
                    },
                    "rebalancing_conditions": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "qb75cbb4u1i90"
                      },
                      "description": "Rebalancing conditions for portfolio"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "aq79n954xgv8l"
                      },
                      "description": "Portfolio creation timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "tfmbwhsply5a2"
                      },
                      "description": "Portfolio updated timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-portfolios-portfolio_id",
        "description": "Get a portfolio by its ID."
      },
      "patch": {
        "summary": "Update Portfolio by ID",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "patch-v1-rebalancing-portfolios-portfolio_id",
        "responses": {
          "200": {
            "description": "The updated portfolio",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Portfolio",
                  "x-stoplight": {
                    "id": "fmog87vwh0ufj"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Portfolio ID"
                    },
                    "name": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "js7w7q6882lci"
                      },
                      "description": "Name of portfolio"
                    },
                    "status": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "n83qg43to8usu"
                      },
                      "description": "Current status of portfolio"
                    },
                    "description": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0kpa55c7vtowj"
                      },
                      "description": "Text to describe portfolio"
                    },
                    "weights": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "tc4yqvolhyk6k"
                      },
                      "description": "Weight configuration to portfolio. Sum of “percent” values in the weights array must be 100.00",
                      "items": {
                        "title": "PortfolioWeights",
                        "x-stoplight": {
                          "id": "alpltc9n7bi9j"
                        },
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "7xfg4b1oj2sbw"
                            },
                            "description": "Possible values of cash or asset"
                          },
                          "symbol": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "wupeosw0tkf1x"
                            },
                            "description": "Must be fractionable asset. Only provided if type = “asset”"
                          },
                          "percent": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yxgkifes2yzr0"
                            },
                            "description": "Must be a positive value, up to two decimal places"
                          }
                        }
                      }
                    },
                    "cooldown_days": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "zdwrgssm6qy43"
                      },
                      "description": "Count of calendar days following a rebalance before a subscription is eligible to trigger another rebalance"
                    },
                    "rebalancing_conditions": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "qb75cbb4u1i90"
                      },
                      "description": "Rebalancing conditions for portfolio"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "aq79n954xgv8l"
                      },
                      "description": "Portfolio creation timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "tfmbwhsply5a2"
                      },
                      "description": "Portfolio updated timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a portfolio. If weights or conditions are changed, all subscribed accounts will be evaluated for rebalancing at the next opportunity (normal market hours). If a cooldown is active on the portfolio, the rebalancing will occur after the cooldown expired.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "7fuld928yxavq"
                    },
                    "description": "Used to update portfolio name."
                  },
                  "description": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "8jk2p1rddsjkf"
                    },
                    "description": "Used to update portfolio description."
                  },
                  "weights": {
                    "x-stoplight": {
                      "id": "wgbbes9sen8w6"
                    },
                    "type": "array",
                    "description": "Used to update portfolio weights.",
                    "items": {
                      "title": "PortfolioWeights",
                      "x-stoplight": {
                        "id": "alpltc9n7bi9j"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "7xfg4b1oj2sbw"
                          },
                          "description": "Possible values of cash or asset"
                        },
                        "symbol": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "wupeosw0tkf1x"
                          },
                          "description": "Must be fractionable asset. Only provided if type = “asset”"
                        },
                        "percent": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yxgkifes2yzr0"
                          },
                          "description": "Must be a positive value, up to two decimal places"
                        }
                      }
                    }
                  },
                  "rebalancing_conditions": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "f8fw54c4u1hb4"
                    },
                    "description": "Used to update portfolio conditions.",
                    "items": {
                      "title": "RebalancingConditions",
                      "x-stoplight": {
                        "id": "i4rbs4yru2m5b"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "yw99dm6g7gy0a"
                          },
                          "description": "Possible values of drift_band or calendar"
                        },
                        "sub_type": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "xrefv8k8riuqi"
                          },
                          "description": "For type = drift_band: absolute or relative. For type = calendar: weekly,monthly, quarterly or annually"
                        },
                        "percent": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "n1iwthxr6ktka"
                          },
                          "description": "Must be a positive value, up to two decimal places. Only permitted and required for type = drift_band. This is the max allowable drift percent from any target weight (+/-)"
                        },
                        "day": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "wr2y2qbyu15ty"
                          },
                          "description": "Used to specify the rebalancing day for conditions of type = calendar. Only permitted and required for type = calendar. In scenarios when the specified day aligns to a non-trading day, the rebalance will be triggered on the preceding trading day. For type= annually, the value must be passed in MM-DD format. If 02-29 is specified and the current year is not a leap year, the rebalance will occur on the trading day preceding 2/29. For type= quarterly and monthly the value must be an integer between 1 and 31 inclusive. This represents the day of month. For quarterly, rebalancing will trigger on this day in January, March, June, and December. If the specified day is non-existent for the month then the rebalancing will trigger on the preceding trading day. For type = weekly, permitted values are Monday, Tuesday, Wednesday, Thursday, Friday."
                        }
                      }
                    }
                  },
                  "cooldown_days": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "zijb6bfo981m5"
                    },
                    "description": "Used to update portfolio cooldown days."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Inactivate Portfolio By ID",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "delete-v1-rebalancing-portfolios-portfolio_id",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity "
          }
        },
        "description": "Sets a portfolio to “inactive”, so it can be filtered out of the list request. Only permitted if there are no active subscriptions to this portfolio and this portfolio is not a listed in the weights of any active portfolios.\n\nInactive portfolios cannot be linked in new subscriptions or added as weights to new portfolios."
      }
    },
    "/v1/rebalancing/subscriptions": {
      "get": {
        "summary": "List All Subscriptions",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PortfolioSubscription",
                  "x-stoplight": {
                    "id": "ldbnrrt7wnoke"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Subscription ID"
                    },
                    "account_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "phfwv1q9wabod"
                      },
                      "description": "Account ID subscribing to portfolio"
                    },
                    "portfolio_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "07c4juxi9n3d6"
                      },
                      "description": "Portfolio ID for subscription"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0difpd7n53ewk"
                      },
                      "description": "Subscription creation timestamp",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "shzmstps2m4j0"
                      },
                      "description": "Subscription updated timestamp",
                      "format": "date-time"
                    },
                    "last_rebalanced_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "vda454kksiutp"
                      },
                      "description": "Last rebalancing event for this subscription. Can be null."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-subscriptions",
        "description": "Lists subscriptions",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "account_id",
            "description": "Any subscriptions for this account_id will be returned"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "portfolio_id",
            "description": "Portfolio ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page_token",
            "description": "Pagination token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Max number of subscriptions to return per page"
          }
        ]
      },
      "post": {
        "summary": "Create Subscription",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "post-v1-rebalancing-subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PortfolioSubscription",
                  "x-stoplight": {
                    "id": "ldbnrrt7wnoke"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Subscription ID"
                    },
                    "account_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "phfwv1q9wabod"
                      },
                      "description": "Account ID subscribing to portfolio"
                    },
                    "portfolio_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "07c4juxi9n3d6"
                      },
                      "description": "Portfolio ID for subscription"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0difpd7n53ewk"
                      },
                      "description": "Subscription creation timestamp",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "shzmstps2m4j0"
                      },
                      "description": "Subscription updated timestamp",
                      "format": "date-time"
                    },
                    "last_rebalanced_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "vda454kksiutp"
                      },
                      "description": "Last rebalancing event for this subscription. Can be null."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a subscription between an account and a portfolio.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "org99c0oum746"
                    },
                    "description": "Account ID. Account must be active and the account must not have any active subscriptions already (only 1 is permitted at a time)"
                  },
                  "portfolio_id": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "7ybyckn6mlpcf"
                    },
                    "description": "Portfolio ID. Portfolio must be active"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/v1/rebalancing/subscriptions/{subscription_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "subscription_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Subscription by ID",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "The portfolio subscription",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PortfolioSubscription",
                  "x-stoplight": {
                    "id": "ldbnrrt7wnoke"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Subscription ID"
                    },
                    "account_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "phfwv1q9wabod"
                      },
                      "description": "Account ID subscribing to portfolio"
                    },
                    "portfolio_id": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "07c4juxi9n3d6"
                      },
                      "description": "Portfolio ID for subscription"
                    },
                    "created_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0difpd7n53ewk"
                      },
                      "description": "Subscription creation timestamp",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "shzmstps2m4j0"
                      },
                      "description": "Subscription updated timestamp",
                      "format": "date-time"
                    },
                    "last_rebalanced_at": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "vda454kksiutp"
                      },
                      "description": "Last rebalancing event for this subscription. Can be null."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-subscriptions-subscription_id",
        "description": "Get a subscription by its ID."
      },
      "delete": {
        "summary": "Unsubscribe Account (Delete Subscription)",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "delete-v1-rebalancing-subscriptions-subscription_id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Deletes the subscription which stops the rebalancing of an account."
      }
    },
    "/v1/rebalancing/runs": {
      "get": {
        "summary": "List All Runs",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "The runs which match the query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PortfolioRun"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-runs",
        "description": "Lists runs.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "account_id",
            "description": "Any subscriptions for this account_id will be returned"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Type of portfolio run (full_rebalance, invest_cash)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page_token",
            "description": "Pagination token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Max number of subscriptions to return per page"
          }
        ]
      },
      "post": {
        "summary": "Create Run (Manual rebalancing event)",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "post-v1-rebalancing-runs",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Manually creates a run.\n\nThe determination of a run’s orders and the execution of a run take place during normal market hours\n\nRuns can be initiated either by the system (when the system evaluates the rebalance conditions specified at the portfolio level) or by API call (manual run creation using POST /v1/rebalancing/runs). Runs can be initiated manually outside of the normal market hours but will remain in the QUEUED status until normal market hours\n\nOnly 1 run in a non-terminal status is allowed at any time.\n\nManually executing a run is currently only allowed for accounts who do not have an active subscription.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "account_id": "bf2b0f93-f296-4276-a9cf-288586cf4fb7",
                    "type": "full_rebalance",
                    "weights": [
                      {
                        "type": "asset",
                        "symbol": "AAPL",
                        "percent": "35"
                      },
                      {
                        "type": "asset",
                        "symbol": "TSLA",
                        "percent": "20"
                      },
                      {
                        "type": "asset",
                        "symbol": "SPY",
                        "percent": "45"
                      }
                    ]
                  }
                },
                "properties": {
                  "account_id": {
                    "type": "string",
                    "description": "The account to create the run for."
                  },
                  "type": {
                    "type": "string",
                    "description": "`full_rebalance` or `invest_cash`"
                  },
                  "weights": {
                    "title": "PortfolioWeights",
                    "x-stoplight": {
                      "id": "alpltc9n7bi9j"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "7xfg4b1oj2sbw"
                        },
                        "description": "Possible values of cash or asset"
                      },
                      "symbol": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "wupeosw0tkf1x"
                        },
                        "description": "Must be fractionable asset. Only provided if type = “asset”"
                      },
                      "percent": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "yxgkifes2yzr0"
                        },
                        "description": "Must be a positive value, up to two decimal places"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rebalancing/runs/{run_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "run_id",
          "in": "path",
          "required": true,
          "description": "the id of the portfolio run"
        }
      ],
      "get": {
        "summary": "Get Run by ID",
        "tags": [
          "Rebalancing"
        ],
        "responses": {
          "200": {
            "description": "The run object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioRun"
                }
              }
            }
          }
        },
        "operationId": "get-v1-rebalancing-runs-run_id",
        "description": "Get a run by its ID."
      },
      "delete": {
        "summary": "Cancel Run by ID",
        "tags": [
          "Rebalancing"
        ],
        "operationId": "delete-v1-rebalancing-runs-run_id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Cancels a run. Only runs within certain statuses (QUEUED, CANCELED, SELLS_IN_PROGRESS, BUYS_IN_PROGRESS) are cancelable. If this endpoint is called after orders have been submitted, we’ll attempt to cancel the orders."
      }
    },
    "/v1/accounts/{account_id}/actions/close": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "The id of the account to be closed"
        }
      ],
      "post": {
        "summary": "Close an Account",
        "tags": [
          "Accounts"
        ],
        "operationId": "post-v1-accounts-account_id-actions-close",
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Account Not Found"
          }
        },
        "description": "This operation closes an active account. The underlying records and information of the account are not deleted by this operation.\n\n**Before closing an account, you are responsible for closing all the positions and withdrawing all the money associated with that account. Learn more in the Positions Documentation.**"
      }
    },
    "/POST /v1/accounts/{account_id}/actions/reopen": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "account_id",
          "in": "path",
          "required": true,
          "description": "The id of the account to be reopened."
        }
      ],
      "post": {
        "summary": "Reopen a Closed Account",
        "tags": [
          "Accounts"
        ],
        "operationId": "post-POST-v1-accounts-account_id-actions-reopen",
        "responses": {
          "200": {
            "description": "If the request is succesfully processed it returns with status code 200. The response is the account model."
          },
          "404": {
            "description": "Account Not Found"
          }
        },
        "description": "This operation re-activates an account that is in the `ACCOUNT_CLOSED` status. Currently, this is only available if you are working with the CIP API setup and it requires a CIP document to be uploaded to the account within at least 30 days of the attempt to reopen the account."
      }
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": false
  }
}